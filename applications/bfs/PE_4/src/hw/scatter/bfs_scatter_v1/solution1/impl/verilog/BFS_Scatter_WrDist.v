// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module BFS_Scatter_WrDist (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        tmp_dist_0_address0,
        tmp_dist_0_ce0,
        tmp_dist_0_q0,
        tmp_dist_1_address0,
        tmp_dist_1_ce0,
        tmp_dist_1_q0,
        tmp_dist_2_address0,
        tmp_dist_2_ce0,
        tmp_dist_2_q0,
        tmp_dist_3_address0,
        tmp_dist_3_ce0,
        tmp_dist_3_q0,
        tmp_dist_4_address0,
        tmp_dist_4_ce0,
        tmp_dist_4_q0,
        tmp_dist_5_address0,
        tmp_dist_5_ce0,
        tmp_dist_5_q0,
        tmp_dist_6_address0,
        tmp_dist_6_ce0,
        tmp_dist_6_q0,
        tmp_dist_7_address0,
        tmp_dist_7_ce0,
        tmp_dist_7_q0,
        tmp_dist_8_address0,
        tmp_dist_8_ce0,
        tmp_dist_8_q0,
        tmp_dist_9_address0,
        tmp_dist_9_ce0,
        tmp_dist_9_q0,
        tmp_dist_10_address0,
        tmp_dist_10_ce0,
        tmp_dist_10_q0,
        tmp_dist_11_address0,
        tmp_dist_11_ce0,
        tmp_dist_11_q0,
        tmp_dist_12_address0,
        tmp_dist_12_ce0,
        tmp_dist_12_q0,
        tmp_dist_13_address0,
        tmp_dist_13_ce0,
        tmp_dist_13_q0,
        tmp_dist_14_address0,
        tmp_dist_14_ce0,
        tmp_dist_14_q0,
        tmp_dist_15_address0,
        tmp_dist_15_ce0,
        tmp_dist_15_q0,
        tmp_dist_16_address0,
        tmp_dist_16_ce0,
        tmp_dist_16_q0,
        tmp_dist_17_address0,
        tmp_dist_17_ce0,
        tmp_dist_17_q0,
        tmp_dist_18_address0,
        tmp_dist_18_ce0,
        tmp_dist_18_q0,
        tmp_dist_19_address0,
        tmp_dist_19_ce0,
        tmp_dist_19_q0,
        tmp_dist_20_address0,
        tmp_dist_20_ce0,
        tmp_dist_20_q0,
        tmp_dist_21_address0,
        tmp_dist_21_ce0,
        tmp_dist_21_q0,
        tmp_dist_22_address0,
        tmp_dist_22_ce0,
        tmp_dist_22_q0,
        tmp_dist_23_address0,
        tmp_dist_23_ce0,
        tmp_dist_23_q0,
        tmp_dist_24_address0,
        tmp_dist_24_ce0,
        tmp_dist_24_q0,
        tmp_dist_25_address0,
        tmp_dist_25_ce0,
        tmp_dist_25_q0,
        tmp_dist_26_address0,
        tmp_dist_26_ce0,
        tmp_dist_26_q0,
        tmp_dist_27_address0,
        tmp_dist_27_ce0,
        tmp_dist_27_q0,
        tmp_dist_28_address0,
        tmp_dist_28_ce0,
        tmp_dist_28_q0,
        tmp_dist_29_address0,
        tmp_dist_29_ce0,
        tmp_dist_29_q0,
        tmp_dist_30_address0,
        tmp_dist_30_ce0,
        tmp_dist_30_q0,
        tmp_dist_31_address0,
        tmp_dist_31_ce0,
        tmp_dist_31_q0,
        wr_port_TDATA,
        wr_port_TVALID,
        wr_port_TREADY,
        wr_port_TKEEP,
        wr_port_TSTRB,
        wr_port_TLAST,
        idx
);

parameter    ap_ST_fsm_state1 = 18'd1;
parameter    ap_ST_fsm_pp0_stage0 = 18'd2;
parameter    ap_ST_fsm_pp0_stage1 = 18'd4;
parameter    ap_ST_fsm_pp0_stage2 = 18'd8;
parameter    ap_ST_fsm_pp0_stage3 = 18'd16;
parameter    ap_ST_fsm_pp0_stage4 = 18'd32;
parameter    ap_ST_fsm_pp0_stage5 = 18'd64;
parameter    ap_ST_fsm_pp0_stage6 = 18'd128;
parameter    ap_ST_fsm_pp0_stage7 = 18'd256;
parameter    ap_ST_fsm_pp0_stage8 = 18'd512;
parameter    ap_ST_fsm_pp0_stage9 = 18'd1024;
parameter    ap_ST_fsm_pp0_stage10 = 18'd2048;
parameter    ap_ST_fsm_pp0_stage11 = 18'd4096;
parameter    ap_ST_fsm_pp0_stage12 = 18'd8192;
parameter    ap_ST_fsm_pp0_stage13 = 18'd16384;
parameter    ap_ST_fsm_pp0_stage14 = 18'd32768;
parameter    ap_ST_fsm_pp0_stage15 = 18'd65536;
parameter    ap_ST_fsm_state19 = 18'd131072;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [11:0] tmp_dist_0_address0;
output   tmp_dist_0_ce0;
input  [63:0] tmp_dist_0_q0;
output  [11:0] tmp_dist_1_address0;
output   tmp_dist_1_ce0;
input  [63:0] tmp_dist_1_q0;
output  [11:0] tmp_dist_2_address0;
output   tmp_dist_2_ce0;
input  [63:0] tmp_dist_2_q0;
output  [11:0] tmp_dist_3_address0;
output   tmp_dist_3_ce0;
input  [63:0] tmp_dist_3_q0;
output  [11:0] tmp_dist_4_address0;
output   tmp_dist_4_ce0;
input  [63:0] tmp_dist_4_q0;
output  [11:0] tmp_dist_5_address0;
output   tmp_dist_5_ce0;
input  [63:0] tmp_dist_5_q0;
output  [11:0] tmp_dist_6_address0;
output   tmp_dist_6_ce0;
input  [63:0] tmp_dist_6_q0;
output  [11:0] tmp_dist_7_address0;
output   tmp_dist_7_ce0;
input  [63:0] tmp_dist_7_q0;
output  [11:0] tmp_dist_8_address0;
output   tmp_dist_8_ce0;
input  [63:0] tmp_dist_8_q0;
output  [11:0] tmp_dist_9_address0;
output   tmp_dist_9_ce0;
input  [63:0] tmp_dist_9_q0;
output  [11:0] tmp_dist_10_address0;
output   tmp_dist_10_ce0;
input  [63:0] tmp_dist_10_q0;
output  [11:0] tmp_dist_11_address0;
output   tmp_dist_11_ce0;
input  [63:0] tmp_dist_11_q0;
output  [11:0] tmp_dist_12_address0;
output   tmp_dist_12_ce0;
input  [63:0] tmp_dist_12_q0;
output  [11:0] tmp_dist_13_address0;
output   tmp_dist_13_ce0;
input  [63:0] tmp_dist_13_q0;
output  [11:0] tmp_dist_14_address0;
output   tmp_dist_14_ce0;
input  [63:0] tmp_dist_14_q0;
output  [11:0] tmp_dist_15_address0;
output   tmp_dist_15_ce0;
input  [63:0] tmp_dist_15_q0;
output  [11:0] tmp_dist_16_address0;
output   tmp_dist_16_ce0;
input  [63:0] tmp_dist_16_q0;
output  [11:0] tmp_dist_17_address0;
output   tmp_dist_17_ce0;
input  [63:0] tmp_dist_17_q0;
output  [11:0] tmp_dist_18_address0;
output   tmp_dist_18_ce0;
input  [63:0] tmp_dist_18_q0;
output  [11:0] tmp_dist_19_address0;
output   tmp_dist_19_ce0;
input  [63:0] tmp_dist_19_q0;
output  [11:0] tmp_dist_20_address0;
output   tmp_dist_20_ce0;
input  [63:0] tmp_dist_20_q0;
output  [11:0] tmp_dist_21_address0;
output   tmp_dist_21_ce0;
input  [63:0] tmp_dist_21_q0;
output  [11:0] tmp_dist_22_address0;
output   tmp_dist_22_ce0;
input  [63:0] tmp_dist_22_q0;
output  [11:0] tmp_dist_23_address0;
output   tmp_dist_23_ce0;
input  [63:0] tmp_dist_23_q0;
output  [11:0] tmp_dist_24_address0;
output   tmp_dist_24_ce0;
input  [63:0] tmp_dist_24_q0;
output  [11:0] tmp_dist_25_address0;
output   tmp_dist_25_ce0;
input  [63:0] tmp_dist_25_q0;
output  [11:0] tmp_dist_26_address0;
output   tmp_dist_26_ce0;
input  [63:0] tmp_dist_26_q0;
output  [11:0] tmp_dist_27_address0;
output   tmp_dist_27_ce0;
input  [63:0] tmp_dist_27_q0;
output  [11:0] tmp_dist_28_address0;
output   tmp_dist_28_ce0;
input  [63:0] tmp_dist_28_q0;
output  [11:0] tmp_dist_29_address0;
output   tmp_dist_29_ce0;
input  [63:0] tmp_dist_29_q0;
output  [11:0] tmp_dist_30_address0;
output   tmp_dist_30_ce0;
input  [63:0] tmp_dist_30_q0;
output  [11:0] tmp_dist_31_address0;
output   tmp_dist_31_ce0;
input  [63:0] tmp_dist_31_q0;
output  [127:0] wr_port_TDATA;
output   wr_port_TVALID;
input   wr_port_TREADY;
output  [15:0] wr_port_TKEEP;
output  [15:0] wr_port_TSTRB;
output  [0:0] wr_port_TLAST;
input  [7:0] idx;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg tmp_dist_0_ce0;
reg tmp_dist_1_ce0;
reg tmp_dist_2_ce0;
reg tmp_dist_3_ce0;
reg tmp_dist_4_ce0;
reg tmp_dist_5_ce0;
reg tmp_dist_6_ce0;
reg tmp_dist_7_ce0;
reg tmp_dist_8_ce0;
reg tmp_dist_9_ce0;
reg tmp_dist_10_ce0;
reg tmp_dist_11_ce0;
reg tmp_dist_12_ce0;
reg tmp_dist_13_ce0;
reg tmp_dist_14_ce0;
reg tmp_dist_15_ce0;
reg tmp_dist_16_ce0;
reg tmp_dist_17_ce0;
reg tmp_dist_18_ce0;
reg tmp_dist_19_ce0;
reg tmp_dist_20_ce0;
reg tmp_dist_21_ce0;
reg tmp_dist_22_ce0;
reg tmp_dist_23_ce0;
reg tmp_dist_24_ce0;
reg tmp_dist_25_ce0;
reg tmp_dist_26_ce0;
reg tmp_dist_27_ce0;
reg tmp_dist_28_ce0;
reg tmp_dist_29_ce0;
reg tmp_dist_30_ce0;
reg tmp_dist_31_ce0;
reg[127:0] wr_port_TDATA;
reg wr_port_TVALID;

(* fsm_encoding = "none" *) reg   [17:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    wr_port_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage1;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_pp0_stage1;
reg   [0:0] icmp_ln15_reg_779;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_pp0_stage2;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_pp0_stage3;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_pp0_stage4;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_pp0_stage5;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_pp0_stage6;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_pp0_stage7;
wire    ap_CS_fsm_pp0_stage8;
wire    ap_block_pp0_stage8;
wire    ap_CS_fsm_pp0_stage9;
wire    ap_block_pp0_stage9;
wire    ap_CS_fsm_pp0_stage10;
wire    ap_block_pp0_stage10;
wire    ap_CS_fsm_pp0_stage11;
wire    ap_block_pp0_stage11;
wire    ap_CS_fsm_pp0_stage12;
wire    ap_block_pp0_stage12;
wire    ap_CS_fsm_pp0_stage13;
wire    ap_block_pp0_stage13;
wire    ap_CS_fsm_pp0_stage14;
wire    ap_block_pp0_stage14;
wire    ap_CS_fsm_pp0_stage15;
wire    ap_block_pp0_stage15;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage0;
reg   [2:0] i_reg_569;
wire   [2:0] add_ln15_fu_580_p2;
reg   [2:0] add_ln15_reg_774;
wire    ap_block_state2_pp0_stage0_iter0;
reg    ap_block_state18_pp0_stage0_iter1;
reg    ap_block_state18_io;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln15_fu_586_p2;
reg   [63:0] v2_V_reg_943;
reg    ap_block_state3_pp0_stage1_iter0;
reg    ap_block_state3_io;
reg    ap_block_pp0_stage1_11001;
reg   [63:0] tmp_dist_15_load_reg_948;
wire   [127:0] p_Result_41_1_fu_650_p3;
reg   [127:0] p_Result_41_1_reg_953;
wire   [127:0] p_Result_41_2_fu_658_p3;
reg   [127:0] p_Result_41_2_reg_958;
wire   [127:0] p_Result_41_3_fu_666_p3;
reg   [127:0] p_Result_41_3_reg_963;
wire   [127:0] p_Result_41_4_fu_674_p3;
reg   [127:0] p_Result_41_4_reg_968;
wire   [127:0] p_Result_41_5_fu_682_p3;
reg   [127:0] p_Result_41_5_reg_973;
wire   [127:0] p_Result_41_6_fu_690_p3;
reg   [127:0] p_Result_41_6_reg_978;
wire   [127:0] p_Result_41_8_fu_698_p3;
reg   [127:0] p_Result_41_8_reg_983;
wire   [127:0] p_Result_41_9_fu_706_p3;
reg   [127:0] p_Result_41_9_reg_988;
wire   [127:0] p_Result_41_s_fu_714_p3;
reg   [127:0] p_Result_41_s_reg_993;
wire   [127:0] p_Result_41_10_fu_722_p3;
reg   [127:0] p_Result_41_10_reg_998;
wire   [127:0] p_Result_41_11_fu_730_p3;
reg   [127:0] p_Result_41_11_reg_1003;
wire   [127:0] p_Result_41_12_fu_738_p3;
reg   [127:0] p_Result_41_12_reg_1008;
wire   [127:0] p_Result_41_13_fu_746_p3;
reg   [127:0] p_Result_41_13_reg_1013;
wire   [127:0] p_Result_41_14_fu_754_p3;
reg   [127:0] p_Result_41_14_reg_1018;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_block_state17_pp0_stage15_iter0;
reg    ap_block_state17_io;
reg    ap_block_pp0_stage15_subdone;
reg   [2:0] ap_phi_mux_i_phi_fu_573_p4;
wire   [63:0] zext_ln308_fu_605_p1;
wire   [127:0] p_Result_s_fu_641_p3;
reg    ap_block_pp0_stage1_01001;
reg    ap_block_state4_pp0_stage2_iter0;
reg    ap_block_pp0_stage2_01001;
reg    ap_block_state5_pp0_stage3_iter0;
reg    ap_block_pp0_stage3_01001;
reg    ap_block_state6_pp0_stage4_iter0;
reg    ap_block_pp0_stage4_01001;
reg    ap_block_state7_pp0_stage5_iter0;
reg    ap_block_pp0_stage5_01001;
reg    ap_block_state8_pp0_stage6_iter0;
reg    ap_block_pp0_stage6_01001;
reg    ap_block_state9_pp0_stage7_iter0;
reg    ap_block_pp0_stage7_01001;
wire   [127:0] p_Result_41_7_fu_762_p3;
reg    ap_block_state10_pp0_stage8_iter0;
reg    ap_block_pp0_stage8_01001;
reg    ap_block_state11_pp0_stage9_iter0;
reg    ap_block_pp0_stage9_01001;
reg    ap_block_state12_pp0_stage10_iter0;
reg    ap_block_pp0_stage10_01001;
reg    ap_block_state13_pp0_stage11_iter0;
reg    ap_block_pp0_stage11_01001;
reg    ap_block_state14_pp0_stage12_iter0;
reg    ap_block_pp0_stage12_01001;
reg    ap_block_state15_pp0_stage13_iter0;
reg    ap_block_pp0_stage13_01001;
reg    ap_block_state16_pp0_stage14_iter0;
reg    ap_block_pp0_stage14_01001;
reg    ap_block_pp0_stage15_01001;
reg    ap_block_pp0_stage0_01001;
reg    ap_block_state4_io;
reg    ap_block_pp0_stage2_11001;
reg    ap_block_state5_io;
reg    ap_block_pp0_stage3_11001;
reg    ap_block_state6_io;
reg    ap_block_pp0_stage4_11001;
reg    ap_block_state7_io;
reg    ap_block_pp0_stage5_11001;
reg    ap_block_state8_io;
reg    ap_block_pp0_stage6_11001;
reg    ap_block_state9_io;
reg    ap_block_pp0_stage7_11001;
reg    ap_block_state10_io;
reg    ap_block_pp0_stage8_11001;
reg    ap_block_state11_io;
reg    ap_block_pp0_stage9_11001;
reg    ap_block_state12_io;
reg    ap_block_pp0_stage10_11001;
reg    ap_block_state13_io;
reg    ap_block_pp0_stage11_11001;
reg    ap_block_state14_io;
reg    ap_block_pp0_stage12_11001;
reg    ap_block_state15_io;
reg    ap_block_pp0_stage13_11001;
reg    ap_block_state16_io;
reg    ap_block_pp0_stage14_11001;
reg    ap_block_pp0_stage15_11001;
wire   [1:0] empty_156_fu_592_p1;
wire   [10:0] tmp_fu_596_p4;
wire    ap_CS_fsm_state19;
reg   [17:0] ap_NS_fsm;
reg    ap_block_pp0_stage1_subdone;
reg    ap_block_pp0_stage2_subdone;
reg    ap_block_pp0_stage3_subdone;
reg    ap_block_pp0_stage4_subdone;
reg    ap_block_pp0_stage5_subdone;
reg    ap_block_pp0_stage6_subdone;
reg    ap_block_pp0_stage7_subdone;
reg    ap_block_pp0_stage8_subdone;
reg    ap_block_pp0_stage9_subdone;
reg    ap_block_pp0_stage10_subdone;
reg    ap_block_pp0_stage11_subdone;
reg    ap_block_pp0_stage12_subdone;
reg    ap_block_pp0_stage13_subdone;
reg    ap_block_pp0_stage14_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_568;
reg    ap_condition_574;
reg    ap_condition_580;
reg    ap_condition_586;
reg    ap_condition_592;
reg    ap_condition_598;
reg    ap_condition_604;
reg    ap_condition_611;
reg    ap_condition_617;
reg    ap_condition_623;
reg    ap_condition_629;
reg    ap_condition_635;
reg    ap_condition_641;
reg    ap_condition_647;
reg    ap_condition_652;
reg    ap_condition_658;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 18'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage15_subdone) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_569 <= 3'd0;
    end else if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln15_reg_779 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_569 <= add_ln15_reg_774;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln15_reg_774 <= add_ln15_fu_580_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln15_reg_779 <= icmp_ln15_fu_586_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln15_reg_779 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        p_Result_41_10_reg_998 <= p_Result_41_10_fu_722_p3;
        p_Result_41_11_reg_1003 <= p_Result_41_11_fu_730_p3;
        p_Result_41_12_reg_1008 <= p_Result_41_12_fu_738_p3;
        p_Result_41_13_reg_1013 <= p_Result_41_13_fu_746_p3;
        p_Result_41_14_reg_1018 <= p_Result_41_14_fu_754_p3;
        p_Result_41_1_reg_953 <= p_Result_41_1_fu_650_p3;
        p_Result_41_2_reg_958 <= p_Result_41_2_fu_658_p3;
        p_Result_41_3_reg_963 <= p_Result_41_3_fu_666_p3;
        p_Result_41_4_reg_968 <= p_Result_41_4_fu_674_p3;
        p_Result_41_5_reg_973 <= p_Result_41_5_fu_682_p3;
        p_Result_41_6_reg_978 <= p_Result_41_6_fu_690_p3;
        p_Result_41_8_reg_983 <= p_Result_41_8_fu_698_p3;
        p_Result_41_9_reg_988 <= p_Result_41_9_fu_706_p3;
        p_Result_41_s_reg_993 <= p_Result_41_s_fu_714_p3;
        tmp_dist_15_load_reg_948 <= tmp_dist_15_q0;
        v2_V_reg_943 <= tmp_dist_14_q0;
    end
end

always @ (*) begin
    if ((icmp_ln15_fu_586_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln15_reg_779 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_phi_mux_i_phi_fu_573_p4 = add_ln15_reg_774;
    end else begin
        ap_phi_mux_i_phi_fu_573_p4 = i_reg_569;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_0_ce0 = 1'b1;
    end else begin
        tmp_dist_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_10_ce0 = 1'b1;
    end else begin
        tmp_dist_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_11_ce0 = 1'b1;
    end else begin
        tmp_dist_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_12_ce0 = 1'b1;
    end else begin
        tmp_dist_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_13_ce0 = 1'b1;
    end else begin
        tmp_dist_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_14_ce0 = 1'b1;
    end else begin
        tmp_dist_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_15_ce0 = 1'b1;
    end else begin
        tmp_dist_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_16_ce0 = 1'b1;
    end else begin
        tmp_dist_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_17_ce0 = 1'b1;
    end else begin
        tmp_dist_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_18_ce0 = 1'b1;
    end else begin
        tmp_dist_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_19_ce0 = 1'b1;
    end else begin
        tmp_dist_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_1_ce0 = 1'b1;
    end else begin
        tmp_dist_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_20_ce0 = 1'b1;
    end else begin
        tmp_dist_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_21_ce0 = 1'b1;
    end else begin
        tmp_dist_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_22_ce0 = 1'b1;
    end else begin
        tmp_dist_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_23_ce0 = 1'b1;
    end else begin
        tmp_dist_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_24_ce0 = 1'b1;
    end else begin
        tmp_dist_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_25_ce0 = 1'b1;
    end else begin
        tmp_dist_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_26_ce0 = 1'b1;
    end else begin
        tmp_dist_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_27_ce0 = 1'b1;
    end else begin
        tmp_dist_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_28_ce0 = 1'b1;
    end else begin
        tmp_dist_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_29_ce0 = 1'b1;
    end else begin
        tmp_dist_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_2_ce0 = 1'b1;
    end else begin
        tmp_dist_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_30_ce0 = 1'b1;
    end else begin
        tmp_dist_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_31_ce0 = 1'b1;
    end else begin
        tmp_dist_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_3_ce0 = 1'b1;
    end else begin
        tmp_dist_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_4_ce0 = 1'b1;
    end else begin
        tmp_dist_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_5_ce0 = 1'b1;
    end else begin
        tmp_dist_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_6_ce0 = 1'b1;
    end else begin
        tmp_dist_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_7_ce0 = 1'b1;
    end else begin
        tmp_dist_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_8_ce0 = 1'b1;
    end else begin
        tmp_dist_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_9_ce0 = 1'b1;
    end else begin
        tmp_dist_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln15_reg_779 == 1'd0)) begin
        if ((1'b1 == ap_condition_658)) begin
            wr_port_TDATA = p_Result_41_14_reg_1018;
        end else if ((1'b1 == ap_condition_652)) begin
            wr_port_TDATA = p_Result_41_13_reg_1013;
        end else if ((1'b1 == ap_condition_647)) begin
            wr_port_TDATA = p_Result_41_12_reg_1008;
        end else if ((1'b1 == ap_condition_641)) begin
            wr_port_TDATA = p_Result_41_11_reg_1003;
        end else if ((1'b1 == ap_condition_635)) begin
            wr_port_TDATA = p_Result_41_10_reg_998;
        end else if ((1'b1 == ap_condition_629)) begin
            wr_port_TDATA = p_Result_41_s_reg_993;
        end else if ((1'b1 == ap_condition_623)) begin
            wr_port_TDATA = p_Result_41_9_reg_988;
        end else if ((1'b1 == ap_condition_617)) begin
            wr_port_TDATA = p_Result_41_8_reg_983;
        end else if ((1'b1 == ap_condition_611)) begin
            wr_port_TDATA = p_Result_41_7_fu_762_p3;
        end else if ((1'b1 == ap_condition_604)) begin
            wr_port_TDATA = p_Result_41_6_reg_978;
        end else if ((1'b1 == ap_condition_598)) begin
            wr_port_TDATA = p_Result_41_5_reg_973;
        end else if ((1'b1 == ap_condition_592)) begin
            wr_port_TDATA = p_Result_41_4_reg_968;
        end else if ((1'b1 == ap_condition_586)) begin
            wr_port_TDATA = p_Result_41_3_reg_963;
        end else if ((1'b1 == ap_condition_580)) begin
            wr_port_TDATA = p_Result_41_2_reg_958;
        end else if ((1'b1 == ap_condition_574)) begin
            wr_port_TDATA = p_Result_41_1_reg_953;
        end else if ((1'b1 == ap_condition_568)) begin
            wr_port_TDATA = p_Result_s_fu_641_p3;
        end else begin
            wr_port_TDATA = 'bx;
        end
    end else begin
        wr_port_TDATA = 'bx;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln15_reg_779 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln15_reg_779 == 1'd0) & (1'b0 == ap_block_pp0_stage15) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((icmp_ln15_reg_779 == 1'd0) & (1'b0 == ap_block_pp0_stage14) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln15_reg_779 == 1'd0) & (1'b0 == ap_block_pp0_stage13) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln15_reg_779 == 1'd0) & (1'b0 == ap_block_pp0_stage12) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln15_reg_779 == 1'd0) & (1'b0 == ap_block_pp0_stage11) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln15_reg_779 == 1'd0) & (1'b0 == ap_block_pp0_stage10) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln15_reg_779 == 1'd0) & (1'b0 == ap_block_pp0_stage9) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln15_reg_779 == 1'd0) & (1'b0 == ap_block_pp0_stage8) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln15_reg_779 == 1'd0) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln15_reg_779 == 1'd0) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln15_reg_779 == 1'd0) & (1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln15_reg_779 == 1'd0) & (1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln15_reg_779 == 1'd0) & (1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln15_reg_779 == 1'd0) & (1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln15_reg_779 == 1'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        wr_port_TDATA_blk_n = wr_port_TREADY;
    end else begin
        wr_port_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln15_reg_779 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln15_reg_779 == 1'd0) & (1'b0 == ap_block_pp0_stage15_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15)) | ((icmp_ln15_reg_779 == 1'd0) & (1'b0 == ap_block_pp0_stage14_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14)) | ((icmp_ln15_reg_779 == 1'd0) & (1'b0 == ap_block_pp0_stage13_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13)) | ((icmp_ln15_reg_779 == 1'd0) & (1'b0 == ap_block_pp0_stage12_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12)) | ((icmp_ln15_reg_779 == 1'd0) & (1'b0 == ap_block_pp0_stage11_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11)) | ((icmp_ln15_reg_779 == 1'd0) & (1'b0 == ap_block_pp0_stage10_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10)) | ((icmp_ln15_reg_779 == 1'd0) & (1'b0 == ap_block_pp0_stage9_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9)) | ((icmp_ln15_reg_779 == 1'd0) & (1'b0 == ap_block_pp0_stage8_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8)) | ((icmp_ln15_reg_779 == 1'd0) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln15_reg_779 == 1'd0) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln15_reg_779 == 1'd0) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln15_reg_779 == 1'd0) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln15_reg_779 == 1'd0) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln15_reg_779 == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((icmp_ln15_reg_779 == 1'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        wr_port_TVALID = 1'b1;
    end else begin
        wr_port_TVALID = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln15_fu_586_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((icmp_ln15_fu_586_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        ap_ST_fsm_pp0_stage8 : begin
            if ((1'b0 == ap_block_pp0_stage8_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage8;
            end
        end
        ap_ST_fsm_pp0_stage9 : begin
            if ((1'b0 == ap_block_pp0_stage9_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage9;
            end
        end
        ap_ST_fsm_pp0_stage10 : begin
            if ((1'b0 == ap_block_pp0_stage10_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage10;
            end
        end
        ap_ST_fsm_pp0_stage11 : begin
            if ((1'b0 == ap_block_pp0_stage11_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage11;
            end
        end
        ap_ST_fsm_pp0_stage12 : begin
            if ((1'b0 == ap_block_pp0_stage12_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage12;
            end
        end
        ap_ST_fsm_pp0_stage13 : begin
            if ((1'b0 == ap_block_pp0_stage13_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage13;
            end
        end
        ap_ST_fsm_pp0_stage14 : begin
            if ((1'b0 == ap_block_pp0_stage14_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage14;
            end
        end
        ap_ST_fsm_pp0_stage15 : begin
            if ((1'b0 == ap_block_pp0_stage15_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage15;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln15_fu_580_p2 = (ap_phi_mux_i_phi_fu_573_p4 + 3'd1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage10 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_pp0_stage11 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_pp0_stage12 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_pp0_stage13 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_pp0_stage14 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_pp0_stage15 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_pp0_stage8 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_pp0_stage9 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd17];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state18_io) | ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((ap_enable_reg_pp0_iter1 == 1'b1) & ((1'b1 == ap_block_state18_io) | ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0))));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage10 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage10_01001 = ((icmp_ln15_reg_779 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage10_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state12_io) | ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage10_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state12_io) | ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0))));
end

assign ap_block_pp0_stage11 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage11_01001 = ((icmp_ln15_reg_779 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage11_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state13_io) | ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage11_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state13_io) | ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0))));
end

assign ap_block_pp0_stage12 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage12_01001 = ((icmp_ln15_reg_779 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage12_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state14_io) | ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage12_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state14_io) | ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0))));
end

assign ap_block_pp0_stage13 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage13_01001 = ((icmp_ln15_reg_779 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage13_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state15_io) | ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage13_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state15_io) | ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0))));
end

assign ap_block_pp0_stage14 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage14_01001 = ((icmp_ln15_reg_779 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage14_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state16_io) | ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage14_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state16_io) | ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0))));
end

assign ap_block_pp0_stage15 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage15_01001 = ((icmp_ln15_reg_779 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage15_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state17_io) | ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage15_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state17_io) | ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage1_01001 = ((icmp_ln15_reg_779 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage1_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state3_io) | ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage1_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state3_io) | ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0))));
end

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage2_01001 = ((icmp_ln15_reg_779 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage2_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state4_io) | ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage2_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state4_io) | ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0))));
end

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage3_01001 = ((icmp_ln15_reg_779 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage3_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state5_io) | ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage3_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state5_io) | ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0))));
end

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage4_01001 = ((icmp_ln15_reg_779 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage4_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state6_io) | ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage4_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state6_io) | ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0))));
end

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage5_01001 = ((icmp_ln15_reg_779 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage5_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state7_io) | ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage5_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state7_io) | ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0))));
end

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage6_01001 = ((icmp_ln15_reg_779 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage6_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state8_io) | ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage6_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state8_io) | ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0))));
end

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage7_01001 = ((icmp_ln15_reg_779 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage7_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state9_io) | ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage7_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state9_io) | ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0))));
end

assign ap_block_pp0_stage8 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage8_01001 = ((icmp_ln15_reg_779 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage8_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state10_io) | ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage8_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state10_io) | ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0))));
end

assign ap_block_pp0_stage9 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage9_01001 = ((icmp_ln15_reg_779 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_pp0_stage9_11001 = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state11_io) | ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0))));
end

always @ (*) begin
    ap_block_pp0_stage9_subdone = ((ap_enable_reg_pp0_iter0 == 1'b1) & ((1'b1 == ap_block_state11_io) | ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0))));
end

always @ (*) begin
    ap_block_state10_io = ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state10_pp0_stage8_iter0 = ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state11_io = ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state11_pp0_stage9_iter0 = ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state12_io = ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state12_pp0_stage10_iter0 = ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state13_io = ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state13_pp0_stage11_iter0 = ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state14_io = ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state14_pp0_stage12_iter0 = ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state15_io = ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state15_pp0_stage13_iter0 = ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state16_io = ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state16_pp0_stage14_iter0 = ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state17_io = ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state17_pp0_stage15_iter0 = ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state18_io = ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state18_pp0_stage0_iter1 = ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0));
end

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_io = ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state3_pp0_stage1_iter0 = ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state4_io = ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state4_pp0_stage2_iter0 = ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state5_io = ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state5_pp0_stage3_iter0 = ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state6_io = ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state6_pp0_stage4_iter0 = ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state7_io = ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state7_pp0_stage5_iter0 = ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state8_io = ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state8_pp0_stage6_iter0 = ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state9_io = ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_block_state9_pp0_stage7_iter0 = ((icmp_ln15_reg_779 == 1'd0) & (wr_port_TREADY == 1'b0));
end

always @ (*) begin
    ap_condition_568 = ((1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_574 = ((1'b0 == ap_block_pp0_stage2_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2));
end

always @ (*) begin
    ap_condition_580 = ((1'b0 == ap_block_pp0_stage3_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3));
end

always @ (*) begin
    ap_condition_586 = ((1'b0 == ap_block_pp0_stage4_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4));
end

always @ (*) begin
    ap_condition_592 = ((1'b0 == ap_block_pp0_stage5_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5));
end

always @ (*) begin
    ap_condition_598 = ((1'b0 == ap_block_pp0_stage6_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6));
end

always @ (*) begin
    ap_condition_604 = ((1'b0 == ap_block_pp0_stage7_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7));
end

always @ (*) begin
    ap_condition_611 = ((1'b0 == ap_block_pp0_stage8_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage8));
end

always @ (*) begin
    ap_condition_617 = ((1'b0 == ap_block_pp0_stage9_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage9));
end

always @ (*) begin
    ap_condition_623 = ((1'b0 == ap_block_pp0_stage10_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage10));
end

always @ (*) begin
    ap_condition_629 = ((1'b0 == ap_block_pp0_stage11_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage11));
end

always @ (*) begin
    ap_condition_635 = ((1'b0 == ap_block_pp0_stage12_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage12));
end

always @ (*) begin
    ap_condition_641 = ((1'b0 == ap_block_pp0_stage13_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage13));
end

always @ (*) begin
    ap_condition_647 = ((1'b0 == ap_block_pp0_stage14_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage14));
end

always @ (*) begin
    ap_condition_652 = ((1'b0 == ap_block_pp0_stage15_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage15));
end

always @ (*) begin
    ap_condition_658 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_01001) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign empty_156_fu_592_p1 = ap_phi_mux_i_phi_fu_573_p4[1:0];

assign icmp_ln15_fu_586_p2 = ((ap_phi_mux_i_phi_fu_573_p4 == 3'd4) ? 1'b1 : 1'b0);

assign p_Result_41_10_fu_722_p3 = {{tmp_dist_23_q0}, {tmp_dist_22_q0}};

assign p_Result_41_11_fu_730_p3 = {{tmp_dist_25_q0}, {tmp_dist_24_q0}};

assign p_Result_41_12_fu_738_p3 = {{tmp_dist_27_q0}, {tmp_dist_26_q0}};

assign p_Result_41_13_fu_746_p3 = {{tmp_dist_29_q0}, {tmp_dist_28_q0}};

assign p_Result_41_14_fu_754_p3 = {{tmp_dist_31_q0}, {tmp_dist_30_q0}};

assign p_Result_41_1_fu_650_p3 = {{tmp_dist_3_q0}, {tmp_dist_2_q0}};

assign p_Result_41_2_fu_658_p3 = {{tmp_dist_5_q0}, {tmp_dist_4_q0}};

assign p_Result_41_3_fu_666_p3 = {{tmp_dist_7_q0}, {tmp_dist_6_q0}};

assign p_Result_41_4_fu_674_p3 = {{tmp_dist_9_q0}, {tmp_dist_8_q0}};

assign p_Result_41_5_fu_682_p3 = {{tmp_dist_11_q0}, {tmp_dist_10_q0}};

assign p_Result_41_6_fu_690_p3 = {{tmp_dist_13_q0}, {tmp_dist_12_q0}};

assign p_Result_41_7_fu_762_p3 = {{tmp_dist_15_load_reg_948}, {v2_V_reg_943}};

assign p_Result_41_8_fu_698_p3 = {{tmp_dist_17_q0}, {tmp_dist_16_q0}};

assign p_Result_41_9_fu_706_p3 = {{tmp_dist_19_q0}, {tmp_dist_18_q0}};

assign p_Result_41_s_fu_714_p3 = {{tmp_dist_21_q0}, {tmp_dist_20_q0}};

assign p_Result_s_fu_641_p3 = {{tmp_dist_1_q0}, {tmp_dist_0_q0}};

assign tmp_dist_0_address0 = zext_ln308_fu_605_p1;

assign tmp_dist_10_address0 = zext_ln308_fu_605_p1;

assign tmp_dist_11_address0 = zext_ln308_fu_605_p1;

assign tmp_dist_12_address0 = zext_ln308_fu_605_p1;

assign tmp_dist_13_address0 = zext_ln308_fu_605_p1;

assign tmp_dist_14_address0 = zext_ln308_fu_605_p1;

assign tmp_dist_15_address0 = zext_ln308_fu_605_p1;

assign tmp_dist_16_address0 = zext_ln308_fu_605_p1;

assign tmp_dist_17_address0 = zext_ln308_fu_605_p1;

assign tmp_dist_18_address0 = zext_ln308_fu_605_p1;

assign tmp_dist_19_address0 = zext_ln308_fu_605_p1;

assign tmp_dist_1_address0 = zext_ln308_fu_605_p1;

assign tmp_dist_20_address0 = zext_ln308_fu_605_p1;

assign tmp_dist_21_address0 = zext_ln308_fu_605_p1;

assign tmp_dist_22_address0 = zext_ln308_fu_605_p1;

assign tmp_dist_23_address0 = zext_ln308_fu_605_p1;

assign tmp_dist_24_address0 = zext_ln308_fu_605_p1;

assign tmp_dist_25_address0 = zext_ln308_fu_605_p1;

assign tmp_dist_26_address0 = zext_ln308_fu_605_p1;

assign tmp_dist_27_address0 = zext_ln308_fu_605_p1;

assign tmp_dist_28_address0 = zext_ln308_fu_605_p1;

assign tmp_dist_29_address0 = zext_ln308_fu_605_p1;

assign tmp_dist_2_address0 = zext_ln308_fu_605_p1;

assign tmp_dist_30_address0 = zext_ln308_fu_605_p1;

assign tmp_dist_31_address0 = zext_ln308_fu_605_p1;

assign tmp_dist_3_address0 = zext_ln308_fu_605_p1;

assign tmp_dist_4_address0 = zext_ln308_fu_605_p1;

assign tmp_dist_5_address0 = zext_ln308_fu_605_p1;

assign tmp_dist_6_address0 = zext_ln308_fu_605_p1;

assign tmp_dist_7_address0 = zext_ln308_fu_605_p1;

assign tmp_dist_8_address0 = zext_ln308_fu_605_p1;

assign tmp_dist_9_address0 = zext_ln308_fu_605_p1;

assign tmp_fu_596_p4 = {{{idx}, {1'd0}}, {empty_156_fu_592_p1}};

assign wr_port_TKEEP = 16'd0;

assign wr_port_TLAST = 1'd0;

assign wr_port_TSTRB = 16'd0;

assign zext_ln308_fu_605_p1 = tmp_fu_596_p4;

endmodule //BFS_Scatter_WrDist
