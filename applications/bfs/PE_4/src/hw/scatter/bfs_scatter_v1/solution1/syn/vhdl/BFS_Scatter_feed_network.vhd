-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity BFS_Scatter_feed_network is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    rd_req_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    rd_req_V_full_n : IN STD_LOGIC;
    rd_req_V_write : OUT STD_LOGIC;
    rd_start : OUT STD_LOGIC;
    rd_start_ap_vld : OUT STD_LOGIC;
    tmp_dist_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp_dist_0_ce0 : OUT STD_LOGIC;
    tmp_dist_0_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp_dist_1_ce0 : OUT STD_LOGIC;
    tmp_dist_1_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp_dist_2_ce0 : OUT STD_LOGIC;
    tmp_dist_2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_3_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp_dist_3_ce0 : OUT STD_LOGIC;
    tmp_dist_3_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_4_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp_dist_4_ce0 : OUT STD_LOGIC;
    tmp_dist_4_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_5_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp_dist_5_ce0 : OUT STD_LOGIC;
    tmp_dist_5_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_6_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp_dist_6_ce0 : OUT STD_LOGIC;
    tmp_dist_6_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_7_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp_dist_7_ce0 : OUT STD_LOGIC;
    tmp_dist_7_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_8_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp_dist_8_ce0 : OUT STD_LOGIC;
    tmp_dist_8_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_9_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp_dist_9_ce0 : OUT STD_LOGIC;
    tmp_dist_9_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_10_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp_dist_10_ce0 : OUT STD_LOGIC;
    tmp_dist_10_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_11_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp_dist_11_ce0 : OUT STD_LOGIC;
    tmp_dist_11_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_12_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp_dist_12_ce0 : OUT STD_LOGIC;
    tmp_dist_12_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_13_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp_dist_13_ce0 : OUT STD_LOGIC;
    tmp_dist_13_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_14_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp_dist_14_ce0 : OUT STD_LOGIC;
    tmp_dist_14_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_15_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp_dist_15_ce0 : OUT STD_LOGIC;
    tmp_dist_15_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_16_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp_dist_16_ce0 : OUT STD_LOGIC;
    tmp_dist_16_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_17_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp_dist_17_ce0 : OUT STD_LOGIC;
    tmp_dist_17_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_18_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp_dist_18_ce0 : OUT STD_LOGIC;
    tmp_dist_18_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_19_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp_dist_19_ce0 : OUT STD_LOGIC;
    tmp_dist_19_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_20_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp_dist_20_ce0 : OUT STD_LOGIC;
    tmp_dist_20_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_21_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp_dist_21_ce0 : OUT STD_LOGIC;
    tmp_dist_21_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_22_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp_dist_22_ce0 : OUT STD_LOGIC;
    tmp_dist_22_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_23_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp_dist_23_ce0 : OUT STD_LOGIC;
    tmp_dist_23_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_24_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp_dist_24_ce0 : OUT STD_LOGIC;
    tmp_dist_24_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_25_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp_dist_25_ce0 : OUT STD_LOGIC;
    tmp_dist_25_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_26_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp_dist_26_ce0 : OUT STD_LOGIC;
    tmp_dist_26_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_27_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp_dist_27_ce0 : OUT STD_LOGIC;
    tmp_dist_27_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_28_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp_dist_28_ce0 : OUT STD_LOGIC;
    tmp_dist_28_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_29_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp_dist_29_ce0 : OUT STD_LOGIC;
    tmp_dist_29_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_30_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp_dist_30_ce0 : OUT STD_LOGIC;
    tmp_dist_30_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_31_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp_dist_31_ce0 : OUT STD_LOGIC;
    tmp_dist_31_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    sw_data_0_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    sw_data_0_V_full_n : IN STD_LOGIC;
    sw_data_0_V_write : OUT STD_LOGIC;
    sw_data_1_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    sw_data_1_V_full_n : IN STD_LOGIC;
    sw_data_1_V_write : OUT STD_LOGIC;
    sw_data_2_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    sw_data_2_V_full_n : IN STD_LOGIC;
    sw_data_2_V_write : OUT STD_LOGIC;
    sw_data_3_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    sw_data_3_V_full_n : IN STD_LOGIC;
    sw_data_3_V_write : OUT STD_LOGIC;
    rd_port_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    rd_port_TVALID : IN STD_LOGIC;
    rd_port_TREADY : OUT STD_LOGIC;
    rd_port_TKEEP : IN STD_LOGIC_VECTOR (15 downto 0);
    rd_port_TSTRB : IN STD_LOGIC_VECTOR (15 downto 0);
    rd_port_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    n_mem_tuples : IN STD_LOGIC_VECTOR (15 downto 0);
    mem_req_buff_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
    mem_req_buff_ce0 : OUT STD_LOGIC;
    mem_req_buff_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of BFS_Scatter_feed_network is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (5 downto 0) := "000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (5 downto 0) := "000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (5 downto 0) := "001000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (5 downto 0) := "010000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (5 downto 0) := "100000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv5_1E : STD_LOGIC_VECTOR (4 downto 0) := "11110";
    constant ap_const_lv5_1D : STD_LOGIC_VECTOR (4 downto 0) := "11101";
    constant ap_const_lv5_1C : STD_LOGIC_VECTOR (4 downto 0) := "11100";
    constant ap_const_lv5_1B : STD_LOGIC_VECTOR (4 downto 0) := "11011";
    constant ap_const_lv5_1A : STD_LOGIC_VECTOR (4 downto 0) := "11010";
    constant ap_const_lv5_19 : STD_LOGIC_VECTOR (4 downto 0) := "11001";
    constant ap_const_lv5_18 : STD_LOGIC_VECTOR (4 downto 0) := "11000";
    constant ap_const_lv5_17 : STD_LOGIC_VECTOR (4 downto 0) := "10111";
    constant ap_const_lv5_16 : STD_LOGIC_VECTOR (4 downto 0) := "10110";
    constant ap_const_lv5_15 : STD_LOGIC_VECTOR (4 downto 0) := "10101";
    constant ap_const_lv5_14 : STD_LOGIC_VECTOR (4 downto 0) := "10100";
    constant ap_const_lv5_13 : STD_LOGIC_VECTOR (4 downto 0) := "10011";
    constant ap_const_lv5_12 : STD_LOGIC_VECTOR (4 downto 0) := "10010";
    constant ap_const_lv5_11 : STD_LOGIC_VECTOR (4 downto 0) := "10001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_F : STD_LOGIC_VECTOR (4 downto 0) := "01111";
    constant ap_const_lv5_E : STD_LOGIC_VECTOR (4 downto 0) := "01110";
    constant ap_const_lv5_D : STD_LOGIC_VECTOR (4 downto 0) := "01101";
    constant ap_const_lv5_C : STD_LOGIC_VECTOR (4 downto 0) := "01100";
    constant ap_const_lv5_B : STD_LOGIC_VECTOR (4 downto 0) := "01011";
    constant ap_const_lv5_A : STD_LOGIC_VECTOR (4 downto 0) := "01010";
    constant ap_const_lv5_9 : STD_LOGIC_VECTOR (4 downto 0) := "01001";
    constant ap_const_lv5_8 : STD_LOGIC_VECTOR (4 downto 0) := "01000";
    constant ap_const_lv5_7 : STD_LOGIC_VECTOR (4 downto 0) := "00111";
    constant ap_const_lv5_6 : STD_LOGIC_VECTOR (4 downto 0) := "00110";
    constant ap_const_lv5_5 : STD_LOGIC_VECTOR (4 downto 0) := "00101";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_3 : STD_LOGIC_VECTOR (4 downto 0) := "00011";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv13_1FFF : STD_LOGIC_VECTOR (12 downto 0) := "1111111111111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_57 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001010111";
    constant ap_const_lv32_60 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001100000";
    constant ap_const_lv32_77 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001110111";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (5 downto 0) := "000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal rd_req_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal sw_data_0_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal or_ln211_reg_1613 : STD_LOGIC_VECTOR (0 downto 0);
    signal sw_data_1_V_blk_n : STD_LOGIC;
    signal icmp_ln874_reg_1609 : STD_LOGIC_VECTOR (0 downto 0);
    signal sw_data_2_V_blk_n : STD_LOGIC;
    signal sw_data_3_V_blk_n : STD_LOGIC;
    signal rd_port_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal srcDist_V_1_reg_828 : STD_LOGIC_VECTOR (7 downto 0);
    signal srcDist_V_11_reg_939 : STD_LOGIC_VECTOR (7 downto 0);
    signal n_iter_fu_1034_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal n_iter_reg_1373 : STD_LOGIC_VECTOR (12 downto 0);
    signal sext_ln165_fu_1048_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal sext_ln165_reg_1378 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln165_fu_1052_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln165_reg_1383 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln168_fu_1062_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal select_ln168_reg_1387 : STD_LOGIC_VECTOR (4 downto 0);
    signal i_1_fu_1070_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal i_1_reg_1392 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal tail_fu_1090_p3 : STD_LOGIC_VECTOR (4 downto 0);
    signal tail_reg_1400 : STD_LOGIC_VECTOR (4 downto 0);
    signal icmp_ln165_1_fu_1076_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal mul_fu_1101_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal mul_reg_1405 : STD_LOGIC_VECTOR (10 downto 0);
    signal j_2_fu_1109_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal j_2_reg_1410 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal icmp_ln170_fu_1119_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal rd_pkt_data_V_reg_1424 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_block_state5_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state6_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal rd_pkt_last_V_fu_1138_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal rd_pkt_last_V_reg_1433 : STD_LOGIC_VECTOR (0 downto 0);
    signal rd_pkt_last_V_reg_1433_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln870_fu_1152_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln870_reg_1437 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_fu_1158_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal ret_reg_1441 : STD_LOGIC_VECTOR (4 downto 0);
    signal ret_2_fu_1208_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln874_fu_1299_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln211_fu_1305_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln674_fu_1311_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln674_reg_1617 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Result_2_reg_1622 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Result_3_reg_1627 : STD_LOGIC_VECTOR (23 downto 0);
    signal p_Result_4_reg_1632 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_flush_enable : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal i_reg_794 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal srcDist_V_reg_805 : STD_LOGIC_VECTOR (7 downto 0);
    signal j_reg_817 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_phi_mux_srcDist_V_1_phi_fu_831_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_srcVal_V_phi_fu_841_p64 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_reg_pp0_iter1_srcVal_V_reg_838 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_phi_mux_srcDist_V_11_phi_fu_944_p20 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_srcDist_V_11_reg_939 : STD_LOGIC_VECTOR (7 downto 0);
    signal srcDist_V_2_fu_1294_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_invld_flag_phi_fu_972_p20 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp0_iter1_invld_flag_reg_969 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln171_fu_1129_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln534_fu_1172_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal empty_fu_1004_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln161_1_fu_1014_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln161_fu_1024_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln161_fu_1008_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln161_fu_1028_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal sub_fu_1042_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln168_fu_1058_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln165_fu_1081_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln168_fu_1085_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal empty_54_fu_1097_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln170_fu_1115_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln171_fu_1124_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal p_Result_s_fu_1142_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_4_fu_1162_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_594 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_condition_pp0_flush_enable)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln170_fu_1119_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                elsif (((icmp_ln170_fu_1119_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                    ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    i_reg_794_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln165_fu_1052_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                i_reg_794 <= ap_const_lv13_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                i_reg_794 <= i_1_reg_1392;
            end if; 
        end if;
    end process;

    j_reg_817_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((rd_req_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
                j_reg_817 <= j_2_reg_1410;
            elsif (((icmp_ln165_1_fu_1076_p2 = ap_const_lv1_0) and (icmp_ln165_reg_1383 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                j_reg_817 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    srcDist_V_11_reg_939_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_594)) then
                if ((icmp_ln870_reg_1437 = ap_const_lv1_0)) then 
                    srcDist_V_11_reg_939 <= ap_phi_mux_srcDist_V_1_phi_fu_831_p4;
                elsif (((ret_2_fu_1208_p4 = ap_const_lv3_0) and (icmp_ln870_reg_1437 = ap_const_lv1_1))) then 
                    srcDist_V_11_reg_939 <= srcDist_V_2_fu_1294_p1;
                elsif (((ret_2_fu_1208_p4 = ap_const_lv3_1) and (icmp_ln870_reg_1437 = ap_const_lv1_1))) then 
                    srcDist_V_11_reg_939 <= ap_phi_mux_srcVal_V_phi_fu_841_p64(15 downto 8);
                elsif (((ret_2_fu_1208_p4 = ap_const_lv3_2) and (icmp_ln870_reg_1437 = ap_const_lv1_1))) then 
                    srcDist_V_11_reg_939 <= ap_phi_mux_srcVal_V_phi_fu_841_p64(23 downto 16);
                elsif (((ret_2_fu_1208_p4 = ap_const_lv3_3) and (icmp_ln870_reg_1437 = ap_const_lv1_1))) then 
                    srcDist_V_11_reg_939 <= ap_phi_mux_srcVal_V_phi_fu_841_p64(31 downto 24);
                elsif (((ret_2_fu_1208_p4 = ap_const_lv3_4) and (icmp_ln870_reg_1437 = ap_const_lv1_1))) then 
                    srcDist_V_11_reg_939 <= ap_phi_mux_srcVal_V_phi_fu_841_p64(39 downto 32);
                elsif (((ret_2_fu_1208_p4 = ap_const_lv3_5) and (icmp_ln870_reg_1437 = ap_const_lv1_1))) then 
                    srcDist_V_11_reg_939 <= ap_phi_mux_srcVal_V_phi_fu_841_p64(47 downto 40);
                elsif (((ret_2_fu_1208_p4 = ap_const_lv3_6) and (icmp_ln870_reg_1437 = ap_const_lv1_1))) then 
                    srcDist_V_11_reg_939 <= ap_phi_mux_srcVal_V_phi_fu_841_p64(55 downto 48);
                elsif (((ret_2_fu_1208_p4 = ap_const_lv3_7) and (icmp_ln870_reg_1437 = ap_const_lv1_1))) then 
                    srcDist_V_11_reg_939 <= ap_phi_mux_srcVal_V_phi_fu_841_p64(63 downto 56);
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    srcDist_V_11_reg_939 <= ap_phi_reg_pp0_iter1_srcDist_V_11_reg_939;
                end if;
            end if; 
        end if;
    end process;

    srcDist_V_1_reg_828_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((rd_pkt_last_V_reg_1433_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
                srcDist_V_1_reg_828 <= srcDist_V_11_reg_939;
            elsif (((icmp_ln170_fu_1119_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
                srcDist_V_1_reg_828 <= srcDist_V_reg_805;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln165_reg_1383 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                i_1_reg_1392 <= i_1_fu_1070_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                icmp_ln165_reg_1383 <= icmp_ln165_fu_1052_p2;
                n_iter_reg_1373 <= n_iter_fu_1034_p3;
                sext_ln165_reg_1378 <= sext_ln165_fu_1048_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln870_reg_1437 <= icmp_ln870_fu_1152_p2;
                icmp_ln874_reg_1609 <= icmp_ln874_fu_1299_p2;
                or_ln211_reg_1613 <= or_ln211_fu_1305_p2;
                rd_pkt_data_V_reg_1424 <= rd_port_TDATA;
                rd_pkt_last_V_reg_1433 <= rd_port_TLAST;
                rd_pkt_last_V_reg_1433_pp0_iter1_reg <= rd_pkt_last_V_reg_1433;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then
                j_2_reg_1410 <= j_2_fu_1109_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln165_1_fu_1076_p2 = ap_const_lv1_0) and (icmp_ln165_reg_1383 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    mul_reg_1405(10 downto 4) <= mul_fu_1101_p3(10 downto 4);
                tail_reg_1400 <= tail_fu_1090_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln874_fu_1299_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                p_Result_2_reg_1622 <= rd_pkt_data_V_reg_1424(55 downto 32);
                p_Result_3_reg_1627 <= rd_pkt_data_V_reg_1424(87 downto 64);
                p_Result_4_reg_1632 <= rd_pkt_data_V_reg_1424(119 downto 96);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln870_fu_1152_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ret_reg_1441 <= ret_fu_1158_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln165_fu_1052_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                select_ln168_reg_1387 <= select_ln168_fu_1062_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state8)) then
                srcDist_V_reg_805 <= srcDist_V_11_reg_939;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((or_ln211_fu_1305_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                trunc_ln674_reg_1617 <= trunc_ln674_fu_1311_p1;
            end if;
        end if;
    end process;
    mul_reg_1405(3 downto 0) <= "0000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, rd_req_V_full_n, ap_CS_fsm_state4, ap_enable_reg_pp0_iter2, icmp_ln165_reg_1383, ap_CS_fsm_state2, icmp_ln165_1_fu_1076_p2, ap_CS_fsm_state3, icmp_ln170_fu_1119_p2, ap_block_pp0_stage0_subdone, ap_enable_reg_pp0_iter1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and ((icmp_ln165_1_fu_1076_p2 = ap_const_lv1_1) or (icmp_ln165_reg_1383 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                if (((icmp_ln170_fu_1119_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state4 => 
                if (((rd_req_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXXX";
        end case;
    end process;
    add_ln161_fu_1028_p2 <= std_logic_vector(unsigned(zext_ln161_fu_1024_p1) + unsigned(ap_const_lv13_1));
    add_ln171_fu_1124_p2 <= std_logic_vector(unsigned(mul_reg_1405) + unsigned(zext_ln170_fu_1115_p1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state8 <= ap_CS_fsm(5);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(sw_data_0_V_full_n, sw_data_1_V_full_n, sw_data_2_V_full_n, sw_data_3_V_full_n, rd_port_TVALID, ap_enable_reg_pp0_iter2, or_ln211_reg_1613, icmp_ln874_reg_1609, ap_enable_reg_pp0_iter0)
    begin
                ap_block_pp0_stage0_01001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (rd_port_TVALID = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((icmp_ln874_reg_1609 = ap_const_lv1_0) and (sw_data_3_V_full_n = ap_const_logic_0)) or ((icmp_ln874_reg_1609 = ap_const_lv1_0) and (sw_data_2_V_full_n = ap_const_logic_0)) or ((icmp_ln874_reg_1609 = ap_const_lv1_0) and (sw_data_1_V_full_n = ap_const_logic_0)) or ((or_ln211_reg_1613 = ap_const_lv1_0) and (sw_data_0_V_full_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(sw_data_0_V_full_n, sw_data_1_V_full_n, sw_data_2_V_full_n, sw_data_3_V_full_n, rd_port_TVALID, ap_enable_reg_pp0_iter2, or_ln211_reg_1613, icmp_ln874_reg_1609, ap_enable_reg_pp0_iter0)
    begin
                ap_block_pp0_stage0_11001 <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (rd_port_TVALID = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((icmp_ln874_reg_1609 = ap_const_lv1_0) and (sw_data_3_V_full_n = ap_const_logic_0)) or ((icmp_ln874_reg_1609 = ap_const_lv1_0) and (sw_data_2_V_full_n = ap_const_logic_0)) or ((icmp_ln874_reg_1609 = ap_const_lv1_0) and (sw_data_1_V_full_n = ap_const_logic_0)) or ((or_ln211_reg_1613 = ap_const_lv1_0) and (sw_data_0_V_full_n = ap_const_logic_0)))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(sw_data_0_V_full_n, sw_data_1_V_full_n, sw_data_2_V_full_n, sw_data_3_V_full_n, rd_port_TVALID, ap_enable_reg_pp0_iter2, or_ln211_reg_1613, icmp_ln874_reg_1609, ap_enable_reg_pp0_iter0)
    begin
                ap_block_pp0_stage0_subdone <= (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (rd_port_TVALID = ap_const_logic_0)) or ((ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (((icmp_ln874_reg_1609 = ap_const_lv1_0) and (sw_data_3_V_full_n = ap_const_logic_0)) or ((icmp_ln874_reg_1609 = ap_const_lv1_0) and (sw_data_2_V_full_n = ap_const_logic_0)) or ((icmp_ln874_reg_1609 = ap_const_lv1_0) and (sw_data_1_V_full_n = ap_const_logic_0)) or ((or_ln211_reg_1613 = ap_const_lv1_0) and (sw_data_0_V_full_n = ap_const_logic_0)))));
    end process;


    ap_block_state5_pp0_stage0_iter0_assign_proc : process(rd_port_TVALID)
    begin
                ap_block_state5_pp0_stage0_iter0 <= (rd_port_TVALID = ap_const_logic_0);
    end process;

        ap_block_state6_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state7_pp0_stage0_iter2_assign_proc : process(sw_data_0_V_full_n, sw_data_1_V_full_n, sw_data_2_V_full_n, sw_data_3_V_full_n, or_ln211_reg_1613, icmp_ln874_reg_1609)
    begin
                ap_block_state7_pp0_stage0_iter2 <= (((icmp_ln874_reg_1609 = ap_const_lv1_0) and (sw_data_3_V_full_n = ap_const_logic_0)) or ((icmp_ln874_reg_1609 = ap_const_lv1_0) and (sw_data_2_V_full_n = ap_const_logic_0)) or ((icmp_ln874_reg_1609 = ap_const_lv1_0) and (sw_data_1_V_full_n = ap_const_logic_0)) or ((or_ln211_reg_1613 = ap_const_lv1_0) and (sw_data_0_V_full_n = ap_const_logic_0)));
    end process;


    ap_condition_594_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter1)
    begin
                ap_condition_594 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_condition_pp0_flush_enable_assign_proc : process(ap_CS_fsm_pp0_stage0, rd_pkt_last_V_fu_1138_p1, ap_block_pp0_stage0_subdone)
    begin
        if (((rd_pkt_last_V_fu_1138_p1 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_pp0_flush_enable <= ap_const_logic_1;
        else 
            ap_condition_pp0_flush_enable <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_ln165_reg_1383, ap_CS_fsm_state2, icmp_ln165_1_fu_1076_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and ((icmp_ln165_1_fu_1076_p2 = ap_const_lv1_1) or (icmp_ln165_reg_1383 = ap_const_lv1_1))) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_invld_flag_phi_fu_972_p20_assign_proc : process(icmp_ln870_reg_1437, ret_2_fu_1208_p4, ap_phi_reg_pp0_iter1_invld_flag_reg_969)
    begin
        if ((icmp_ln870_reg_1437 = ap_const_lv1_0)) then 
            ap_phi_mux_invld_flag_phi_fu_972_p20 <= ap_const_lv1_0;
        elsif ((((ret_2_fu_1208_p4 = ap_const_lv3_0) and (icmp_ln870_reg_1437 = ap_const_lv1_1)) or ((ret_2_fu_1208_p4 = ap_const_lv3_1) and (icmp_ln870_reg_1437 = ap_const_lv1_1)) or ((ret_2_fu_1208_p4 = ap_const_lv3_2) and (icmp_ln870_reg_1437 = ap_const_lv1_1)) or ((ret_2_fu_1208_p4 = ap_const_lv3_3) and (icmp_ln870_reg_1437 = ap_const_lv1_1)) or ((ret_2_fu_1208_p4 = ap_const_lv3_4) and (icmp_ln870_reg_1437 = ap_const_lv1_1)) or ((ret_2_fu_1208_p4 = ap_const_lv3_5) and (icmp_ln870_reg_1437 = ap_const_lv1_1)) or ((ret_2_fu_1208_p4 = ap_const_lv3_6) and (icmp_ln870_reg_1437 = ap_const_lv1_1)) or ((ret_2_fu_1208_p4 = ap_const_lv3_7) and (icmp_ln870_reg_1437 = ap_const_lv1_1)))) then 
            ap_phi_mux_invld_flag_phi_fu_972_p20 <= ap_const_lv1_1;
        else 
            ap_phi_mux_invld_flag_phi_fu_972_p20 <= ap_phi_reg_pp0_iter1_invld_flag_reg_969;
        end if; 
    end process;


    ap_phi_mux_srcDist_V_11_phi_fu_944_p20_assign_proc : process(icmp_ln870_reg_1437, ret_2_fu_1208_p4, ap_phi_mux_srcDist_V_1_phi_fu_831_p4, ap_phi_mux_srcVal_V_phi_fu_841_p64, ap_phi_reg_pp0_iter1_srcDist_V_11_reg_939, srcDist_V_2_fu_1294_p1)
    begin
        if ((icmp_ln870_reg_1437 = ap_const_lv1_0)) then 
            ap_phi_mux_srcDist_V_11_phi_fu_944_p20 <= ap_phi_mux_srcDist_V_1_phi_fu_831_p4;
        elsif (((ret_2_fu_1208_p4 = ap_const_lv3_0) and (icmp_ln870_reg_1437 = ap_const_lv1_1))) then 
            ap_phi_mux_srcDist_V_11_phi_fu_944_p20 <= srcDist_V_2_fu_1294_p1;
        elsif (((ret_2_fu_1208_p4 = ap_const_lv3_1) and (icmp_ln870_reg_1437 = ap_const_lv1_1))) then 
            ap_phi_mux_srcDist_V_11_phi_fu_944_p20 <= ap_phi_mux_srcVal_V_phi_fu_841_p64(15 downto 8);
        elsif (((ret_2_fu_1208_p4 = ap_const_lv3_2) and (icmp_ln870_reg_1437 = ap_const_lv1_1))) then 
            ap_phi_mux_srcDist_V_11_phi_fu_944_p20 <= ap_phi_mux_srcVal_V_phi_fu_841_p64(23 downto 16);
        elsif (((ret_2_fu_1208_p4 = ap_const_lv3_3) and (icmp_ln870_reg_1437 = ap_const_lv1_1))) then 
            ap_phi_mux_srcDist_V_11_phi_fu_944_p20 <= ap_phi_mux_srcVal_V_phi_fu_841_p64(31 downto 24);
        elsif (((ret_2_fu_1208_p4 = ap_const_lv3_4) and (icmp_ln870_reg_1437 = ap_const_lv1_1))) then 
            ap_phi_mux_srcDist_V_11_phi_fu_944_p20 <= ap_phi_mux_srcVal_V_phi_fu_841_p64(39 downto 32);
        elsif (((ret_2_fu_1208_p4 = ap_const_lv3_5) and (icmp_ln870_reg_1437 = ap_const_lv1_1))) then 
            ap_phi_mux_srcDist_V_11_phi_fu_944_p20 <= ap_phi_mux_srcVal_V_phi_fu_841_p64(47 downto 40);
        elsif (((ret_2_fu_1208_p4 = ap_const_lv3_6) and (icmp_ln870_reg_1437 = ap_const_lv1_1))) then 
            ap_phi_mux_srcDist_V_11_phi_fu_944_p20 <= ap_phi_mux_srcVal_V_phi_fu_841_p64(55 downto 48);
        elsif (((ret_2_fu_1208_p4 = ap_const_lv3_7) and (icmp_ln870_reg_1437 = ap_const_lv1_1))) then 
            ap_phi_mux_srcDist_V_11_phi_fu_944_p20 <= ap_phi_mux_srcVal_V_phi_fu_841_p64(63 downto 56);
        else 
            ap_phi_mux_srcDist_V_11_phi_fu_944_p20 <= ap_phi_reg_pp0_iter1_srcDist_V_11_reg_939;
        end if; 
    end process;


    ap_phi_mux_srcDist_V_1_phi_fu_831_p4_assign_proc : process(ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, srcDist_V_1_reg_828, srcDist_V_11_reg_939, rd_pkt_last_V_reg_1433_pp0_iter1_reg)
    begin
        if (((rd_pkt_last_V_reg_1433_pp0_iter1_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            ap_phi_mux_srcDist_V_1_phi_fu_831_p4 <= srcDist_V_11_reg_939;
        else 
            ap_phi_mux_srcDist_V_1_phi_fu_831_p4 <= srcDist_V_1_reg_828;
        end if; 
    end process;


    ap_phi_mux_srcVal_V_phi_fu_841_p64_assign_proc : process(tmp_dist_0_q0, tmp_dist_1_q0, tmp_dist_2_q0, tmp_dist_3_q0, tmp_dist_4_q0, tmp_dist_5_q0, tmp_dist_6_q0, tmp_dist_7_q0, tmp_dist_8_q0, tmp_dist_9_q0, tmp_dist_10_q0, tmp_dist_11_q0, tmp_dist_12_q0, tmp_dist_13_q0, tmp_dist_14_q0, tmp_dist_15_q0, tmp_dist_16_q0, tmp_dist_17_q0, tmp_dist_18_q0, tmp_dist_19_q0, tmp_dist_20_q0, tmp_dist_21_q0, tmp_dist_22_q0, tmp_dist_23_q0, tmp_dist_24_q0, tmp_dist_25_q0, tmp_dist_26_q0, tmp_dist_27_q0, tmp_dist_28_q0, tmp_dist_29_q0, tmp_dist_30_q0, tmp_dist_31_q0, icmp_ln870_reg_1437, ret_reg_1441, ap_phi_reg_pp0_iter1_srcVal_V_reg_838)
    begin
        if ((icmp_ln870_reg_1437 = ap_const_lv1_1)) then
            if ((ret_reg_1441 = ap_const_lv5_1F)) then 
                ap_phi_mux_srcVal_V_phi_fu_841_p64 <= tmp_dist_31_q0;
            elsif ((ret_reg_1441 = ap_const_lv5_1E)) then 
                ap_phi_mux_srcVal_V_phi_fu_841_p64 <= tmp_dist_30_q0;
            elsif ((ret_reg_1441 = ap_const_lv5_1D)) then 
                ap_phi_mux_srcVal_V_phi_fu_841_p64 <= tmp_dist_29_q0;
            elsif ((ret_reg_1441 = ap_const_lv5_1C)) then 
                ap_phi_mux_srcVal_V_phi_fu_841_p64 <= tmp_dist_28_q0;
            elsif ((ret_reg_1441 = ap_const_lv5_1B)) then 
                ap_phi_mux_srcVal_V_phi_fu_841_p64 <= tmp_dist_27_q0;
            elsif ((ret_reg_1441 = ap_const_lv5_1A)) then 
                ap_phi_mux_srcVal_V_phi_fu_841_p64 <= tmp_dist_26_q0;
            elsif ((ret_reg_1441 = ap_const_lv5_19)) then 
                ap_phi_mux_srcVal_V_phi_fu_841_p64 <= tmp_dist_25_q0;
            elsif ((ret_reg_1441 = ap_const_lv5_18)) then 
                ap_phi_mux_srcVal_V_phi_fu_841_p64 <= tmp_dist_24_q0;
            elsif ((ret_reg_1441 = ap_const_lv5_17)) then 
                ap_phi_mux_srcVal_V_phi_fu_841_p64 <= tmp_dist_23_q0;
            elsif ((ret_reg_1441 = ap_const_lv5_16)) then 
                ap_phi_mux_srcVal_V_phi_fu_841_p64 <= tmp_dist_22_q0;
            elsif ((ret_reg_1441 = ap_const_lv5_15)) then 
                ap_phi_mux_srcVal_V_phi_fu_841_p64 <= tmp_dist_21_q0;
            elsif ((ret_reg_1441 = ap_const_lv5_14)) then 
                ap_phi_mux_srcVal_V_phi_fu_841_p64 <= tmp_dist_20_q0;
            elsif ((ret_reg_1441 = ap_const_lv5_13)) then 
                ap_phi_mux_srcVal_V_phi_fu_841_p64 <= tmp_dist_19_q0;
            elsif ((ret_reg_1441 = ap_const_lv5_12)) then 
                ap_phi_mux_srcVal_V_phi_fu_841_p64 <= tmp_dist_18_q0;
            elsif ((ret_reg_1441 = ap_const_lv5_11)) then 
                ap_phi_mux_srcVal_V_phi_fu_841_p64 <= tmp_dist_17_q0;
            elsif ((ret_reg_1441 = ap_const_lv5_10)) then 
                ap_phi_mux_srcVal_V_phi_fu_841_p64 <= tmp_dist_16_q0;
            elsif ((ret_reg_1441 = ap_const_lv5_F)) then 
                ap_phi_mux_srcVal_V_phi_fu_841_p64 <= tmp_dist_15_q0;
            elsif ((ret_reg_1441 = ap_const_lv5_E)) then 
                ap_phi_mux_srcVal_V_phi_fu_841_p64 <= tmp_dist_14_q0;
            elsif ((ret_reg_1441 = ap_const_lv5_D)) then 
                ap_phi_mux_srcVal_V_phi_fu_841_p64 <= tmp_dist_13_q0;
            elsif ((ret_reg_1441 = ap_const_lv5_C)) then 
                ap_phi_mux_srcVal_V_phi_fu_841_p64 <= tmp_dist_12_q0;
            elsif ((ret_reg_1441 = ap_const_lv5_B)) then 
                ap_phi_mux_srcVal_V_phi_fu_841_p64 <= tmp_dist_11_q0;
            elsif ((ret_reg_1441 = ap_const_lv5_A)) then 
                ap_phi_mux_srcVal_V_phi_fu_841_p64 <= tmp_dist_10_q0;
            elsif ((ret_reg_1441 = ap_const_lv5_9)) then 
                ap_phi_mux_srcVal_V_phi_fu_841_p64 <= tmp_dist_9_q0;
            elsif ((ret_reg_1441 = ap_const_lv5_8)) then 
                ap_phi_mux_srcVal_V_phi_fu_841_p64 <= tmp_dist_8_q0;
            elsif ((ret_reg_1441 = ap_const_lv5_7)) then 
                ap_phi_mux_srcVal_V_phi_fu_841_p64 <= tmp_dist_7_q0;
            elsif ((ret_reg_1441 = ap_const_lv5_6)) then 
                ap_phi_mux_srcVal_V_phi_fu_841_p64 <= tmp_dist_6_q0;
            elsif ((ret_reg_1441 = ap_const_lv5_5)) then 
                ap_phi_mux_srcVal_V_phi_fu_841_p64 <= tmp_dist_5_q0;
            elsif ((ret_reg_1441 = ap_const_lv5_4)) then 
                ap_phi_mux_srcVal_V_phi_fu_841_p64 <= tmp_dist_4_q0;
            elsif ((ret_reg_1441 = ap_const_lv5_3)) then 
                ap_phi_mux_srcVal_V_phi_fu_841_p64 <= tmp_dist_3_q0;
            elsif ((ret_reg_1441 = ap_const_lv5_2)) then 
                ap_phi_mux_srcVal_V_phi_fu_841_p64 <= tmp_dist_2_q0;
            elsif ((ret_reg_1441 = ap_const_lv5_1)) then 
                ap_phi_mux_srcVal_V_phi_fu_841_p64 <= tmp_dist_1_q0;
            elsif ((ret_reg_1441 = ap_const_lv5_0)) then 
                ap_phi_mux_srcVal_V_phi_fu_841_p64 <= tmp_dist_0_q0;
            else 
                ap_phi_mux_srcVal_V_phi_fu_841_p64 <= ap_phi_reg_pp0_iter1_srcVal_V_reg_838;
            end if;
        else 
            ap_phi_mux_srcVal_V_phi_fu_841_p64 <= ap_phi_reg_pp0_iter1_srcVal_V_reg_838;
        end if; 
    end process;

    ap_phi_reg_pp0_iter1_invld_flag_reg_969 <= "X";
    ap_phi_reg_pp0_iter1_srcDist_V_11_reg_939 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter1_srcVal_V_reg_838 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_ready_assign_proc : process(icmp_ln165_reg_1383, ap_CS_fsm_state2, icmp_ln165_1_fu_1076_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and ((icmp_ln165_1_fu_1076_p2 = ap_const_lv1_1) or (icmp_ln165_reg_1383 = ap_const_lv1_1)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    empty_54_fu_1097_p1 <= i_reg_794(7 - 1 downto 0);
    empty_fu_1004_p1 <= n_mem_tuples(4 - 1 downto 0);
    i_1_fu_1070_p2 <= std_logic_vector(unsigned(i_reg_794) + unsigned(ap_const_lv13_1));
    icmp_ln161_fu_1008_p2 <= "1" when (empty_fu_1004_p1 = ap_const_lv4_0) else "0";
    icmp_ln165_1_fu_1076_p2 <= "1" when (i_reg_794 = n_iter_reg_1373) else "0";
    icmp_ln165_fu_1052_p2 <= "1" when (n_iter_fu_1034_p3 = ap_const_lv13_0) else "0";
    icmp_ln168_fu_1085_p2 <= "1" when (zext_ln165_fu_1081_p1 = sext_ln165_reg_1378) else "0";
    icmp_ln170_fu_1119_p2 <= "1" when (j_reg_817 = tail_reg_1400) else "0";
    icmp_ln870_fu_1152_p2 <= "1" when (p_Result_s_fu_1142_p4 = ap_const_lv8_0) else "0";
    icmp_ln874_fu_1299_p2 <= "1" when (ap_phi_mux_srcDist_V_11_phi_fu_944_p20 = ap_const_lv8_FF) else "0";
    j_2_fu_1109_p2 <= std_logic_vector(unsigned(j_reg_817) + unsigned(ap_const_lv5_1));
    mem_req_buff_address0 <= zext_ln171_fu_1129_p1(11 - 1 downto 0);

    mem_req_buff_ce0_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            mem_req_buff_ce0 <= ap_const_logic_1;
        else 
            mem_req_buff_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    mul_fu_1101_p3 <= (empty_54_fu_1097_p1 & ap_const_lv4_0);
    n_iter_fu_1034_p3 <= 
        zext_ln161_fu_1024_p1 when (icmp_ln161_fu_1008_p2(0) = '1') else 
        add_ln161_fu_1028_p2;
    or_ln211_fu_1305_p2 <= (icmp_ln874_fu_1299_p2 or ap_phi_mux_invld_flag_phi_fu_972_p20);
    p_Result_s_fu_1142_p4 <= rd_port_TDATA(31 downto 24);
    rd_pkt_last_V_fu_1138_p1 <= rd_port_TLAST;

    rd_port_TDATA_blk_n_assign_proc : process(rd_port_TVALID, ap_block_pp0_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rd_port_TDATA_blk_n <= rd_port_TVALID;
        else 
            rd_port_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    rd_port_TREADY_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            rd_port_TREADY <= ap_const_logic_1;
        else 
            rd_port_TREADY <= ap_const_logic_0;
        end if; 
    end process;


    rd_req_V_blk_n_assign_proc : process(rd_req_V_full_n, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            rd_req_V_blk_n <= rd_req_V_full_n;
        else 
            rd_req_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    rd_req_V_din <= mem_req_buff_q0;

    rd_req_V_write_assign_proc : process(rd_req_V_full_n, ap_CS_fsm_state4)
    begin
        if (((rd_req_V_full_n = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            rd_req_V_write <= ap_const_logic_1;
        else 
            rd_req_V_write <= ap_const_logic_0;
        end if; 
    end process;


    rd_start_assign_proc : process(ap_CS_fsm_state3, icmp_ln170_fu_1119_p2, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            rd_start <= ap_const_logic_0;
        elsif (((icmp_ln170_fu_1119_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3))) then 
            rd_start <= ap_const_logic_1;
        else 
            rd_start <= 'X';
        end if; 
    end process;


    rd_start_ap_vld_assign_proc : process(ap_CS_fsm_state3, icmp_ln170_fu_1119_p2, ap_CS_fsm_state8)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state8) or ((icmp_ln170_fu_1119_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state3)))) then 
            rd_start_ap_vld <= ap_const_logic_1;
        else 
            rd_start_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    ret_2_fu_1208_p4 <= rd_pkt_data_V_reg_1424(7 downto 5);
    ret_4_fu_1162_p4 <= rd_port_TDATA(19 downto 8);
    ret_fu_1158_p1 <= rd_port_TDATA(5 - 1 downto 0);
    select_ln168_fu_1062_p3 <= 
        ap_const_lv5_10 when (icmp_ln161_fu_1008_p2(0) = '1') else 
        zext_ln168_fu_1058_p1;
        sext_ln165_fu_1048_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_fu_1042_p2),14));

    srcDist_V_2_fu_1294_p1 <= ap_phi_mux_srcVal_V_phi_fu_841_p64(8 - 1 downto 0);
    sub_fu_1042_p2 <= std_logic_vector(unsigned(n_iter_fu_1034_p3) + unsigned(ap_const_lv13_1FFF));

    sw_data_0_V_blk_n_assign_proc : process(sw_data_0_V_full_n, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, or_ln211_reg_1613)
    begin
        if (((or_ln211_reg_1613 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            sw_data_0_V_blk_n <= sw_data_0_V_full_n;
        else 
            sw_data_0_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    sw_data_0_V_din <= (srcDist_V_11_reg_939 & trunc_ln674_reg_1617);

    sw_data_0_V_write_assign_proc : process(ap_enable_reg_pp0_iter2, or_ln211_reg_1613, ap_block_pp0_stage0_11001)
    begin
        if (((or_ln211_reg_1613 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            sw_data_0_V_write <= ap_const_logic_1;
        else 
            sw_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;


    sw_data_1_V_blk_n_assign_proc : process(sw_data_1_V_full_n, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, icmp_ln874_reg_1609)
    begin
        if (((icmp_ln874_reg_1609 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            sw_data_1_V_blk_n <= sw_data_1_V_full_n;
        else 
            sw_data_1_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    sw_data_1_V_din <= (srcDist_V_11_reg_939 & p_Result_2_reg_1622);

    sw_data_1_V_write_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln874_reg_1609, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln874_reg_1609 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            sw_data_1_V_write <= ap_const_logic_1;
        else 
            sw_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;


    sw_data_2_V_blk_n_assign_proc : process(sw_data_2_V_full_n, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, icmp_ln874_reg_1609)
    begin
        if (((icmp_ln874_reg_1609 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            sw_data_2_V_blk_n <= sw_data_2_V_full_n;
        else 
            sw_data_2_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    sw_data_2_V_din <= (srcDist_V_11_reg_939 & p_Result_3_reg_1627);

    sw_data_2_V_write_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln874_reg_1609, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln874_reg_1609 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            sw_data_2_V_write <= ap_const_logic_1;
        else 
            sw_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;


    sw_data_3_V_blk_n_assign_proc : process(sw_data_3_V_full_n, ap_enable_reg_pp0_iter2, ap_block_pp0_stage0, icmp_ln874_reg_1609)
    begin
        if (((icmp_ln874_reg_1609 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            sw_data_3_V_blk_n <= sw_data_3_V_full_n;
        else 
            sw_data_3_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    sw_data_3_V_din <= (srcDist_V_11_reg_939 & p_Result_4_reg_1632);

    sw_data_3_V_write_assign_proc : process(ap_enable_reg_pp0_iter2, icmp_ln874_reg_1609, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln874_reg_1609 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1))) then 
            sw_data_3_V_write <= ap_const_logic_1;
        else 
            sw_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;

    tail_fu_1090_p3 <= 
        select_ln168_reg_1387 when (icmp_ln168_fu_1085_p2(0) = '1') else 
        ap_const_lv5_10;
    tmp_dist_0_address0 <= zext_ln534_fu_1172_p1(12 - 1 downto 0);

    tmp_dist_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_dist_0_ce0 <= ap_const_logic_1;
        else 
            tmp_dist_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_dist_10_address0 <= zext_ln534_fu_1172_p1(12 - 1 downto 0);

    tmp_dist_10_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_dist_10_ce0 <= ap_const_logic_1;
        else 
            tmp_dist_10_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_dist_11_address0 <= zext_ln534_fu_1172_p1(12 - 1 downto 0);

    tmp_dist_11_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_dist_11_ce0 <= ap_const_logic_1;
        else 
            tmp_dist_11_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_dist_12_address0 <= zext_ln534_fu_1172_p1(12 - 1 downto 0);

    tmp_dist_12_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_dist_12_ce0 <= ap_const_logic_1;
        else 
            tmp_dist_12_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_dist_13_address0 <= zext_ln534_fu_1172_p1(12 - 1 downto 0);

    tmp_dist_13_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_dist_13_ce0 <= ap_const_logic_1;
        else 
            tmp_dist_13_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_dist_14_address0 <= zext_ln534_fu_1172_p1(12 - 1 downto 0);

    tmp_dist_14_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_dist_14_ce0 <= ap_const_logic_1;
        else 
            tmp_dist_14_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_dist_15_address0 <= zext_ln534_fu_1172_p1(12 - 1 downto 0);

    tmp_dist_15_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_dist_15_ce0 <= ap_const_logic_1;
        else 
            tmp_dist_15_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_dist_16_address0 <= zext_ln534_fu_1172_p1(12 - 1 downto 0);

    tmp_dist_16_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_dist_16_ce0 <= ap_const_logic_1;
        else 
            tmp_dist_16_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_dist_17_address0 <= zext_ln534_fu_1172_p1(12 - 1 downto 0);

    tmp_dist_17_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_dist_17_ce0 <= ap_const_logic_1;
        else 
            tmp_dist_17_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_dist_18_address0 <= zext_ln534_fu_1172_p1(12 - 1 downto 0);

    tmp_dist_18_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_dist_18_ce0 <= ap_const_logic_1;
        else 
            tmp_dist_18_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_dist_19_address0 <= zext_ln534_fu_1172_p1(12 - 1 downto 0);

    tmp_dist_19_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_dist_19_ce0 <= ap_const_logic_1;
        else 
            tmp_dist_19_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_dist_1_address0 <= zext_ln534_fu_1172_p1(12 - 1 downto 0);

    tmp_dist_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_dist_1_ce0 <= ap_const_logic_1;
        else 
            tmp_dist_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_dist_20_address0 <= zext_ln534_fu_1172_p1(12 - 1 downto 0);

    tmp_dist_20_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_dist_20_ce0 <= ap_const_logic_1;
        else 
            tmp_dist_20_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_dist_21_address0 <= zext_ln534_fu_1172_p1(12 - 1 downto 0);

    tmp_dist_21_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_dist_21_ce0 <= ap_const_logic_1;
        else 
            tmp_dist_21_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_dist_22_address0 <= zext_ln534_fu_1172_p1(12 - 1 downto 0);

    tmp_dist_22_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_dist_22_ce0 <= ap_const_logic_1;
        else 
            tmp_dist_22_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_dist_23_address0 <= zext_ln534_fu_1172_p1(12 - 1 downto 0);

    tmp_dist_23_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_dist_23_ce0 <= ap_const_logic_1;
        else 
            tmp_dist_23_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_dist_24_address0 <= zext_ln534_fu_1172_p1(12 - 1 downto 0);

    tmp_dist_24_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_dist_24_ce0 <= ap_const_logic_1;
        else 
            tmp_dist_24_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_dist_25_address0 <= zext_ln534_fu_1172_p1(12 - 1 downto 0);

    tmp_dist_25_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_dist_25_ce0 <= ap_const_logic_1;
        else 
            tmp_dist_25_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_dist_26_address0 <= zext_ln534_fu_1172_p1(12 - 1 downto 0);

    tmp_dist_26_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_dist_26_ce0 <= ap_const_logic_1;
        else 
            tmp_dist_26_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_dist_27_address0 <= zext_ln534_fu_1172_p1(12 - 1 downto 0);

    tmp_dist_27_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_dist_27_ce0 <= ap_const_logic_1;
        else 
            tmp_dist_27_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_dist_28_address0 <= zext_ln534_fu_1172_p1(12 - 1 downto 0);

    tmp_dist_28_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_dist_28_ce0 <= ap_const_logic_1;
        else 
            tmp_dist_28_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_dist_29_address0 <= zext_ln534_fu_1172_p1(12 - 1 downto 0);

    tmp_dist_29_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_dist_29_ce0 <= ap_const_logic_1;
        else 
            tmp_dist_29_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_dist_2_address0 <= zext_ln534_fu_1172_p1(12 - 1 downto 0);

    tmp_dist_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_dist_2_ce0 <= ap_const_logic_1;
        else 
            tmp_dist_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_dist_30_address0 <= zext_ln534_fu_1172_p1(12 - 1 downto 0);

    tmp_dist_30_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_dist_30_ce0 <= ap_const_logic_1;
        else 
            tmp_dist_30_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_dist_31_address0 <= zext_ln534_fu_1172_p1(12 - 1 downto 0);

    tmp_dist_31_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_dist_31_ce0 <= ap_const_logic_1;
        else 
            tmp_dist_31_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_dist_3_address0 <= zext_ln534_fu_1172_p1(12 - 1 downto 0);

    tmp_dist_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_dist_3_ce0 <= ap_const_logic_1;
        else 
            tmp_dist_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_dist_4_address0 <= zext_ln534_fu_1172_p1(12 - 1 downto 0);

    tmp_dist_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_dist_4_ce0 <= ap_const_logic_1;
        else 
            tmp_dist_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_dist_5_address0 <= zext_ln534_fu_1172_p1(12 - 1 downto 0);

    tmp_dist_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_dist_5_ce0 <= ap_const_logic_1;
        else 
            tmp_dist_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_dist_6_address0 <= zext_ln534_fu_1172_p1(12 - 1 downto 0);

    tmp_dist_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_dist_6_ce0 <= ap_const_logic_1;
        else 
            tmp_dist_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_dist_7_address0 <= zext_ln534_fu_1172_p1(12 - 1 downto 0);

    tmp_dist_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_dist_7_ce0 <= ap_const_logic_1;
        else 
            tmp_dist_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_dist_8_address0 <= zext_ln534_fu_1172_p1(12 - 1 downto 0);

    tmp_dist_8_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_dist_8_ce0 <= ap_const_logic_1;
        else 
            tmp_dist_8_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_dist_9_address0 <= zext_ln534_fu_1172_p1(12 - 1 downto 0);

    tmp_dist_9_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_dist_9_ce0 <= ap_const_logic_1;
        else 
            tmp_dist_9_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    trunc_ln161_1_fu_1014_p4 <= n_mem_tuples(15 downto 4);
    trunc_ln674_fu_1311_p1 <= rd_pkt_data_V_reg_1424(24 - 1 downto 0);
    zext_ln161_fu_1024_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln161_1_fu_1014_p4),13));
    zext_ln165_fu_1081_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_reg_794),14));
    zext_ln168_fu_1058_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_fu_1004_p1),5));
    zext_ln170_fu_1115_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j_reg_817),11));
    zext_ln171_fu_1129_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln171_fu_1124_p2),64));
    zext_ln534_fu_1172_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_4_fu_1162_p4),64));
end behav;
