// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module BFS_Scatter_feed_network (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        rd_req_V_din,
        rd_req_V_full_n,
        rd_req_V_write,
        rd_start,
        rd_start_ap_vld,
        tmp_dist_0_address0,
        tmp_dist_0_ce0,
        tmp_dist_0_q0,
        tmp_dist_1_address0,
        tmp_dist_1_ce0,
        tmp_dist_1_q0,
        tmp_dist_2_address0,
        tmp_dist_2_ce0,
        tmp_dist_2_q0,
        tmp_dist_3_address0,
        tmp_dist_3_ce0,
        tmp_dist_3_q0,
        tmp_dist_4_address0,
        tmp_dist_4_ce0,
        tmp_dist_4_q0,
        tmp_dist_5_address0,
        tmp_dist_5_ce0,
        tmp_dist_5_q0,
        tmp_dist_6_address0,
        tmp_dist_6_ce0,
        tmp_dist_6_q0,
        tmp_dist_7_address0,
        tmp_dist_7_ce0,
        tmp_dist_7_q0,
        tmp_dist_8_address0,
        tmp_dist_8_ce0,
        tmp_dist_8_q0,
        tmp_dist_9_address0,
        tmp_dist_9_ce0,
        tmp_dist_9_q0,
        tmp_dist_10_address0,
        tmp_dist_10_ce0,
        tmp_dist_10_q0,
        tmp_dist_11_address0,
        tmp_dist_11_ce0,
        tmp_dist_11_q0,
        tmp_dist_12_address0,
        tmp_dist_12_ce0,
        tmp_dist_12_q0,
        tmp_dist_13_address0,
        tmp_dist_13_ce0,
        tmp_dist_13_q0,
        tmp_dist_14_address0,
        tmp_dist_14_ce0,
        tmp_dist_14_q0,
        tmp_dist_15_address0,
        tmp_dist_15_ce0,
        tmp_dist_15_q0,
        tmp_dist_16_address0,
        tmp_dist_16_ce0,
        tmp_dist_16_q0,
        tmp_dist_17_address0,
        tmp_dist_17_ce0,
        tmp_dist_17_q0,
        tmp_dist_18_address0,
        tmp_dist_18_ce0,
        tmp_dist_18_q0,
        tmp_dist_19_address0,
        tmp_dist_19_ce0,
        tmp_dist_19_q0,
        tmp_dist_20_address0,
        tmp_dist_20_ce0,
        tmp_dist_20_q0,
        tmp_dist_21_address0,
        tmp_dist_21_ce0,
        tmp_dist_21_q0,
        tmp_dist_22_address0,
        tmp_dist_22_ce0,
        tmp_dist_22_q0,
        tmp_dist_23_address0,
        tmp_dist_23_ce0,
        tmp_dist_23_q0,
        tmp_dist_24_address0,
        tmp_dist_24_ce0,
        tmp_dist_24_q0,
        tmp_dist_25_address0,
        tmp_dist_25_ce0,
        tmp_dist_25_q0,
        tmp_dist_26_address0,
        tmp_dist_26_ce0,
        tmp_dist_26_q0,
        tmp_dist_27_address0,
        tmp_dist_27_ce0,
        tmp_dist_27_q0,
        tmp_dist_28_address0,
        tmp_dist_28_ce0,
        tmp_dist_28_q0,
        tmp_dist_29_address0,
        tmp_dist_29_ce0,
        tmp_dist_29_q0,
        tmp_dist_30_address0,
        tmp_dist_30_ce0,
        tmp_dist_30_q0,
        tmp_dist_31_address0,
        tmp_dist_31_ce0,
        tmp_dist_31_q0,
        sw_data_0_V_din,
        sw_data_0_V_full_n,
        sw_data_0_V_write,
        sw_data_1_V_din,
        sw_data_1_V_full_n,
        sw_data_1_V_write,
        sw_data_2_V_din,
        sw_data_2_V_full_n,
        sw_data_2_V_write,
        sw_data_3_V_din,
        sw_data_3_V_full_n,
        sw_data_3_V_write,
        rd_port_TDATA,
        rd_port_TVALID,
        rd_port_TREADY,
        rd_port_TKEEP,
        rd_port_TSTRB,
        rd_port_TLAST,
        n_mem_tuples,
        mem_req_buff_address0,
        mem_req_buff_ce0,
        mem_req_buff_q0
);

parameter    ap_ST_fsm_state1 = 6'd1;
parameter    ap_ST_fsm_state2 = 6'd2;
parameter    ap_ST_fsm_state3 = 6'd4;
parameter    ap_ST_fsm_state4 = 6'd8;
parameter    ap_ST_fsm_pp0_stage0 = 6'd16;
parameter    ap_ST_fsm_state8 = 6'd32;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [31:0] rd_req_V_din;
input   rd_req_V_full_n;
output   rd_req_V_write;
output   rd_start;
output   rd_start_ap_vld;
output  [11:0] tmp_dist_0_address0;
output   tmp_dist_0_ce0;
input  [63:0] tmp_dist_0_q0;
output  [11:0] tmp_dist_1_address0;
output   tmp_dist_1_ce0;
input  [63:0] tmp_dist_1_q0;
output  [11:0] tmp_dist_2_address0;
output   tmp_dist_2_ce0;
input  [63:0] tmp_dist_2_q0;
output  [11:0] tmp_dist_3_address0;
output   tmp_dist_3_ce0;
input  [63:0] tmp_dist_3_q0;
output  [11:0] tmp_dist_4_address0;
output   tmp_dist_4_ce0;
input  [63:0] tmp_dist_4_q0;
output  [11:0] tmp_dist_5_address0;
output   tmp_dist_5_ce0;
input  [63:0] tmp_dist_5_q0;
output  [11:0] tmp_dist_6_address0;
output   tmp_dist_6_ce0;
input  [63:0] tmp_dist_6_q0;
output  [11:0] tmp_dist_7_address0;
output   tmp_dist_7_ce0;
input  [63:0] tmp_dist_7_q0;
output  [11:0] tmp_dist_8_address0;
output   tmp_dist_8_ce0;
input  [63:0] tmp_dist_8_q0;
output  [11:0] tmp_dist_9_address0;
output   tmp_dist_9_ce0;
input  [63:0] tmp_dist_9_q0;
output  [11:0] tmp_dist_10_address0;
output   tmp_dist_10_ce0;
input  [63:0] tmp_dist_10_q0;
output  [11:0] tmp_dist_11_address0;
output   tmp_dist_11_ce0;
input  [63:0] tmp_dist_11_q0;
output  [11:0] tmp_dist_12_address0;
output   tmp_dist_12_ce0;
input  [63:0] tmp_dist_12_q0;
output  [11:0] tmp_dist_13_address0;
output   tmp_dist_13_ce0;
input  [63:0] tmp_dist_13_q0;
output  [11:0] tmp_dist_14_address0;
output   tmp_dist_14_ce0;
input  [63:0] tmp_dist_14_q0;
output  [11:0] tmp_dist_15_address0;
output   tmp_dist_15_ce0;
input  [63:0] tmp_dist_15_q0;
output  [11:0] tmp_dist_16_address0;
output   tmp_dist_16_ce0;
input  [63:0] tmp_dist_16_q0;
output  [11:0] tmp_dist_17_address0;
output   tmp_dist_17_ce0;
input  [63:0] tmp_dist_17_q0;
output  [11:0] tmp_dist_18_address0;
output   tmp_dist_18_ce0;
input  [63:0] tmp_dist_18_q0;
output  [11:0] tmp_dist_19_address0;
output   tmp_dist_19_ce0;
input  [63:0] tmp_dist_19_q0;
output  [11:0] tmp_dist_20_address0;
output   tmp_dist_20_ce0;
input  [63:0] tmp_dist_20_q0;
output  [11:0] tmp_dist_21_address0;
output   tmp_dist_21_ce0;
input  [63:0] tmp_dist_21_q0;
output  [11:0] tmp_dist_22_address0;
output   tmp_dist_22_ce0;
input  [63:0] tmp_dist_22_q0;
output  [11:0] tmp_dist_23_address0;
output   tmp_dist_23_ce0;
input  [63:0] tmp_dist_23_q0;
output  [11:0] tmp_dist_24_address0;
output   tmp_dist_24_ce0;
input  [63:0] tmp_dist_24_q0;
output  [11:0] tmp_dist_25_address0;
output   tmp_dist_25_ce0;
input  [63:0] tmp_dist_25_q0;
output  [11:0] tmp_dist_26_address0;
output   tmp_dist_26_ce0;
input  [63:0] tmp_dist_26_q0;
output  [11:0] tmp_dist_27_address0;
output   tmp_dist_27_ce0;
input  [63:0] tmp_dist_27_q0;
output  [11:0] tmp_dist_28_address0;
output   tmp_dist_28_ce0;
input  [63:0] tmp_dist_28_q0;
output  [11:0] tmp_dist_29_address0;
output   tmp_dist_29_ce0;
input  [63:0] tmp_dist_29_q0;
output  [11:0] tmp_dist_30_address0;
output   tmp_dist_30_ce0;
input  [63:0] tmp_dist_30_q0;
output  [11:0] tmp_dist_31_address0;
output   tmp_dist_31_ce0;
input  [63:0] tmp_dist_31_q0;
output  [31:0] sw_data_0_V_din;
input   sw_data_0_V_full_n;
output   sw_data_0_V_write;
output  [31:0] sw_data_1_V_din;
input   sw_data_1_V_full_n;
output   sw_data_1_V_write;
output  [31:0] sw_data_2_V_din;
input   sw_data_2_V_full_n;
output   sw_data_2_V_write;
output  [31:0] sw_data_3_V_din;
input   sw_data_3_V_full_n;
output   sw_data_3_V_write;
input  [127:0] rd_port_TDATA;
input   rd_port_TVALID;
output   rd_port_TREADY;
input  [15:0] rd_port_TKEEP;
input  [15:0] rd_port_TSTRB;
input  [0:0] rd_port_TLAST;
input  [15:0] n_mem_tuples;
output  [10:0] mem_req_buff_address0;
output   mem_req_buff_ce0;
input  [31:0] mem_req_buff_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg rd_req_V_write;
reg rd_start;
reg rd_start_ap_vld;
reg tmp_dist_0_ce0;
reg tmp_dist_1_ce0;
reg tmp_dist_2_ce0;
reg tmp_dist_3_ce0;
reg tmp_dist_4_ce0;
reg tmp_dist_5_ce0;
reg tmp_dist_6_ce0;
reg tmp_dist_7_ce0;
reg tmp_dist_8_ce0;
reg tmp_dist_9_ce0;
reg tmp_dist_10_ce0;
reg tmp_dist_11_ce0;
reg tmp_dist_12_ce0;
reg tmp_dist_13_ce0;
reg tmp_dist_14_ce0;
reg tmp_dist_15_ce0;
reg tmp_dist_16_ce0;
reg tmp_dist_17_ce0;
reg tmp_dist_18_ce0;
reg tmp_dist_19_ce0;
reg tmp_dist_20_ce0;
reg tmp_dist_21_ce0;
reg tmp_dist_22_ce0;
reg tmp_dist_23_ce0;
reg tmp_dist_24_ce0;
reg tmp_dist_25_ce0;
reg tmp_dist_26_ce0;
reg tmp_dist_27_ce0;
reg tmp_dist_28_ce0;
reg tmp_dist_29_ce0;
reg tmp_dist_30_ce0;
reg tmp_dist_31_ce0;
reg sw_data_0_V_write;
reg sw_data_1_V_write;
reg sw_data_2_V_write;
reg sw_data_3_V_write;
reg rd_port_TREADY;
reg mem_req_buff_ce0;

(* fsm_encoding = "none" *) reg   [5:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    rd_req_V_blk_n;
wire    ap_CS_fsm_state4;
reg    sw_data_0_V_blk_n;
reg    ap_enable_reg_pp0_iter2;
wire    ap_block_pp0_stage0;
reg   [0:0] or_ln211_reg_1613;
reg    sw_data_1_V_blk_n;
reg   [0:0] icmp_ln874_reg_1609;
reg    sw_data_2_V_blk_n;
reg    sw_data_3_V_blk_n;
reg    rd_port_TDATA_blk_n;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg   [7:0] srcDist_V_1_reg_828;
reg   [7:0] srcDist_V_11_reg_939;
wire   [12:0] n_iter_fu_1034_p3;
reg   [12:0] n_iter_reg_1373;
wire  signed [13:0] sext_ln165_fu_1048_p1;
reg  signed [13:0] sext_ln165_reg_1378;
wire   [0:0] icmp_ln165_fu_1052_p2;
reg   [0:0] icmp_ln165_reg_1383;
wire   [4:0] select_ln168_fu_1062_p3;
reg   [4:0] select_ln168_reg_1387;
wire   [12:0] i_1_fu_1070_p2;
reg   [12:0] i_1_reg_1392;
wire    ap_CS_fsm_state2;
wire   [4:0] tail_fu_1090_p3;
reg   [4:0] tail_reg_1400;
wire   [0:0] icmp_ln165_1_fu_1076_p2;
wire   [10:0] mul_fu_1101_p3;
reg   [10:0] mul_reg_1405;
wire   [4:0] j_2_fu_1109_p2;
reg   [4:0] j_2_reg_1410;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln170_fu_1119_p2;
reg   [127:0] rd_pkt_data_V_reg_1424;
reg    ap_block_state5_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
reg    ap_block_state7_pp0_stage0_iter2;
reg    ap_block_pp0_stage0_11001;
wire   [0:0] rd_pkt_last_V_fu_1138_p1;
reg   [0:0] rd_pkt_last_V_reg_1433;
reg   [0:0] rd_pkt_last_V_reg_1433_pp0_iter1_reg;
wire   [0:0] icmp_ln870_fu_1152_p2;
reg   [0:0] icmp_ln870_reg_1437;
wire   [4:0] ret_fu_1158_p1;
reg   [4:0] ret_reg_1441;
wire   [2:0] ret_2_fu_1208_p4;
wire   [0:0] icmp_ln874_fu_1299_p2;
wire   [0:0] or_ln211_fu_1305_p2;
wire   [23:0] trunc_ln674_fu_1311_p1;
reg   [23:0] trunc_ln674_reg_1617;
reg   [23:0] p_Result_2_reg_1622;
reg   [23:0] p_Result_3_reg_1627;
reg   [23:0] p_Result_4_reg_1632;
reg    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_flush_enable;
reg    ap_enable_reg_pp0_iter1;
reg   [12:0] i_reg_794;
wire    ap_CS_fsm_state8;
reg   [7:0] srcDist_V_reg_805;
reg   [4:0] j_reg_817;
reg   [7:0] ap_phi_mux_srcDist_V_1_phi_fu_831_p4;
reg   [63:0] ap_phi_mux_srcVal_V_phi_fu_841_p64;
wire   [63:0] ap_phi_reg_pp0_iter1_srcVal_V_reg_838;
reg   [7:0] ap_phi_mux_srcDist_V_11_phi_fu_944_p20;
wire   [7:0] ap_phi_reg_pp0_iter1_srcDist_V_11_reg_939;
wire   [7:0] srcDist_V_2_fu_1294_p1;
reg   [0:0] ap_phi_mux_invld_flag_phi_fu_972_p20;
wire   [0:0] ap_phi_reg_pp0_iter1_invld_flag_reg_969;
wire   [63:0] zext_ln171_fu_1129_p1;
wire   [63:0] zext_ln534_fu_1172_p1;
reg    ap_block_pp0_stage0_01001;
wire   [3:0] empty_fu_1004_p1;
wire   [11:0] trunc_ln161_1_fu_1014_p4;
wire   [12:0] zext_ln161_fu_1024_p1;
wire   [0:0] icmp_ln161_fu_1008_p2;
wire   [12:0] add_ln161_fu_1028_p2;
wire   [12:0] sub_fu_1042_p2;
wire   [4:0] zext_ln168_fu_1058_p1;
wire   [13:0] zext_ln165_fu_1081_p1;
wire   [0:0] icmp_ln168_fu_1085_p2;
wire   [6:0] empty_54_fu_1097_p1;
wire   [10:0] zext_ln170_fu_1115_p1;
wire   [10:0] add_ln171_fu_1124_p2;
wire   [7:0] p_Result_s_fu_1142_p4;
wire   [11:0] ret_4_fu_1162_p4;
reg   [5:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_condition_594;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 6'd1;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if ((1'b1 == ap_condition_pp0_flush_enable)) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((icmp_ln170_fu_1119_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((icmp_ln170_fu_1119_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln165_fu_1052_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        i_reg_794 <= 13'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        i_reg_794 <= i_1_reg_1392;
    end
end

always @ (posedge ap_clk) begin
    if (((rd_req_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        j_reg_817 <= j_2_reg_1410;
    end else if (((icmp_ln165_1_fu_1076_p2 == 1'd0) & (icmp_ln165_reg_1383 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        j_reg_817 <= 5'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_condition_594)) begin
        if ((icmp_ln870_reg_1437 == 1'd0)) begin
            srcDist_V_11_reg_939 <= ap_phi_mux_srcDist_V_1_phi_fu_831_p4;
        end else if (((ret_2_fu_1208_p4 == 3'd0) & (icmp_ln870_reg_1437 == 1'd1))) begin
            srcDist_V_11_reg_939 <= srcDist_V_2_fu_1294_p1;
        end else if (((ret_2_fu_1208_p4 == 3'd1) & (icmp_ln870_reg_1437 == 1'd1))) begin
            srcDist_V_11_reg_939 <= {{ap_phi_mux_srcVal_V_phi_fu_841_p64[15:8]}};
        end else if (((ret_2_fu_1208_p4 == 3'd2) & (icmp_ln870_reg_1437 == 1'd1))) begin
            srcDist_V_11_reg_939 <= {{ap_phi_mux_srcVal_V_phi_fu_841_p64[23:16]}};
        end else if (((ret_2_fu_1208_p4 == 3'd3) & (icmp_ln870_reg_1437 == 1'd1))) begin
            srcDist_V_11_reg_939 <= {{ap_phi_mux_srcVal_V_phi_fu_841_p64[31:24]}};
        end else if (((ret_2_fu_1208_p4 == 3'd4) & (icmp_ln870_reg_1437 == 1'd1))) begin
            srcDist_V_11_reg_939 <= {{ap_phi_mux_srcVal_V_phi_fu_841_p64[39:32]}};
        end else if (((ret_2_fu_1208_p4 == 3'd5) & (icmp_ln870_reg_1437 == 1'd1))) begin
            srcDist_V_11_reg_939 <= {{ap_phi_mux_srcVal_V_phi_fu_841_p64[47:40]}};
        end else if (((ret_2_fu_1208_p4 == 3'd6) & (icmp_ln870_reg_1437 == 1'd1))) begin
            srcDist_V_11_reg_939 <= {{ap_phi_mux_srcVal_V_phi_fu_841_p64[55:48]}};
        end else if (((ret_2_fu_1208_p4 == 3'd7) & (icmp_ln870_reg_1437 == 1'd1))) begin
            srcDist_V_11_reg_939 <= {{ap_phi_mux_srcVal_V_phi_fu_841_p64[63:56]}};
        end else if ((1'b1 == 1'b1)) begin
            srcDist_V_11_reg_939 <= ap_phi_reg_pp0_iter1_srcDist_V_11_reg_939;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((rd_pkt_last_V_reg_1433_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        srcDist_V_1_reg_828 <= srcDist_V_11_reg_939;
    end else if (((icmp_ln170_fu_1119_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        srcDist_V_1_reg_828 <= srcDist_V_reg_805;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln165_reg_1383 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        i_1_reg_1392 <= i_1_fu_1070_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        icmp_ln165_reg_1383 <= icmp_ln165_fu_1052_p2;
        n_iter_reg_1373 <= n_iter_fu_1034_p3;
        sext_ln165_reg_1378 <= sext_ln165_fu_1048_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln870_reg_1437 <= icmp_ln870_fu_1152_p2;
        icmp_ln874_reg_1609 <= icmp_ln874_fu_1299_p2;
        or_ln211_reg_1613 <= or_ln211_fu_1305_p2;
        rd_pkt_data_V_reg_1424 <= rd_port_TDATA;
        rd_pkt_last_V_reg_1433 <= rd_port_TLAST;
        rd_pkt_last_V_reg_1433_pp0_iter1_reg <= rd_pkt_last_V_reg_1433;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        j_2_reg_1410 <= j_2_fu_1109_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln165_1_fu_1076_p2 == 1'd0) & (icmp_ln165_reg_1383 == 1'd0) & (1'b1 == ap_CS_fsm_state2))) begin
        mul_reg_1405[10 : 4] <= mul_fu_1101_p3[10 : 4];
        tail_reg_1400 <= tail_fu_1090_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln874_fu_1299_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_Result_2_reg_1622 <= {{rd_pkt_data_V_reg_1424[55:32]}};
        p_Result_3_reg_1627 <= {{rd_pkt_data_V_reg_1424[87:64]}};
        p_Result_4_reg_1632 <= {{rd_pkt_data_V_reg_1424[119:96]}};
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln870_fu_1152_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ret_reg_1441 <= ret_fu_1158_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln165_fu_1052_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state1))) begin
        select_ln168_reg_1387 <= select_ln168_fu_1062_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        srcDist_V_reg_805 <= srcDist_V_11_reg_939;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln211_fu_1305_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        trunc_ln674_reg_1617 <= trunc_ln674_fu_1311_p1;
    end
end

always @ (*) begin
    if (((rd_pkt_last_V_fu_1138_p1 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_pp0_flush_enable = 1'b1;
    end else begin
        ap_condition_pp0_flush_enable = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state2) & ((icmp_ln165_1_fu_1076_p2 == 1'd1) | (icmp_ln165_reg_1383 == 1'd1))) | ((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln870_reg_1437 == 1'd0)) begin
        ap_phi_mux_invld_flag_phi_fu_972_p20 = 1'd0;
    end else if ((((ret_2_fu_1208_p4 == 3'd0) & (icmp_ln870_reg_1437 == 1'd1)) | ((ret_2_fu_1208_p4 == 3'd1) & (icmp_ln870_reg_1437 == 1'd1)) | ((ret_2_fu_1208_p4 == 3'd2) & (icmp_ln870_reg_1437 == 1'd1)) | ((ret_2_fu_1208_p4 == 3'd3) & (icmp_ln870_reg_1437 == 1'd1)) | ((ret_2_fu_1208_p4 == 3'd4) & (icmp_ln870_reg_1437 == 1'd1)) | ((ret_2_fu_1208_p4 == 3'd5) & (icmp_ln870_reg_1437 == 1'd1)) | ((ret_2_fu_1208_p4 == 3'd6) & (icmp_ln870_reg_1437 == 1'd1)) | ((ret_2_fu_1208_p4 == 3'd7) & (icmp_ln870_reg_1437 == 1'd1)))) begin
        ap_phi_mux_invld_flag_phi_fu_972_p20 = 1'd1;
    end else begin
        ap_phi_mux_invld_flag_phi_fu_972_p20 = ap_phi_reg_pp0_iter1_invld_flag_reg_969;
    end
end

always @ (*) begin
    if ((icmp_ln870_reg_1437 == 1'd0)) begin
        ap_phi_mux_srcDist_V_11_phi_fu_944_p20 = ap_phi_mux_srcDist_V_1_phi_fu_831_p4;
    end else if (((ret_2_fu_1208_p4 == 3'd0) & (icmp_ln870_reg_1437 == 1'd1))) begin
        ap_phi_mux_srcDist_V_11_phi_fu_944_p20 = srcDist_V_2_fu_1294_p1;
    end else if (((ret_2_fu_1208_p4 == 3'd1) & (icmp_ln870_reg_1437 == 1'd1))) begin
        ap_phi_mux_srcDist_V_11_phi_fu_944_p20 = {{ap_phi_mux_srcVal_V_phi_fu_841_p64[15:8]}};
    end else if (((ret_2_fu_1208_p4 == 3'd2) & (icmp_ln870_reg_1437 == 1'd1))) begin
        ap_phi_mux_srcDist_V_11_phi_fu_944_p20 = {{ap_phi_mux_srcVal_V_phi_fu_841_p64[23:16]}};
    end else if (((ret_2_fu_1208_p4 == 3'd3) & (icmp_ln870_reg_1437 == 1'd1))) begin
        ap_phi_mux_srcDist_V_11_phi_fu_944_p20 = {{ap_phi_mux_srcVal_V_phi_fu_841_p64[31:24]}};
    end else if (((ret_2_fu_1208_p4 == 3'd4) & (icmp_ln870_reg_1437 == 1'd1))) begin
        ap_phi_mux_srcDist_V_11_phi_fu_944_p20 = {{ap_phi_mux_srcVal_V_phi_fu_841_p64[39:32]}};
    end else if (((ret_2_fu_1208_p4 == 3'd5) & (icmp_ln870_reg_1437 == 1'd1))) begin
        ap_phi_mux_srcDist_V_11_phi_fu_944_p20 = {{ap_phi_mux_srcVal_V_phi_fu_841_p64[47:40]}};
    end else if (((ret_2_fu_1208_p4 == 3'd6) & (icmp_ln870_reg_1437 == 1'd1))) begin
        ap_phi_mux_srcDist_V_11_phi_fu_944_p20 = {{ap_phi_mux_srcVal_V_phi_fu_841_p64[55:48]}};
    end else if (((ret_2_fu_1208_p4 == 3'd7) & (icmp_ln870_reg_1437 == 1'd1))) begin
        ap_phi_mux_srcDist_V_11_phi_fu_944_p20 = {{ap_phi_mux_srcVal_V_phi_fu_841_p64[63:56]}};
    end else begin
        ap_phi_mux_srcDist_V_11_phi_fu_944_p20 = ap_phi_reg_pp0_iter1_srcDist_V_11_reg_939;
    end
end

always @ (*) begin
    if (((rd_pkt_last_V_reg_1433_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        ap_phi_mux_srcDist_V_1_phi_fu_831_p4 = srcDist_V_11_reg_939;
    end else begin
        ap_phi_mux_srcDist_V_1_phi_fu_831_p4 = srcDist_V_1_reg_828;
    end
end

always @ (*) begin
    if ((icmp_ln870_reg_1437 == 1'd1)) begin
        if ((ret_reg_1441 == 5'd31)) begin
            ap_phi_mux_srcVal_V_phi_fu_841_p64 = tmp_dist_31_q0;
        end else if ((ret_reg_1441 == 5'd30)) begin
            ap_phi_mux_srcVal_V_phi_fu_841_p64 = tmp_dist_30_q0;
        end else if ((ret_reg_1441 == 5'd29)) begin
            ap_phi_mux_srcVal_V_phi_fu_841_p64 = tmp_dist_29_q0;
        end else if ((ret_reg_1441 == 5'd28)) begin
            ap_phi_mux_srcVal_V_phi_fu_841_p64 = tmp_dist_28_q0;
        end else if ((ret_reg_1441 == 5'd27)) begin
            ap_phi_mux_srcVal_V_phi_fu_841_p64 = tmp_dist_27_q0;
        end else if ((ret_reg_1441 == 5'd26)) begin
            ap_phi_mux_srcVal_V_phi_fu_841_p64 = tmp_dist_26_q0;
        end else if ((ret_reg_1441 == 5'd25)) begin
            ap_phi_mux_srcVal_V_phi_fu_841_p64 = tmp_dist_25_q0;
        end else if ((ret_reg_1441 == 5'd24)) begin
            ap_phi_mux_srcVal_V_phi_fu_841_p64 = tmp_dist_24_q0;
        end else if ((ret_reg_1441 == 5'd23)) begin
            ap_phi_mux_srcVal_V_phi_fu_841_p64 = tmp_dist_23_q0;
        end else if ((ret_reg_1441 == 5'd22)) begin
            ap_phi_mux_srcVal_V_phi_fu_841_p64 = tmp_dist_22_q0;
        end else if ((ret_reg_1441 == 5'd21)) begin
            ap_phi_mux_srcVal_V_phi_fu_841_p64 = tmp_dist_21_q0;
        end else if ((ret_reg_1441 == 5'd20)) begin
            ap_phi_mux_srcVal_V_phi_fu_841_p64 = tmp_dist_20_q0;
        end else if ((ret_reg_1441 == 5'd19)) begin
            ap_phi_mux_srcVal_V_phi_fu_841_p64 = tmp_dist_19_q0;
        end else if ((ret_reg_1441 == 5'd18)) begin
            ap_phi_mux_srcVal_V_phi_fu_841_p64 = tmp_dist_18_q0;
        end else if ((ret_reg_1441 == 5'd17)) begin
            ap_phi_mux_srcVal_V_phi_fu_841_p64 = tmp_dist_17_q0;
        end else if ((ret_reg_1441 == 5'd16)) begin
            ap_phi_mux_srcVal_V_phi_fu_841_p64 = tmp_dist_16_q0;
        end else if ((ret_reg_1441 == 5'd15)) begin
            ap_phi_mux_srcVal_V_phi_fu_841_p64 = tmp_dist_15_q0;
        end else if ((ret_reg_1441 == 5'd14)) begin
            ap_phi_mux_srcVal_V_phi_fu_841_p64 = tmp_dist_14_q0;
        end else if ((ret_reg_1441 == 5'd13)) begin
            ap_phi_mux_srcVal_V_phi_fu_841_p64 = tmp_dist_13_q0;
        end else if ((ret_reg_1441 == 5'd12)) begin
            ap_phi_mux_srcVal_V_phi_fu_841_p64 = tmp_dist_12_q0;
        end else if ((ret_reg_1441 == 5'd11)) begin
            ap_phi_mux_srcVal_V_phi_fu_841_p64 = tmp_dist_11_q0;
        end else if ((ret_reg_1441 == 5'd10)) begin
            ap_phi_mux_srcVal_V_phi_fu_841_p64 = tmp_dist_10_q0;
        end else if ((ret_reg_1441 == 5'd9)) begin
            ap_phi_mux_srcVal_V_phi_fu_841_p64 = tmp_dist_9_q0;
        end else if ((ret_reg_1441 == 5'd8)) begin
            ap_phi_mux_srcVal_V_phi_fu_841_p64 = tmp_dist_8_q0;
        end else if ((ret_reg_1441 == 5'd7)) begin
            ap_phi_mux_srcVal_V_phi_fu_841_p64 = tmp_dist_7_q0;
        end else if ((ret_reg_1441 == 5'd6)) begin
            ap_phi_mux_srcVal_V_phi_fu_841_p64 = tmp_dist_6_q0;
        end else if ((ret_reg_1441 == 5'd5)) begin
            ap_phi_mux_srcVal_V_phi_fu_841_p64 = tmp_dist_5_q0;
        end else if ((ret_reg_1441 == 5'd4)) begin
            ap_phi_mux_srcVal_V_phi_fu_841_p64 = tmp_dist_4_q0;
        end else if ((ret_reg_1441 == 5'd3)) begin
            ap_phi_mux_srcVal_V_phi_fu_841_p64 = tmp_dist_3_q0;
        end else if ((ret_reg_1441 == 5'd2)) begin
            ap_phi_mux_srcVal_V_phi_fu_841_p64 = tmp_dist_2_q0;
        end else if ((ret_reg_1441 == 5'd1)) begin
            ap_phi_mux_srcVal_V_phi_fu_841_p64 = tmp_dist_1_q0;
        end else if ((ret_reg_1441 == 5'd0)) begin
            ap_phi_mux_srcVal_V_phi_fu_841_p64 = tmp_dist_0_q0;
        end else begin
            ap_phi_mux_srcVal_V_phi_fu_841_p64 = ap_phi_reg_pp0_iter1_srcVal_V_reg_838;
        end
    end else begin
        ap_phi_mux_srcVal_V_phi_fu_841_p64 = ap_phi_reg_pp0_iter1_srcVal_V_reg_838;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & ((icmp_ln165_1_fu_1076_p2 == 1'd1) | (icmp_ln165_reg_1383 == 1'd1)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        mem_req_buff_ce0 = 1'b1;
    end else begin
        mem_req_buff_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rd_port_TDATA_blk_n = rd_port_TVALID;
    end else begin
        rd_port_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        rd_port_TREADY = 1'b1;
    end else begin
        rd_port_TREADY = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        rd_req_V_blk_n = rd_req_V_full_n;
    end else begin
        rd_req_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((rd_req_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
        rd_req_V_write = 1'b1;
    end else begin
        rd_req_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        rd_start = 1'd0;
    end else if (((icmp_ln170_fu_1119_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        rd_start = 1'd1;
    end else begin
        rd_start = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | ((icmp_ln170_fu_1119_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3)))) begin
        rd_start_ap_vld = 1'b1;
    end else begin
        rd_start_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((or_ln211_reg_1613 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        sw_data_0_V_blk_n = sw_data_0_V_full_n;
    end else begin
        sw_data_0_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((or_ln211_reg_1613 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        sw_data_0_V_write = 1'b1;
    end else begin
        sw_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln874_reg_1609 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        sw_data_1_V_blk_n = sw_data_1_V_full_n;
    end else begin
        sw_data_1_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln874_reg_1609 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        sw_data_1_V_write = 1'b1;
    end else begin
        sw_data_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln874_reg_1609 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        sw_data_2_V_blk_n = sw_data_2_V_full_n;
    end else begin
        sw_data_2_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln874_reg_1609 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        sw_data_2_V_write = 1'b1;
    end else begin
        sw_data_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln874_reg_1609 == 1'd0) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        sw_data_3_V_blk_n = sw_data_3_V_full_n;
    end else begin
        sw_data_3_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln874_reg_1609 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
        sw_data_3_V_write = 1'b1;
    end else begin
        sw_data_3_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_0_ce0 = 1'b1;
    end else begin
        tmp_dist_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_10_ce0 = 1'b1;
    end else begin
        tmp_dist_10_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_11_ce0 = 1'b1;
    end else begin
        tmp_dist_11_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_12_ce0 = 1'b1;
    end else begin
        tmp_dist_12_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_13_ce0 = 1'b1;
    end else begin
        tmp_dist_13_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_14_ce0 = 1'b1;
    end else begin
        tmp_dist_14_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_15_ce0 = 1'b1;
    end else begin
        tmp_dist_15_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_16_ce0 = 1'b1;
    end else begin
        tmp_dist_16_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_17_ce0 = 1'b1;
    end else begin
        tmp_dist_17_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_18_ce0 = 1'b1;
    end else begin
        tmp_dist_18_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_19_ce0 = 1'b1;
    end else begin
        tmp_dist_19_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_1_ce0 = 1'b1;
    end else begin
        tmp_dist_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_20_ce0 = 1'b1;
    end else begin
        tmp_dist_20_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_21_ce0 = 1'b1;
    end else begin
        tmp_dist_21_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_22_ce0 = 1'b1;
    end else begin
        tmp_dist_22_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_23_ce0 = 1'b1;
    end else begin
        tmp_dist_23_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_24_ce0 = 1'b1;
    end else begin
        tmp_dist_24_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_25_ce0 = 1'b1;
    end else begin
        tmp_dist_25_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_26_ce0 = 1'b1;
    end else begin
        tmp_dist_26_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_27_ce0 = 1'b1;
    end else begin
        tmp_dist_27_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_28_ce0 = 1'b1;
    end else begin
        tmp_dist_28_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_29_ce0 = 1'b1;
    end else begin
        tmp_dist_29_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_2_ce0 = 1'b1;
    end else begin
        tmp_dist_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_30_ce0 = 1'b1;
    end else begin
        tmp_dist_30_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_31_ce0 = 1'b1;
    end else begin
        tmp_dist_31_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_3_ce0 = 1'b1;
    end else begin
        tmp_dist_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_4_ce0 = 1'b1;
    end else begin
        tmp_dist_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_5_ce0 = 1'b1;
    end else begin
        tmp_dist_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_6_ce0 = 1'b1;
    end else begin
        tmp_dist_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_7_ce0 = 1'b1;
    end else begin
        tmp_dist_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_8_ce0 = 1'b1;
    end else begin
        tmp_dist_8_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_9_ce0 = 1'b1;
    end else begin
        tmp_dist_9_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & ((icmp_ln165_1_fu_1076_p2 == 1'd1) | (icmp_ln165_reg_1383 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln170_fu_1119_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((rd_req_V_full_n == 1'b1) & (1'b1 == ap_CS_fsm_state4))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln161_fu_1028_p2 = (zext_ln161_fu_1024_p1 + 13'd1);

assign add_ln171_fu_1124_p2 = (mul_reg_1405 + zext_ln170_fu_1115_p1);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_01001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (rd_port_TVALID == 1'b0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((icmp_ln874_reg_1609 == 1'd0) & (sw_data_3_V_full_n == 1'b0)) | ((icmp_ln874_reg_1609 == 1'd0) & (sw_data_2_V_full_n == 1'b0)) | ((icmp_ln874_reg_1609 == 1'd0) & (sw_data_1_V_full_n == 1'b0)) | ((or_ln211_reg_1613 == 1'd0) & (sw_data_0_V_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_11001 = (((ap_enable_reg_pp0_iter0 == 1'b1) & (rd_port_TVALID == 1'b0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((icmp_ln874_reg_1609 == 1'd0) & (sw_data_3_V_full_n == 1'b0)) | ((icmp_ln874_reg_1609 == 1'd0) & (sw_data_2_V_full_n == 1'b0)) | ((icmp_ln874_reg_1609 == 1'd0) & (sw_data_1_V_full_n == 1'b0)) | ((or_ln211_reg_1613 == 1'd0) & (sw_data_0_V_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = (((ap_enable_reg_pp0_iter0 == 1'b1) & (rd_port_TVALID == 1'b0)) | ((ap_enable_reg_pp0_iter2 == 1'b1) & (((icmp_ln874_reg_1609 == 1'd0) & (sw_data_3_V_full_n == 1'b0)) | ((icmp_ln874_reg_1609 == 1'd0) & (sw_data_2_V_full_n == 1'b0)) | ((icmp_ln874_reg_1609 == 1'd0) & (sw_data_1_V_full_n == 1'b0)) | ((or_ln211_reg_1613 == 1'd0) & (sw_data_0_V_full_n == 1'b0)))));
end

always @ (*) begin
    ap_block_state5_pp0_stage0_iter0 = (rd_port_TVALID == 1'b0);
end

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state7_pp0_stage0_iter2 = (((icmp_ln874_reg_1609 == 1'd0) & (sw_data_3_V_full_n == 1'b0)) | ((icmp_ln874_reg_1609 == 1'd0) & (sw_data_2_V_full_n == 1'b0)) | ((icmp_ln874_reg_1609 == 1'd0) & (sw_data_1_V_full_n == 1'b0)) | ((or_ln211_reg_1613 == 1'd0) & (sw_data_0_V_full_n == 1'b0)));
end

always @ (*) begin
    ap_condition_594 = ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_phi_reg_pp0_iter1_invld_flag_reg_969 = 'bx;

assign ap_phi_reg_pp0_iter1_srcDist_V_11_reg_939 = 'bx;

assign ap_phi_reg_pp0_iter1_srcVal_V_reg_838 = 'bx;

assign empty_54_fu_1097_p1 = i_reg_794[6:0];

assign empty_fu_1004_p1 = n_mem_tuples[3:0];

assign i_1_fu_1070_p2 = (i_reg_794 + 13'd1);

assign icmp_ln161_fu_1008_p2 = ((empty_fu_1004_p1 == 4'd0) ? 1'b1 : 1'b0);

assign icmp_ln165_1_fu_1076_p2 = ((i_reg_794 == n_iter_reg_1373) ? 1'b1 : 1'b0);

assign icmp_ln165_fu_1052_p2 = ((n_iter_fu_1034_p3 == 13'd0) ? 1'b1 : 1'b0);

assign icmp_ln168_fu_1085_p2 = ((zext_ln165_fu_1081_p1 == sext_ln165_reg_1378) ? 1'b1 : 1'b0);

assign icmp_ln170_fu_1119_p2 = ((j_reg_817 == tail_reg_1400) ? 1'b1 : 1'b0);

assign icmp_ln870_fu_1152_p2 = ((p_Result_s_fu_1142_p4 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln874_fu_1299_p2 = ((ap_phi_mux_srcDist_V_11_phi_fu_944_p20 == 8'd255) ? 1'b1 : 1'b0);

assign j_2_fu_1109_p2 = (j_reg_817 + 5'd1);

assign mem_req_buff_address0 = zext_ln171_fu_1129_p1;

assign mul_fu_1101_p3 = {{empty_54_fu_1097_p1}, {4'd0}};

assign n_iter_fu_1034_p3 = ((icmp_ln161_fu_1008_p2[0:0] == 1'b1) ? zext_ln161_fu_1024_p1 : add_ln161_fu_1028_p2);

assign or_ln211_fu_1305_p2 = (icmp_ln874_fu_1299_p2 | ap_phi_mux_invld_flag_phi_fu_972_p20);

assign p_Result_s_fu_1142_p4 = {{rd_port_TDATA[31:24]}};

assign rd_pkt_last_V_fu_1138_p1 = rd_port_TLAST;

assign rd_req_V_din = mem_req_buff_q0;

assign ret_2_fu_1208_p4 = {{rd_pkt_data_V_reg_1424[7:5]}};

assign ret_4_fu_1162_p4 = {{rd_port_TDATA[19:8]}};

assign ret_fu_1158_p1 = rd_port_TDATA[4:0];

assign select_ln168_fu_1062_p3 = ((icmp_ln161_fu_1008_p2[0:0] == 1'b1) ? 5'd16 : zext_ln168_fu_1058_p1);

assign sext_ln165_fu_1048_p1 = $signed(sub_fu_1042_p2);

assign srcDist_V_2_fu_1294_p1 = ap_phi_mux_srcVal_V_phi_fu_841_p64[7:0];

assign sub_fu_1042_p2 = ($signed(n_iter_fu_1034_p3) + $signed(13'd8191));

assign sw_data_0_V_din = {{srcDist_V_11_reg_939}, {trunc_ln674_reg_1617}};

assign sw_data_1_V_din = {{srcDist_V_11_reg_939}, {p_Result_2_reg_1622}};

assign sw_data_2_V_din = {{srcDist_V_11_reg_939}, {p_Result_3_reg_1627}};

assign sw_data_3_V_din = {{srcDist_V_11_reg_939}, {p_Result_4_reg_1632}};

assign tail_fu_1090_p3 = ((icmp_ln168_fu_1085_p2[0:0] == 1'b1) ? select_ln168_reg_1387 : 5'd16);

assign tmp_dist_0_address0 = zext_ln534_fu_1172_p1;

assign tmp_dist_10_address0 = zext_ln534_fu_1172_p1;

assign tmp_dist_11_address0 = zext_ln534_fu_1172_p1;

assign tmp_dist_12_address0 = zext_ln534_fu_1172_p1;

assign tmp_dist_13_address0 = zext_ln534_fu_1172_p1;

assign tmp_dist_14_address0 = zext_ln534_fu_1172_p1;

assign tmp_dist_15_address0 = zext_ln534_fu_1172_p1;

assign tmp_dist_16_address0 = zext_ln534_fu_1172_p1;

assign tmp_dist_17_address0 = zext_ln534_fu_1172_p1;

assign tmp_dist_18_address0 = zext_ln534_fu_1172_p1;

assign tmp_dist_19_address0 = zext_ln534_fu_1172_p1;

assign tmp_dist_1_address0 = zext_ln534_fu_1172_p1;

assign tmp_dist_20_address0 = zext_ln534_fu_1172_p1;

assign tmp_dist_21_address0 = zext_ln534_fu_1172_p1;

assign tmp_dist_22_address0 = zext_ln534_fu_1172_p1;

assign tmp_dist_23_address0 = zext_ln534_fu_1172_p1;

assign tmp_dist_24_address0 = zext_ln534_fu_1172_p1;

assign tmp_dist_25_address0 = zext_ln534_fu_1172_p1;

assign tmp_dist_26_address0 = zext_ln534_fu_1172_p1;

assign tmp_dist_27_address0 = zext_ln534_fu_1172_p1;

assign tmp_dist_28_address0 = zext_ln534_fu_1172_p1;

assign tmp_dist_29_address0 = zext_ln534_fu_1172_p1;

assign tmp_dist_2_address0 = zext_ln534_fu_1172_p1;

assign tmp_dist_30_address0 = zext_ln534_fu_1172_p1;

assign tmp_dist_31_address0 = zext_ln534_fu_1172_p1;

assign tmp_dist_3_address0 = zext_ln534_fu_1172_p1;

assign tmp_dist_4_address0 = zext_ln534_fu_1172_p1;

assign tmp_dist_5_address0 = zext_ln534_fu_1172_p1;

assign tmp_dist_6_address0 = zext_ln534_fu_1172_p1;

assign tmp_dist_7_address0 = zext_ln534_fu_1172_p1;

assign tmp_dist_8_address0 = zext_ln534_fu_1172_p1;

assign tmp_dist_9_address0 = zext_ln534_fu_1172_p1;

assign trunc_ln161_1_fu_1014_p4 = {{n_mem_tuples[15:4]}};

assign trunc_ln674_fu_1311_p1 = rd_pkt_data_V_reg_1424[23:0];

assign zext_ln161_fu_1024_p1 = trunc_ln161_1_fu_1014_p4;

assign zext_ln165_fu_1081_p1 = i_reg_794;

assign zext_ln168_fu_1058_p1 = empty_fu_1004_p1;

assign zext_ln170_fu_1115_p1 = j_reg_817;

assign zext_ln171_fu_1129_p1 = add_ln171_fu_1124_p2;

assign zext_ln534_fu_1172_p1 = ret_4_fu_1162_p4;

always @ (posedge ap_clk) begin
    mul_reg_1405[3:0] <= 4'b0000;
end

endmodule //BFS_Scatter_feed_network
