-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity BFS_Scatter_gen_access_tuple is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ofst_buff_address0 : OUT STD_LOGIC_VECTOR (18 downto 0);
    ofst_buff_ce0 : OUT STD_LOGIC;
    ofst_buff_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    ofst_buff_address1 : OUT STD_LOGIC_VECTOR (18 downto 0);
    ofst_buff_ce1 : OUT STD_LOGIC;
    ofst_buff_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
    rlt_tail_idx : IN STD_LOGIC_VECTOR (30 downto 0);
    batchIdx : IN STD_LOGIC_VECTOR (24 downto 0);
    n_mem_tuples : OUT STD_LOGIC_VECTOR (15 downto 0);
    n_mem_tuples_ap_vld : OUT STD_LOGIC;
    mem_req_buff_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
    mem_req_buff_ce1 : OUT STD_LOGIC;
    mem_req_buff_we1 : OUT STD_LOGIC;
    mem_req_buff_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
end;


architecture behav of BFS_Scatter_gen_access_tuple is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (9 downto 0) := "0000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (9 downto 0) := "0000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (9 downto 0) := "0000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (9 downto 0) := "0000010000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (9 downto 0) := "0000100000";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (9 downto 0) := "0001000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (9 downto 0) := "0010000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (9 downto 0) := "0100000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (9 downto 0) := "1000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv6_0 : STD_LOGIC_VECTOR (5 downto 0) := "000000";
    constant ap_const_lv7_1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv19_1 : STD_LOGIC_VECTOR (18 downto 0) := "0000000000000000001";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_2D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101101";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv15_1 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000001";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv12_0 : STD_LOGIC_VECTOR (11 downto 0) := "000000000000";
    constant ap_const_lv28_1000 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000001000000000000";
    constant ap_const_lv20_0 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000000";
    constant ap_const_lv4_F : STD_LOGIC_VECTOR (3 downto 0) := "1111";
    constant ap_const_lv28_100 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000100000000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal empty_48_reg_267 : STD_LOGIC_VECTOR (15 downto 0);
    signal j_reg_279 : STD_LOGIC_VECTOR (10 downto 0);
    signal ofstAddr_V_8_reg_290 : STD_LOGIC_VECTOR (27 downto 0);
    signal ofstAddr_V_5_reg_310 : STD_LOGIC_VECTOR (27 downto 0);
    signal mul_fu_366_p3 : STD_LOGIC_VECTOR (30 downto 0);
    signal mul_reg_1039 : STD_LOGIC_VECTOR (30 downto 0);
    signal trunc_ln_fu_378_p3 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln_reg_1044 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln90_fu_394_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln90_reg_1052 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal trunc_ln92_1_fu_408_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln92_1_reg_1057 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_386_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal lshr_ln_reg_1067 : STD_LOGIC_VECTOR (18 downto 0);
    signal icmp_ln93_fu_422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal trunc_ln213_fu_499_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln213_reg_1084 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal padDecr_V_reg_1089 : STD_LOGIC_VECTOR (3 downto 0);
    signal sub_ln103_fu_517_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal sub_ln103_reg_1094 : STD_LOGIC_VECTOR (13 downto 0);
    signal ofstAddr_V_fu_523_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal n_rmdr_elem_fu_584_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal n_rmdr_elem_reg_1105 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln5_fu_588_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln5_reg_1112 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln81_fu_598_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln81_reg_1117 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln110_fu_602_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln110_reg_1122 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_1_fu_608_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal j_1_reg_1126 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state6_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state8_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln110_1_fu_614_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln110_1_reg_1131 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_3_reg_1135 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln1364_1_fu_685_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal sub_ln1364_1_reg_1140 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1364_2_reg_1145 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln116_fu_724_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln116_reg_1150 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state7_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal add_ln121_fu_766_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln121_reg_1154 : STD_LOGIC_VECTOR (15 downto 0);
    signal ofstAddr_V_9_fu_785_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal ofstAddr_V_9_reg_1159 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln123_fu_797_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln123_reg_1164 : STD_LOGIC_VECTOR (3 downto 0);
    signal add_ln126_fu_820_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln126_reg_1169 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_5_reg_1174 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal trunc_ln1364_4_reg_1179 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln1364_5_reg_1184 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln131_fu_934_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln131_reg_1189 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal icmp_ln132_fu_939_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln132_reg_1193 : STD_LOGIC_VECTOR (0 downto 0);
    signal ofstAddr_V_10_fu_990_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal ofstAddr_V_10_reg_1197 : STD_LOGIC_VECTOR (27 downto 0);
    signal v1_V_4_fu_1001_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal v1_V_4_reg_1202 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state6 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal k_reg_244 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal n_mem_tuples_promoted_reg_255 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_n_mem_tuples_promoted14_phi_fu_358_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_phi_mux_j_phi_fu_283_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_phi_mux_ofstAddr_V_8_phi_fu_293_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_phi_mux_empty_50_phi_fu_303_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_empty_50_reg_300 : STD_LOGIC_VECTOR (15 downto 0);
    signal ofstAddr_V_6_fu_744_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_phi_reg_pp0_iter0_ofstAddr_V_5_reg_310 : STD_LOGIC_VECTOR (27 downto 0);
    signal ofstAddr_V_4_fu_813_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal ap_phi_mux_rhs_phi_fu_324_p4 : STD_LOGIC_VECTOR (27 downto 0);
    signal rhs_reg_321 : STD_LOGIC_VECTOR (27 downto 0);
    signal empty_51_reg_332 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln136_fu_1007_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_mux_empty_52_phi_fu_347_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal empty_52_reg_344 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln140_fu_1026_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal n_mem_tuples_promoted14_reg_354 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln95_fu_437_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln95_1_fu_452_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln120_fu_730_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln123_fu_839_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln133_fu_944_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln138_fu_1021_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal p_Result_s_fu_735_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_3_fu_757_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_4_fu_831_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_5_fu_954_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_6_fu_969_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_7_fu_1014_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln92_fu_374_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln90_fu_400_p1 : STD_LOGIC_VECTOR (30 downto 0);
    signal zext_ln92_fu_404_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal tmpVid_fu_412_p2 : STD_LOGIC_VECTOR (30 downto 0);
    signal add_ln79_fu_417_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln96_fu_441_p2 : STD_LOGIC_VECTOR (18 downto 0);
    signal select_ln674_fu_446_p3 : STD_LOGIC_VECTOR (18 downto 0);
    signal tmp_1_fu_461_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln674_fu_457_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln99_fu_488_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal tmp_2_fu_478_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal select_ln98_fu_471_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln99_fu_492_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln103_fu_513_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal shl_ln_fu_530_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln103_fu_537_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal vDegree_fu_540_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln80_fu_546_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln4_fu_556_p4 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln105_fu_566_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln105_fu_550_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln105_fu_570_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal realDeg_fu_576_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_6_fu_619_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln1_fu_629_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal next4K_V_fu_637_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal zext_ln215_fu_643_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal zext_ln215_1_fu_647_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal ret_fu_651_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal trunc_ln1347_fu_657_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sub_ln1364_fu_669_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln1364_1_fu_675_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal n_elem_margin_fu_701_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal tmp_4_fu_714_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal trunc_ln120_fu_706_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal v1_V_fu_751_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln2_fu_773_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln691_fu_781_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal trunc_ln116_fu_710_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal sub_ln124_fu_791_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln691_1_fu_801_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln691_1_fu_809_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal v1_V_1_fu_826_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_7_fu_843_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal shl_ln213_1_fu_853_p3 : STD_LOGIC_VECTOR (27 downto 0);
    signal next4K_V_1_fu_861_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal zext_ln215_2_fu_867_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal zext_ln215_3_fu_871_p1 : STD_LOGIC_VECTOR (28 downto 0);
    signal ret_1_fu_875_p2 : STD_LOGIC_VECTOR (28 downto 0);
    signal trunc_ln1347_1_fu_881_p1 : STD_LOGIC_VECTOR (19 downto 0);
    signal sub_ln1364_2_fu_893_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal sub_ln1364_3_fu_919_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal n_elem_margin_1_fu_924_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal v1_V_2_fu_949_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln135_fu_930_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal v1_V_3_fu_963_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal shl_ln691_2_fu_978_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln691_2_fu_986_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal add_ln138_fu_996_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_175 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state6) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln110_fu_602_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln110_fu_602_p2 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    empty_48_reg_267_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln110_fu_602_p2 = ap_const_lv1_0))) then 
                empty_48_reg_267 <= n_mem_tuples_promoted_reg_255;
            elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln110_1_reg_1131 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                empty_48_reg_267 <= add_ln126_reg_1169;
            end if; 
        end if;
    end process;

    empty_51_reg_332_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln110_fu_602_p2 = ap_const_lv1_1))) then 
                empty_51_reg_332 <= n_mem_tuples_promoted_reg_255;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln110_reg_1122 = ap_const_lv1_0))) then 
                empty_51_reg_332 <= empty_48_reg_267;
            end if; 
        end if;
    end process;

    empty_52_reg_344_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln132_fu_939_p2 = ap_const_lv1_0) and (icmp_ln131_fu_934_p2 = ap_const_lv1_0))) then 
                empty_52_reg_344 <= empty_51_reg_332;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln132_reg_1193 = ap_const_lv1_1) and (icmp_ln131_reg_1189 = ap_const_lv1_0))) then 
                empty_52_reg_344 <= add_ln136_fu_1007_p2;
            end if; 
        end if;
    end process;

    j_reg_279_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln110_fu_602_p2 = ap_const_lv1_0))) then 
                j_reg_279 <= ap_const_lv11_0;
            elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln110_1_reg_1131 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                j_reg_279 <= j_1_reg_1126;
            end if; 
        end if;
    end process;

    k_reg_244_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                k_reg_244 <= add_ln90_reg_1052;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                k_reg_244 <= ap_const_lv7_0;
            end if; 
        end if;
    end process;

    n_mem_tuples_promoted14_reg_354_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln131_fu_934_p2 = ap_const_lv1_1))) then 
                n_mem_tuples_promoted14_reg_354 <= empty_51_reg_332;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln131_reg_1189 = ap_const_lv1_0))) then 
                n_mem_tuples_promoted14_reg_354 <= add_ln140_fu_1026_p2;
            end if; 
        end if;
    end process;

    n_mem_tuples_promoted_reg_255_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
                n_mem_tuples_promoted_reg_255 <= ap_phi_mux_n_mem_tuples_promoted14_phi_fu_358_p4;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                n_mem_tuples_promoted_reg_255 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    ofstAddr_V_5_reg_310_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_175)) then
                if (((icmp_ln116_fu_724_p2 = ap_const_lv1_1) and (icmp_ln110_1_reg_1131 = ap_const_lv1_0))) then 
                    ofstAddr_V_5_reg_310 <= ofstAddr_V_4_fu_813_p2;
                elsif (((icmp_ln116_fu_724_p2 = ap_const_lv1_0) and (icmp_ln110_1_reg_1131 = ap_const_lv1_0))) then 
                    ofstAddr_V_5_reg_310 <= ofstAddr_V_6_fu_744_p2;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ofstAddr_V_5_reg_310 <= ap_phi_reg_pp0_iter0_ofstAddr_V_5_reg_310;
                end if;
            end if; 
        end if;
    end process;

    ofstAddr_V_8_reg_290_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln110_fu_602_p2 = ap_const_lv1_0))) then 
                ofstAddr_V_8_reg_290 <= ofstAddr_V_fu_523_p3;
            elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln110_1_reg_1131 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                ofstAddr_V_8_reg_290 <= ofstAddr_V_5_reg_310;
            end if; 
        end if;
    end process;

    rhs_reg_321_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln110_fu_602_p2 = ap_const_lv1_1))) then 
                rhs_reg_321 <= ofstAddr_V_fu_523_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln110_reg_1122 = ap_const_lv1_0))) then 
                rhs_reg_321 <= ofstAddr_V_8_reg_290;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln116_fu_724_p2 = ap_const_lv1_1) and (icmp_ln110_1_reg_1131 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                add_ln121_reg_1154 <= add_ln121_fu_766_p2;
                ofstAddr_V_9_reg_1159 <= ofstAddr_V_9_fu_785_p2;
                trunc_ln123_reg_1164 <= trunc_ln123_fu_797_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln110_1_reg_1131 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                add_ln126_reg_1169 <= add_ln126_fu_820_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                add_ln90_reg_1052 <= add_ln90_fu_394_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln110_1_reg_1131 <= icmp_ln110_1_fu_614_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                icmp_ln110_reg_1122 <= icmp_ln110_fu_602_p2;
                n_rmdr_elem_reg_1105 <= n_rmdr_elem_fu_584_p1;
                trunc_ln5_reg_1112 <= realDeg_fu_576_p3(14 downto 4);
                    zext_ln81_reg_1117(3 downto 0) <= zext_ln81_fu_598_p1(3 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln110_1_reg_1131 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                icmp_ln116_reg_1150 <= icmp_ln116_fu_724_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state10)) then
                icmp_ln131_reg_1189 <= icmp_ln131_fu_934_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln131_fu_934_p2 = ap_const_lv1_0))) then
                icmp_ln132_reg_1193 <= icmp_ln132_fu_939_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                j_1_reg_1126 <= j_1_fu_608_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln93_fu_422_p2 = ap_const_lv1_0) and (tmp_fu_386_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                lshr_ln_reg_1067 <= add_ln79_fu_417_p2(19 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    mul_reg_1039(30 downto 6) <= mul_fu_366_p3(30 downto 6);
                    trunc_ln_reg_1044(19 downto 6) <= trunc_ln_fu_378_p3(19 downto 6);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln132_fu_939_p2 = ap_const_lv1_1) and (icmp_ln131_fu_934_p2 = ap_const_lv1_0))) then
                ofstAddr_V_10_reg_1197 <= ofstAddr_V_10_fu_990_p2;
                v1_V_4_reg_1202 <= v1_V_4_fu_1001_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                padDecr_V_reg_1089 <= select_ln98_fu_471_p3(31 downto 28);
                sub_ln103_reg_1094 <= sub_ln103_fu_517_p2;
                trunc_ln213_reg_1084 <= trunc_ln213_fu_499_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln110_1_fu_614_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                sub_ln1364_1_reg_1140 <= sub_ln1364_1_fu_685_p2;
                tmp_3_reg_1135 <= ret_fu_651_p2(28 downto 28);
                trunc_ln1364_2_reg_1145 <= ret_fu_651_p2(19 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                tmp_5_reg_1174 <= ret_1_fu_875_p2(28 downto 28);
                trunc_ln1364_4_reg_1179 <= sub_ln1364_2_fu_893_p2(19 downto 4);
                trunc_ln1364_5_reg_1184 <= ret_1_fu_875_p2(19 downto 4);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((tmp_fu_386_p3 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                trunc_ln92_1_reg_1057 <= trunc_ln92_1_fu_408_p1;
            end if;
        end if;
    end process;
    mul_reg_1039(5 downto 0) <= "000000";
    trunc_ln_reg_1044(5 downto 0) <= "000000";
    zext_ln81_reg_1117(15 downto 4) <= "000000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state2, tmp_fu_386_p3, icmp_ln93_fu_422_p2, ap_CS_fsm_state5, icmp_ln110_fu_602_p2, ap_enable_reg_pp0_iter0, icmp_ln110_1_fu_614_p2, ap_block_pp0_stage0_subdone, ap_block_pp0_stage1_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and ((icmp_ln93_fu_422_p2 = ap_const_lv1_1) or (tmp_fu_386_p3 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_state5;
            when ap_ST_fsm_state5 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state5) and (icmp_ln110_fu_602_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((icmp_ln110_1_fu_614_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((icmp_ln110_1_fu_614_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                ap_NS_fsm <= ap_ST_fsm_state2;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXX";
        end case;
    end process;
    add_ln105_fu_570_p2 <= std_logic_vector(unsigned(zext_ln105_fu_566_p1) + unsigned(ap_const_lv15_1));
    add_ln121_fu_766_p2 <= std_logic_vector(unsigned(empty_48_reg_267) + unsigned(ap_const_lv16_1));
    add_ln126_fu_820_p2 <= std_logic_vector(unsigned(ap_phi_mux_empty_50_phi_fu_303_p4) + unsigned(ap_const_lv16_1));
    add_ln136_fu_1007_p2 <= std_logic_vector(unsigned(empty_51_reg_332) + unsigned(ap_const_lv16_1));
    add_ln138_fu_996_p2 <= std_logic_vector(unsigned(n_rmdr_elem_reg_1105) + unsigned(ap_const_lv4_F));
    add_ln140_fu_1026_p2 <= std_logic_vector(unsigned(ap_phi_mux_empty_52_phi_fu_347_p4) + unsigned(ap_const_lv16_1));
    add_ln79_fu_417_p2 <= std_logic_vector(unsigned(zext_ln92_fu_404_p1) + unsigned(trunc_ln_reg_1044));
    add_ln90_fu_394_p2 <= std_logic_vector(unsigned(k_reg_244) + unsigned(ap_const_lv7_1));
    add_ln96_fu_441_p2 <= std_logic_vector(unsigned(lshr_ln_reg_1067) + unsigned(ap_const_lv19_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(6);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(8);
    ap_CS_fsm_state11 <= ap_CS_fsm(9);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state5 <= ap_CS_fsm(4);
    ap_CS_fsm_state9 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_175_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
                ap_condition_175 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_condition_pp0_exit_iter0_state6_assign_proc : process(icmp_ln110_1_fu_614_p2)
    begin
        if ((icmp_ln110_1_fu_614_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state6 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state2, tmp_fu_386_p3, icmp_ln93_fu_422_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and ((icmp_ln93_fu_422_p2 = ap_const_lv1_1) or (tmp_fu_386_p3 = ap_const_lv1_1))) or ((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_empty_50_phi_fu_303_p4_assign_proc : process(empty_48_reg_267, icmp_ln110_1_reg_1131, icmp_ln116_fu_724_p2, add_ln121_fu_766_p2, ap_phi_reg_pp0_iter0_empty_50_reg_300)
    begin
        if ((icmp_ln110_1_reg_1131 = ap_const_lv1_0)) then
            if ((icmp_ln116_fu_724_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_empty_50_phi_fu_303_p4 <= add_ln121_fu_766_p2;
            elsif ((icmp_ln116_fu_724_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_empty_50_phi_fu_303_p4 <= empty_48_reg_267;
            else 
                ap_phi_mux_empty_50_phi_fu_303_p4 <= ap_phi_reg_pp0_iter0_empty_50_reg_300;
            end if;
        else 
            ap_phi_mux_empty_50_phi_fu_303_p4 <= ap_phi_reg_pp0_iter0_empty_50_reg_300;
        end if; 
    end process;


    ap_phi_mux_empty_52_phi_fu_347_p4_assign_proc : process(icmp_ln131_reg_1189, icmp_ln132_reg_1193, ap_CS_fsm_state11, add_ln136_fu_1007_p2, empty_52_reg_344)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln132_reg_1193 = ap_const_lv1_1) and (icmp_ln131_reg_1189 = ap_const_lv1_0))) then 
            ap_phi_mux_empty_52_phi_fu_347_p4 <= add_ln136_fu_1007_p2;
        else 
            ap_phi_mux_empty_52_phi_fu_347_p4 <= empty_52_reg_344;
        end if; 
    end process;


    ap_phi_mux_j_phi_fu_283_p4_assign_proc : process(j_reg_279, j_1_reg_1126, ap_CS_fsm_pp0_stage0, icmp_ln110_1_reg_1131, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln110_1_reg_1131 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_j_phi_fu_283_p4 <= j_1_reg_1126;
        else 
            ap_phi_mux_j_phi_fu_283_p4 <= j_reg_279;
        end if; 
    end process;


    ap_phi_mux_n_mem_tuples_promoted14_phi_fu_358_p4_assign_proc : process(icmp_ln131_reg_1189, ap_CS_fsm_state11, add_ln140_fu_1026_p2, n_mem_tuples_promoted14_reg_354)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln131_reg_1189 = ap_const_lv1_0))) then 
            ap_phi_mux_n_mem_tuples_promoted14_phi_fu_358_p4 <= add_ln140_fu_1026_p2;
        else 
            ap_phi_mux_n_mem_tuples_promoted14_phi_fu_358_p4 <= n_mem_tuples_promoted14_reg_354;
        end if; 
    end process;


    ap_phi_mux_ofstAddr_V_8_phi_fu_293_p4_assign_proc : process(ofstAddr_V_8_reg_290, ofstAddr_V_5_reg_310, ap_CS_fsm_pp0_stage0, icmp_ln110_1_reg_1131, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln110_1_reg_1131 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_ofstAddr_V_8_phi_fu_293_p4 <= ofstAddr_V_5_reg_310;
        else 
            ap_phi_mux_ofstAddr_V_8_phi_fu_293_p4 <= ofstAddr_V_8_reg_290;
        end if; 
    end process;


    ap_phi_mux_rhs_phi_fu_324_p4_assign_proc : process(ofstAddr_V_8_reg_290, icmp_ln110_reg_1122, ap_CS_fsm_state9, rhs_reg_321)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln110_reg_1122 = ap_const_lv1_0))) then 
            ap_phi_mux_rhs_phi_fu_324_p4 <= ofstAddr_V_8_reg_290;
        else 
            ap_phi_mux_rhs_phi_fu_324_p4 <= rhs_reg_321;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_empty_50_reg_300 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_ofstAddr_V_5_reg_310 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXX";

    ap_ready_assign_proc : process(ap_CS_fsm_state2, tmp_fu_386_p3, icmp_ln93_fu_422_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and ((icmp_ln93_fu_422_p2 = ap_const_lv1_1) or (tmp_fu_386_p3 = ap_const_lv1_1)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    icmp_ln105_fu_550_p2 <= "1" when (trunc_ln80_fu_546_p1 = ap_const_lv2_0) else "0";
    icmp_ln110_1_fu_614_p2 <= "1" when (ap_phi_mux_j_phi_fu_283_p4 = trunc_ln5_reg_1112) else "0";
    icmp_ln110_fu_602_p2 <= "1" when (trunc_ln5_fu_588_p4 = ap_const_lv11_0) else "0";
    icmp_ln116_fu_724_p2 <= "1" when (tmp_4_fu_714_p4 = ap_const_lv12_0) else "0";
    icmp_ln131_fu_934_p2 <= "1" when (n_rmdr_elem_reg_1105 = ap_const_lv4_0) else "0";
    icmp_ln132_fu_939_p2 <= "1" when (unsigned(n_elem_margin_1_fu_924_p3) < unsigned(zext_ln81_reg_1117)) else "0";
    icmp_ln93_fu_422_p2 <= "1" when (unsigned(tmpVid_fu_412_p2) > unsigned(rlt_tail_idx)) else "0";
    j_1_fu_608_p2 <= std_logic_vector(unsigned(ap_phi_mux_j_phi_fu_283_p4) + unsigned(ap_const_lv11_1));

    mem_req_buff_address1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln110_1_reg_1131, icmp_ln116_fu_724_p2, ap_CS_fsm_pp0_stage1, icmp_ln131_fu_934_p2, ap_CS_fsm_state10, icmp_ln132_fu_939_p2, ap_enable_reg_pp0_iter1, ap_CS_fsm_state11, ap_block_pp0_stage0, zext_ln120_fu_730_p1, ap_block_pp0_stage1, zext_ln123_fu_839_p1, zext_ln133_fu_944_p1, zext_ln138_fu_1021_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            mem_req_buff_address1 <= zext_ln138_fu_1021_p1(11 - 1 downto 0);
        elsif ((((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln132_fu_939_p2 = ap_const_lv1_0) and (icmp_ln131_fu_934_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln132_fu_939_p2 = ap_const_lv1_1) and (icmp_ln131_fu_934_p2 = ap_const_lv1_0)))) then 
            mem_req_buff_address1 <= zext_ln133_fu_944_p1(11 - 1 downto 0);
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            mem_req_buff_address1 <= zext_ln123_fu_839_p1(11 - 1 downto 0);
        elsif ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln116_fu_724_p2 = ap_const_lv1_0) and (icmp_ln110_1_reg_1131 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln116_fu_724_p2 = ap_const_lv1_1) and (icmp_ln110_1_reg_1131 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            mem_req_buff_address1 <= zext_ln120_fu_730_p1(11 - 1 downto 0);
        else 
            mem_req_buff_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    mem_req_buff_ce1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, icmp_ln110_1_reg_1131, icmp_ln116_fu_724_p2, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, icmp_ln131_fu_934_p2, ap_CS_fsm_state10, icmp_ln132_fu_939_p2, ap_enable_reg_pp0_iter1, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln132_fu_939_p2 = ap_const_lv1_0) and (icmp_ln131_fu_934_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln132_fu_939_p2 = ap_const_lv1_1) and (icmp_ln131_fu_934_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln116_fu_724_p2 = ap_const_lv1_0) and (icmp_ln110_1_reg_1131 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln116_fu_724_p2 = ap_const_lv1_1) and (icmp_ln110_1_reg_1131 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            mem_req_buff_ce1 <= ap_const_logic_1;
        else 
            mem_req_buff_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    mem_req_buff_d1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, icmp_ln110_1_reg_1131, icmp_ln116_fu_724_p2, ap_CS_fsm_pp0_stage1, icmp_ln131_fu_934_p2, ap_CS_fsm_state10, icmp_ln132_fu_939_p2, ap_enable_reg_pp0_iter1, ap_CS_fsm_state11, ap_block_pp0_stage0, ap_block_pp0_stage1, p_Result_s_fu_735_p3, p_Result_3_fu_757_p3, p_Result_4_fu_831_p3, p_Result_5_fu_954_p3, p_Result_6_fu_969_p3, p_Result_7_fu_1014_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then 
            mem_req_buff_d1 <= p_Result_7_fu_1014_p3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln132_fu_939_p2 = ap_const_lv1_1) and (icmp_ln131_fu_934_p2 = ap_const_lv1_0))) then 
            mem_req_buff_d1 <= p_Result_6_fu_969_p3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln132_fu_939_p2 = ap_const_lv1_0) and (icmp_ln131_fu_934_p2 = ap_const_lv1_0))) then 
            mem_req_buff_d1 <= p_Result_5_fu_954_p3;
        elsif (((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            mem_req_buff_d1 <= p_Result_4_fu_831_p3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln116_fu_724_p2 = ap_const_lv1_1) and (icmp_ln110_1_reg_1131 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            mem_req_buff_d1 <= p_Result_3_fu_757_p3;
        elsif (((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln116_fu_724_p2 = ap_const_lv1_0) and (icmp_ln110_1_reg_1131 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            mem_req_buff_d1 <= p_Result_s_fu_735_p3;
        else 
            mem_req_buff_d1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    mem_req_buff_we1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, icmp_ln110_1_reg_1131, icmp_ln116_fu_724_p2, icmp_ln116_reg_1150, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, icmp_ln131_fu_934_p2, icmp_ln131_reg_1189, ap_CS_fsm_state10, icmp_ln132_fu_939_p2, icmp_ln132_reg_1193, ap_enable_reg_pp0_iter1, ap_CS_fsm_state11)
    begin
        if ((((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln116_reg_1150 = ap_const_lv1_1) and (icmp_ln110_1_reg_1131 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln132_reg_1193 = ap_const_lv1_1) and (icmp_ln131_reg_1189 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln132_fu_939_p2 = ap_const_lv1_0) and (icmp_ln131_fu_934_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state10) and (icmp_ln132_fu_939_p2 = ap_const_lv1_1) and (icmp_ln131_fu_934_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln116_fu_724_p2 = ap_const_lv1_0) and (icmp_ln110_1_reg_1131 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln116_fu_724_p2 = ap_const_lv1_1) and (icmp_ln110_1_reg_1131 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            mem_req_buff_we1 <= ap_const_logic_1;
        else 
            mem_req_buff_we1 <= ap_const_logic_0;
        end if; 
    end process;

    mul_fu_366_p3 <= (batchIdx & ap_const_lv6_0);
    n_elem_margin_1_fu_924_p3 <= 
        sub_ln1364_3_fu_919_p2 when (tmp_5_reg_1174(0) = '1') else 
        trunc_ln1364_5_reg_1184;
    n_elem_margin_fu_701_p3 <= 
        sub_ln1364_1_reg_1140 when (tmp_3_reg_1135(0) = '1') else 
        trunc_ln1364_2_reg_1145;

    n_mem_tuples_assign_proc : process(ap_start, ap_CS_fsm_state1, empty_48_reg_267, icmp_ln110_reg_1122, ap_CS_fsm_state9, icmp_ln131_reg_1189, ap_CS_fsm_state11, add_ln140_fu_1026_p2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln131_reg_1189 = ap_const_lv1_0))) then 
            n_mem_tuples <= add_ln140_fu_1026_p2;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln110_reg_1122 = ap_const_lv1_0))) then 
            n_mem_tuples <= empty_48_reg_267;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
            n_mem_tuples <= ap_const_lv16_0;
        else 
            n_mem_tuples <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    n_mem_tuples_ap_vld_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_ln110_reg_1122, ap_CS_fsm_state9, icmp_ln131_reg_1189, ap_CS_fsm_state11)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln131_reg_1189 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln110_reg_1122 = ap_const_lv1_0)))) then 
            n_mem_tuples_ap_vld <= ap_const_logic_1;
        else 
            n_mem_tuples_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    n_rmdr_elem_fu_584_p1 <= realDeg_fu_576_p3(4 - 1 downto 0);
    next4K_V_1_fu_861_p2 <= std_logic_vector(unsigned(shl_ln213_1_fu_853_p3) + unsigned(ap_const_lv28_1000));
    next4K_V_fu_637_p2 <= std_logic_vector(unsigned(shl_ln1_fu_629_p3) + unsigned(ap_const_lv28_1000));
    ofstAddr_V_10_fu_990_p2 <= std_logic_vector(unsigned(zext_ln691_2_fu_986_p1) + unsigned(rhs_reg_321));
    ofstAddr_V_4_fu_813_p2 <= std_logic_vector(unsigned(zext_ln691_1_fu_809_p1) + unsigned(ofstAddr_V_9_fu_785_p2));
    ofstAddr_V_6_fu_744_p2 <= std_logic_vector(unsigned(ofstAddr_V_8_reg_290) + unsigned(ap_const_lv28_100));
    ofstAddr_V_9_fu_785_p2 <= std_logic_vector(unsigned(zext_ln691_fu_781_p1) + unsigned(ofstAddr_V_8_reg_290));
    ofstAddr_V_fu_523_p3 <= (trunc_ln213_reg_1084 & ap_const_lv4_0);
    ofst_buff_address0 <= zext_ln95_1_fu_452_p1(19 - 1 downto 0);
    ofst_buff_address1 <= zext_ln95_fu_437_p1(19 - 1 downto 0);

    ofst_buff_ce0_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            ofst_buff_ce0 <= ap_const_logic_1;
        else 
            ofst_buff_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ofst_buff_ce1_assign_proc : process(ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            ofst_buff_ce1 <= ap_const_logic_1;
        else 
            ofst_buff_ce1 <= ap_const_logic_0;
        end if; 
    end process;

    p_Result_3_fu_757_p3 <= (v1_V_fu_751_p2 & ofstAddr_V_8_reg_290);
    p_Result_4_fu_831_p3 <= (v1_V_1_fu_826_p2 & ofstAddr_V_9_reg_1159);
    p_Result_5_fu_954_p3 <= (v1_V_2_fu_949_p2 & rhs_reg_321);
    p_Result_6_fu_969_p3 <= (v1_V_3_fu_963_p2 & rhs_reg_321);
    p_Result_7_fu_1014_p3 <= (v1_V_4_reg_1202 & ofstAddr_V_10_reg_1197);
    p_Result_s_fu_735_p3 <= (ap_const_lv4_F & ofstAddr_V_8_reg_290);
    realDeg_fu_576_p3 <= 
        zext_ln105_fu_566_p1 when (icmp_ln105_fu_550_p2(0) = '1') else 
        add_ln105_fu_570_p2;
    ret_1_fu_875_p2 <= std_logic_vector(unsigned(zext_ln215_2_fu_867_p1) - unsigned(zext_ln215_3_fu_871_p1));
    ret_fu_651_p2 <= std_logic_vector(unsigned(zext_ln215_fu_643_p1) - unsigned(zext_ln215_1_fu_647_p1));
    select_ln674_fu_446_p3 <= 
        add_ln96_fu_441_p2 when (trunc_ln92_1_reg_1057(0) = '1') else 
        lshr_ln_reg_1067;
    select_ln98_fu_471_p3 <= 
        tmp_1_fu_461_p4 when (trunc_ln92_1_reg_1057(0) = '1') else 
        trunc_ln674_fu_457_p1;
    select_ln99_fu_492_p3 <= 
        trunc_ln99_fu_488_p1 when (trunc_ln92_1_reg_1057(0) = '1') else 
        tmp_2_fu_478_p4;
    shl_ln1_fu_629_p3 <= (tmp_6_fu_619_p4 & ap_const_lv12_0);
    shl_ln213_1_fu_853_p3 <= (tmp_7_fu_843_p4 & ap_const_lv12_0);
    shl_ln2_fu_773_p3 <= (trunc_ln120_fu_706_p1 & ap_const_lv4_0);
    shl_ln691_1_fu_801_p3 <= (sub_ln124_fu_791_p2 & ap_const_lv4_0);
    shl_ln691_2_fu_978_p3 <= (trunc_ln135_fu_930_p1 & ap_const_lv4_0);
    shl_ln_fu_530_p3 <= (sub_ln103_reg_1094 & ap_const_lv2_0);
    sub_ln103_fu_517_p2 <= std_logic_vector(unsigned(select_ln99_fu_492_p3) - unsigned(trunc_ln103_fu_513_p1));
    sub_ln124_fu_791_p2 <= std_logic_vector(signed(ap_const_lv5_10) - signed(trunc_ln116_fu_710_p1));
    sub_ln1364_1_fu_685_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(trunc_ln1364_1_fu_675_p4));
    sub_ln1364_2_fu_893_p2 <= std_logic_vector(unsigned(ap_const_lv20_0) - unsigned(trunc_ln1347_1_fu_881_p1));
    sub_ln1364_3_fu_919_p2 <= std_logic_vector(unsigned(ap_const_lv16_0) - unsigned(trunc_ln1364_4_reg_1179));
    sub_ln1364_fu_669_p2 <= std_logic_vector(unsigned(ap_const_lv20_0) - unsigned(trunc_ln1347_fu_657_p1));
    tmpVid_fu_412_p2 <= std_logic_vector(unsigned(zext_ln90_fu_400_p1) + unsigned(mul_reg_1039));
    tmp_1_fu_461_p4 <= ofst_buff_q1(63 downto 32);
    tmp_2_fu_478_p4 <= ofst_buff_q0(45 downto 32);
    tmp_4_fu_714_p4 <= n_elem_margin_fu_701_p3(15 downto 4);
    tmp_6_fu_619_p4 <= ap_phi_mux_ofstAddr_V_8_phi_fu_293_p4(27 downto 12);
    tmp_7_fu_843_p4 <= ap_phi_mux_rhs_phi_fu_324_p4(27 downto 12);
    tmp_fu_386_p3 <= k_reg_244(6 downto 6);
    trunc_ln103_fu_513_p1 <= select_ln98_fu_471_p3(14 - 1 downto 0);
    trunc_ln116_fu_710_p1 <= n_elem_margin_fu_701_p3(5 - 1 downto 0);
    trunc_ln120_fu_706_p1 <= n_elem_margin_fu_701_p3(4 - 1 downto 0);
    trunc_ln123_fu_797_p1 <= sub_ln124_fu_791_p2(4 - 1 downto 0);
    trunc_ln1347_1_fu_881_p1 <= ret_1_fu_875_p2(20 - 1 downto 0);
    trunc_ln1347_fu_657_p1 <= ret_fu_651_p2(20 - 1 downto 0);
    trunc_ln135_fu_930_p1 <= n_elem_margin_1_fu_924_p3(4 - 1 downto 0);
    trunc_ln1364_1_fu_675_p4 <= sub_ln1364_fu_669_p2(19 downto 4);
    trunc_ln213_fu_499_p1 <= select_ln98_fu_471_p3(24 - 1 downto 0);
    trunc_ln4_fu_556_p4 <= vDegree_fu_540_p2(15 downto 2);
    trunc_ln5_fu_588_p4 <= realDeg_fu_576_p3(14 downto 4);
    trunc_ln674_fu_457_p1 <= ofst_buff_q1(32 - 1 downto 0);
    trunc_ln80_fu_546_p1 <= vDegree_fu_540_p2(2 - 1 downto 0);
    trunc_ln92_1_fu_408_p1 <= k_reg_244(1 - 1 downto 0);
    trunc_ln92_fu_374_p1 <= batchIdx(14 - 1 downto 0);
    trunc_ln99_fu_488_p1 <= ofst_buff_q0(14 - 1 downto 0);
    trunc_ln_fu_378_p3 <= (trunc_ln92_fu_374_p1 & ap_const_lv6_0);
    v1_V_1_fu_826_p2 <= std_logic_vector(unsigned(trunc_ln123_reg_1164) + unsigned(ap_const_lv4_F));
    v1_V_2_fu_949_p2 <= std_logic_vector(unsigned(n_rmdr_elem_reg_1105) + unsigned(ap_const_lv4_F));
    v1_V_3_fu_963_p2 <= std_logic_vector(unsigned(trunc_ln135_fu_930_p1) + unsigned(ap_const_lv4_F));
    v1_V_4_fu_1001_p2 <= std_logic_vector(unsigned(add_ln138_fu_996_p2) - unsigned(trunc_ln135_fu_930_p1));
    v1_V_fu_751_p2 <= std_logic_vector(unsigned(trunc_ln120_fu_706_p1) + unsigned(ap_const_lv4_F));
    vDegree_fu_540_p2 <= std_logic_vector(unsigned(shl_ln_fu_530_p3) - unsigned(zext_ln103_fu_537_p1));
    zext_ln103_fu_537_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(padDecr_V_reg_1089),16));
    zext_ln105_fu_566_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln4_fu_556_p4),15));
    zext_ln120_fu_730_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_48_reg_267),64));
    zext_ln123_fu_839_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln121_reg_1154),64));
    zext_ln133_fu_944_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_51_reg_332),64));
    zext_ln138_fu_1021_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln136_fu_1007_p2),64));
    zext_ln215_1_fu_647_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_ofstAddr_V_8_phi_fu_293_p4),29));
    zext_ln215_2_fu_867_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(next4K_V_1_fu_861_p2),29));
    zext_ln215_3_fu_871_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_rhs_phi_fu_324_p4),29));
    zext_ln215_fu_643_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(next4K_V_fu_637_p2),29));
    zext_ln691_1_fu_809_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln691_1_fu_801_p3),28));
    zext_ln691_2_fu_986_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln691_2_fu_978_p3),28));
    zext_ln691_fu_781_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln2_fu_773_p3),28));
    zext_ln81_fu_598_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(n_rmdr_elem_fu_584_p1),16));
    zext_ln90_fu_400_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_reg_244),31));
    zext_ln92_fu_404_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(k_reg_244),20));
    zext_ln95_1_fu_452_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln674_fu_446_p3),64));
    zext_ln95_fu_437_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_reg_1067),64));
end behav;
