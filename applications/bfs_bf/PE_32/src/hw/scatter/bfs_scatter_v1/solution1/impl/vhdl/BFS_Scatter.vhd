-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity BFS_Scatter is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst_n : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    CSR_V : IN STD_LOGIC_VECTOR (32 downto 0);
    CSR_E : IN STD_LOGIC_VECTOR (32 downto 0);
    glbl_d : IN STD_LOGIC_VECTOR (32 downto 0);
    rd_baseAddr : OUT STD_LOGIC_VECTOR (63 downto 0);
    wr_baseAddr : OUT STD_LOGIC_VECTOR (63 downto 0);
    rd_port_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
    rd_port_TVALID : IN STD_LOGIC;
    rd_port_TREADY : OUT STD_LOGIC;
    rd_port_TKEEP : IN STD_LOGIC_VECTOR (15 downto 0);
    rd_port_TSTRB : IN STD_LOGIC_VECTOR (15 downto 0);
    rd_port_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
    wr_port_TDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
    wr_port_TVALID : OUT STD_LOGIC;
    wr_port_TREADY : IN STD_LOGIC;
    wr_port_TKEEP : OUT STD_LOGIC_VECTOR (15 downto 0);
    wr_port_TSTRB : OUT STD_LOGIC_VECTOR (15 downto 0);
    wr_port_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
    rd_req_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    rd_req_V_full_n : IN STD_LOGIC;
    rd_req_V_write : OUT STD_LOGIC;
    wr_len : OUT STD_LOGIC_VECTOR (15 downto 0);
    rd_start : OUT STD_LOGIC;
    wr_start : OUT STD_LOGIC;
    N_Vertex : IN STD_LOGIC_VECTOR (31 downto 0);
    root : IN STD_LOGIC_VECTOR (31 downto 0);
    peID : IN STD_LOGIC_VECTOR (7 downto 0);
    sw_data_0_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    sw_data_0_V_full_n : IN STD_LOGIC;
    sw_data_0_V_write : OUT STD_LOGIC;
    sw_data_1_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    sw_data_1_V_full_n : IN STD_LOGIC;
    sw_data_1_V_write : OUT STD_LOGIC;
    sw_data_2_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    sw_data_2_V_full_n : IN STD_LOGIC;
    sw_data_2_V_write : OUT STD_LOGIC;
    sw_data_3_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
    sw_data_3_V_full_n : IN STD_LOGIC;
    sw_data_3_V_write : OUT STD_LOGIC;
    glblIterIdx : IN STD_LOGIC_VECTOR (15 downto 0);
    cycle_cnt : IN STD_LOGIC_VECTOR (31 downto 0);
    launch_recv : OUT STD_LOGIC;
    resWrite : IN STD_LOGIC;
    tmp_dist_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp_dist_0_ce0 : OUT STD_LOGIC;
    tmp_dist_0_we0 : OUT STD_LOGIC;
    tmp_dist_0_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_0_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp_dist_1_ce0 : OUT STD_LOGIC;
    tmp_dist_1_we0 : OUT STD_LOGIC;
    tmp_dist_1_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_1_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp_dist_2_ce0 : OUT STD_LOGIC;
    tmp_dist_2_we0 : OUT STD_LOGIC;
    tmp_dist_2_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_3_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp_dist_3_ce0 : OUT STD_LOGIC;
    tmp_dist_3_we0 : OUT STD_LOGIC;
    tmp_dist_3_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_3_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_4_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp_dist_4_ce0 : OUT STD_LOGIC;
    tmp_dist_4_we0 : OUT STD_LOGIC;
    tmp_dist_4_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_4_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_5_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp_dist_5_ce0 : OUT STD_LOGIC;
    tmp_dist_5_we0 : OUT STD_LOGIC;
    tmp_dist_5_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_5_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_6_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp_dist_6_ce0 : OUT STD_LOGIC;
    tmp_dist_6_we0 : OUT STD_LOGIC;
    tmp_dist_6_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_6_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_7_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp_dist_7_ce0 : OUT STD_LOGIC;
    tmp_dist_7_we0 : OUT STD_LOGIC;
    tmp_dist_7_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_7_q0 : IN STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of BFS_Scatter is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "BFS_Scatter_BFS_Scatter,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu280-fsvh2892-2L-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.630750,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=8,HLS_SYN_DSP=0,HLS_SYN_FF=2441,HLS_SYN_LUT=9189,HLS_VERSION=2020_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000001000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000010000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000100000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (15 downto 0) := "0000000001000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (15 downto 0) := "0000000010000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (15 downto 0) := "0000000100000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (15 downto 0) := "0000001000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (15 downto 0) := "0000010000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (15 downto 0) := "0000100000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (15 downto 0) := "0001000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (15 downto 0) := "0010000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (15 downto 0) := "0100000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (15 downto 0) := "1000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv22_0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv64_FFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv7_37 : STD_LOGIC_VECTOR (6 downto 0) := "0110111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv28_1 : STD_LOGIC_VECTOR (27 downto 0) := "0000000000000000000000000001";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv13_1000 : STD_LOGIC_VECTOR (12 downto 0) := "1000000000000";
    constant ap_const_lv7_8 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_const_lv6_38 : STD_LOGIC_VECTOR (5 downto 0) := "111000";
    constant ap_const_lv7_4A : STD_LOGIC_VECTOR (6 downto 0) := "1001010";
    constant ap_const_lv7_2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_const_lv26_0 : STD_LOGIC_VECTOR (25 downto 0) := "00000000000000000000000000";
    constant ap_const_lv7_49 : STD_LOGIC_VECTOR (6 downto 0) := "1001001";
    constant ap_const_lv7_3F : STD_LOGIC_VECTOR (6 downto 0) := "0111111";
    constant ap_const_lv7_7 : STD_LOGIC_VECTOR (6 downto 0) := "0000111";
    constant ap_const_lv4_1 : STD_LOGIC_VECTOR (3 downto 0) := "0001";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv7_40 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_lv63_0 : STD_LOGIC_VECTOR (62 downto 0) := "000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv32_47 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000111";
    constant ap_const_lv72_FFFFFFFFFFFFFFFFFF : STD_LOGIC_VECTOR (71 downto 0) := "111111111111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv7_7F : STD_LOGIC_VECTOR (6 downto 0) := "1111111";
    constant ap_const_lv8_87 : STD_LOGIC_VECTOR (7 downto 0) := "10000111";
    constant ap_const_lv136_lc_1 : STD_LOGIC_VECTOR (135 downto 0) := "1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_87 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010000111";
    constant ap_const_lv136_lc_2 : STD_LOGIC_VECTOR (135 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000001111111111111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv64_FFFFFFFFFFFFFF00 : STD_LOGIC_VECTOR (63 downto 0) := "1111111111111111111111111111111111111111111111111111111100000000";
    constant ap_const_lv64_FFFFFFFFFFFFFF : STD_LOGIC_VECTOR (63 downto 0) := "0000000011111111111111111111111111111111111111111111111111111111";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv20_2 : STD_LOGIC_VECTOR (19 downto 0) := "00000000000000000010";
    constant ap_const_lv22_2 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000010";
    constant ap_const_lv22_1 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000001";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv16_6 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000110";
    constant ap_const_lv34_3F000 : STD_LOGIC_VECTOR (33 downto 0) := "0000000000000000111111000000000000";

    signal ap_rst_n_inv : STD_LOGIC;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal wr_port_TDATA_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state15 : signal is "none";
    signal tmp_fu_1553_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal i_4_reg_641 : STD_LOGIC_VECTOR (12 downto 0);
    signal empty_fu_790_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal empty_reg_1598 : STD_LOGIC_VECTOR (22 downto 0);
    signal empty_154_fu_794_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal empty_154_reg_1603 : STD_LOGIC_VECTOR (4 downto 0);
    signal CSR_V_cast_fu_802_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal CSR_V_cast_reg_1629 : STD_LOGIC_VECTOR (63 downto 0);
    signal CSR_E_cast_fu_806_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal CSR_E_cast_reg_1634 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln306_fu_830_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal zext_ln306_reg_1639 : STD_LOGIC_VECTOR (21 downto 0);
    signal rlt_tail_idx_fu_848_p2 : STD_LOGIC_VECTOR (27 downto 0);
    signal rlt_tail_idx_reg_1644 : STD_LOGIC_VECTOR (27 downto 0);
    signal resWrite_assign_load_load_fu_854_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal resWrite_assign_load_reg_1649 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln352_fu_857_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln352_reg_1658 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln318_fu_863_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln318_reg_1662 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_5_fu_869_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln354_fu_875_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln366_fu_899_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln366_reg_1716 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal rootBank_reg_1720 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln377_fu_937_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln377_reg_1724 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln377_fu_942_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln377_reg_1730 : STD_LOGIC_VECTOR (6 downto 0);
    signal W_ref1_fu_972_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal W_ref1_reg_1735 : STD_LOGIC_VECTOR (6 downto 0);
    signal W_ref2_fu_992_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal W_ref2_reg_1740 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln674_fu_1016_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln674_reg_1747 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln674_3_fu_1036_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal sub_ln674_3_reg_1752 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln312_fu_1042_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln312_reg_1757 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln312_fu_1058_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln312_reg_1762 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln312_1_fu_1068_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal add_ln312_1_reg_1770 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln372_fu_1074_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln372_reg_1777 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln372_1_fu_1080_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln372_1_reg_1782 : STD_LOGIC_VECTOR (0 downto 0);
    signal lshr_ln_reg_1788 : STD_LOGIC_VECTOR (11 downto 0);
    signal wrVal_fu_1417_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal wrVal_reg_1793 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal add_ln388_fu_1445_p2 : STD_LOGIC_VECTOR (19 downto 0);
    signal add_ln388_reg_1805 : STD_LOGIC_VECTOR (19 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal add105_fu_1461_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal add105_reg_1810 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_CS_fsm_state9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state9 : signal is "none";
    signal i_7_fu_1466_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal i_7_reg_1815 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_CS_fsm_state10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state10 : signal is "none";
    signal regslice_both_wr_port_V_data_V_U_apdone_blk : STD_LOGIC;
    signal trunc_ln395_fu_1472_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln395_reg_1820 : STD_LOGIC_VECTOR (0 downto 0);
    signal n_wr_iter_fu_1504_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal n_wr_iter_reg_1833 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal i_3_fu_1518_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal i_3_reg_1838 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal trunc_ln325_fu_1529_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln325_reg_1846 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln323_fu_1524_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln334_fu_1561_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal add_ln334_reg_1857 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_block_state15 : BOOLEAN;
    signal ap_block_state15_io : BOOLEAN;
    signal zext_ln312_6_fu_1576_p1 : STD_LOGIC_VECTOR (127 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ofst_buff_ce0 : STD_LOGIC;
    signal ofst_buff_q0 : STD_LOGIC_VECTOR (63 downto 0);
    signal ofst_buff_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal ofst_buff_ce1 : STD_LOGIC;
    signal ofst_buff_we1 : STD_LOGIC;
    signal ofst_buff_q1 : STD_LOGIC_VECTOR (63 downto 0);
    signal mem_req_buff_V_0_ce0 : STD_LOGIC;
    signal mem_req_buff_V_0_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mem_req_buff_V_0_ce1 : STD_LOGIC;
    signal mem_req_buff_V_0_we1 : STD_LOGIC;
    signal mem_req_buff_V_1_ce0 : STD_LOGIC;
    signal mem_req_buff_V_1_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mem_req_buff_V_1_ce1 : STD_LOGIC;
    signal mem_req_buff_V_1_we1 : STD_LOGIC;
    signal grp_gen_access_tuple_fu_686_ap_start : STD_LOGIC;
    signal grp_gen_access_tuple_fu_686_ap_done : STD_LOGIC;
    signal grp_gen_access_tuple_fu_686_ap_idle : STD_LOGIC;
    signal grp_gen_access_tuple_fu_686_ap_ready : STD_LOGIC;
    signal grp_gen_access_tuple_fu_686_ofst_buff_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_gen_access_tuple_fu_686_ofst_buff_ce0 : STD_LOGIC;
    signal grp_gen_access_tuple_fu_686_ofst_buff_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_gen_access_tuple_fu_686_ofst_buff_ce1 : STD_LOGIC;
    signal grp_gen_access_tuple_fu_686_n_mem_tuples : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_gen_access_tuple_fu_686_n_mem_tuples_ap_vld : STD_LOGIC;
    signal grp_gen_access_tuple_fu_686_mem_req_buff_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_gen_access_tuple_fu_686_mem_req_buff_ce1 : STD_LOGIC;
    signal grp_gen_access_tuple_fu_686_mem_req_buff_we1 : STD_LOGIC;
    signal grp_gen_access_tuple_fu_686_mem_req_buff_d1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_feed_network_fu_696_ap_start : STD_LOGIC;
    signal grp_feed_network_fu_696_ap_done : STD_LOGIC;
    signal grp_feed_network_fu_696_ap_idle : STD_LOGIC;
    signal grp_feed_network_fu_696_ap_ready : STD_LOGIC;
    signal grp_feed_network_fu_696_rd_req_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_feed_network_fu_696_rd_req_V_write : STD_LOGIC;
    signal grp_feed_network_fu_696_rd_start : STD_LOGIC;
    signal grp_feed_network_fu_696_rd_start_ap_vld : STD_LOGIC;
    signal grp_feed_network_fu_696_tmp_dist_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_feed_network_fu_696_tmp_dist_0_ce0 : STD_LOGIC;
    signal grp_feed_network_fu_696_tmp_dist_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_feed_network_fu_696_tmp_dist_1_ce0 : STD_LOGIC;
    signal grp_feed_network_fu_696_tmp_dist_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_feed_network_fu_696_tmp_dist_2_ce0 : STD_LOGIC;
    signal grp_feed_network_fu_696_tmp_dist_3_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_feed_network_fu_696_tmp_dist_3_ce0 : STD_LOGIC;
    signal grp_feed_network_fu_696_tmp_dist_4_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_feed_network_fu_696_tmp_dist_4_ce0 : STD_LOGIC;
    signal grp_feed_network_fu_696_tmp_dist_5_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_feed_network_fu_696_tmp_dist_5_ce0 : STD_LOGIC;
    signal grp_feed_network_fu_696_tmp_dist_6_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_feed_network_fu_696_tmp_dist_6_ce0 : STD_LOGIC;
    signal grp_feed_network_fu_696_tmp_dist_7_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_feed_network_fu_696_tmp_dist_7_ce0 : STD_LOGIC;
    signal grp_feed_network_fu_696_sw_data_0_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_feed_network_fu_696_sw_data_0_V_write : STD_LOGIC;
    signal grp_feed_network_fu_696_sw_data_1_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_feed_network_fu_696_sw_data_1_V_write : STD_LOGIC;
    signal grp_feed_network_fu_696_sw_data_2_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_feed_network_fu_696_sw_data_2_V_write : STD_LOGIC;
    signal grp_feed_network_fu_696_sw_data_3_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_feed_network_fu_696_sw_data_3_V_write : STD_LOGIC;
    signal grp_feed_network_fu_696_rd_port_TREADY : STD_LOGIC;
    signal grp_feed_network_fu_696_n_mem_tuples : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_feed_network_fu_696_mem_req_buff_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal grp_feed_network_fu_696_mem_req_buff_ce0 : STD_LOGIC;
    signal grp_feed_network_fu_696_mem_req_buff_q0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_WrDist_fu_738_ap_start : STD_LOGIC;
    signal grp_WrDist_fu_738_ap_done : STD_LOGIC;
    signal grp_WrDist_fu_738_ap_idle : STD_LOGIC;
    signal grp_WrDist_fu_738_ap_ready : STD_LOGIC;
    signal grp_WrDist_fu_738_tmp_dist_0_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_WrDist_fu_738_tmp_dist_0_ce0 : STD_LOGIC;
    signal grp_WrDist_fu_738_tmp_dist_1_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_WrDist_fu_738_tmp_dist_1_ce0 : STD_LOGIC;
    signal grp_WrDist_fu_738_tmp_dist_2_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_WrDist_fu_738_tmp_dist_2_ce0 : STD_LOGIC;
    signal grp_WrDist_fu_738_tmp_dist_3_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_WrDist_fu_738_tmp_dist_3_ce0 : STD_LOGIC;
    signal grp_WrDist_fu_738_tmp_dist_4_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_WrDist_fu_738_tmp_dist_4_ce0 : STD_LOGIC;
    signal grp_WrDist_fu_738_tmp_dist_5_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_WrDist_fu_738_tmp_dist_5_ce0 : STD_LOGIC;
    signal grp_WrDist_fu_738_tmp_dist_6_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_WrDist_fu_738_tmp_dist_6_ce0 : STD_LOGIC;
    signal grp_WrDist_fu_738_tmp_dist_7_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_WrDist_fu_738_tmp_dist_7_ce0 : STD_LOGIC;
    signal grp_WrDist_fu_738_wr_port_TDATA : STD_LOGIC_VECTOR (127 downto 0);
    signal grp_WrDist_fu_738_wr_port_TVALID : STD_LOGIC;
    signal grp_WrDist_fu_738_wr_port_TREADY : STD_LOGIC;
    signal grp_WrDist_fu_738_wr_port_TKEEP : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_WrDist_fu_738_wr_port_TSTRB : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_WrDist_fu_738_wr_port_TLAST : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_BuffOfst_fu_767_ap_start : STD_LOGIC;
    signal grp_BuffOfst_fu_767_ap_done : STD_LOGIC;
    signal grp_BuffOfst_fu_767_ap_idle : STD_LOGIC;
    signal grp_BuffOfst_fu_767_ap_ready : STD_LOGIC;
    signal grp_BuffOfst_fu_767_rd_req_V_din : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_BuffOfst_fu_767_rd_req_V_write : STD_LOGIC;
    signal grp_BuffOfst_fu_767_rd_start : STD_LOGIC;
    signal grp_BuffOfst_fu_767_rd_start_ap_vld : STD_LOGIC;
    signal grp_BuffOfst_fu_767_ofst_buff_address1 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_BuffOfst_fu_767_ofst_buff_ce1 : STD_LOGIC;
    signal grp_BuffOfst_fu_767_ofst_buff_we1 : STD_LOGIC;
    signal grp_BuffOfst_fu_767_ofst_buff_d1 : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_BuffOfst_fu_767_rd_port_TREADY : STD_LOGIC;
    signal i_6_reg_652 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_block_state9_on_subcall_done : BOOLEAN;
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_block_state11_on_subcall_done : BOOLEAN;
    signal i_reg_664 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state14 : signal is "none";
    signal cnt_oot_reg_675 : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal icmp_ln332_fu_1548_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_gen_access_tuple_fu_686_ap_start_reg : STD_LOGIC := '0';
    signal icmp_ln395_fu_1476_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal n_tuple_0_fu_336 : STD_LOGIC_VECTOR (15 downto 0);
    signal n_tuple_1_fu_340 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_feed_network_fu_696_ap_start_reg : STD_LOGIC := '0';
    signal grp_WrDist_fu_738_ap_start_reg : STD_LOGIC := '0';
    signal grp_BuffOfst_fu_767_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal idxprom58_fu_881_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln379_fu_1425_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal resWrite_assign_fu_324 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_sig_allocacmp_resWrite_assign_load : STD_LOGIC_VECTOR (0 downto 0);
    signal rd_start_preg : STD_LOGIC := '0';
    signal wr_start_preg : STD_LOGIC := '0';
    signal launch_recv_preg : STD_LOGIC := '0';
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal glbl_d_cast10_fu_810_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal wr_baseAddr_preg : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal zext_ln534_fu_1543_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal rd_baseAddr_preg : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    signal shl_ln320_fu_1511_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal wr_len_preg : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    signal grp_fu_785_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal trunc_ln_fu_820_p4 : STD_LOGIC_VECTOR (20 downto 0);
    signal trunc_ln1_fu_834_p4 : STD_LOGIC_VECTOR (26 downto 0);
    signal zext_ln307_fu_844_p1 : STD_LOGIC_VECTOR (27 downto 0);
    signal empty_155_fu_798_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln366_1_fu_896_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln366_fu_893_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sub_ln368_fu_904_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal rangeOfst_fu_919_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal shl_ln4_fu_929_p3 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln684_fu_956_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal tmp_6_fu_948_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln684_fu_966_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln684_fu_962_p1 : STD_LOGIC_VECTOR (6 downto 0);
    signal icmp_ln684_fu_980_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln684_1_fu_986_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_7_fu_1004_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln674_1_fu_1012_p1 : STD_LOGIC_VECTOR (25 downto 0);
    signal add_ln674_fu_1022_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal grp_fu_785_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln674_fu_1028_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal tmp_8_fu_1048_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln312_fu_1064_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sext_ln307_1_fu_1000_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln674_fu_1099_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln674_fu_1104_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal select_ln674_1_fu_1114_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal zext_ln674_2_fu_1120_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln674_3_fu_1124_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln674_fu_1127_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal lshr_ln674_1_fu_1133_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sub_ln312_fu_1151_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln312_fu_1145_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal select_ln312_1_fu_1156_p3 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Result_17_fu_1139_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln312_fu_1171_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal st_fu_1175_p3 : STD_LOGIC_VECTOR (71 downto 0);
    signal sf_fu_1183_p3 : STD_LOGIC_VECTOR (71 downto 0);
    signal select_ln312_2_fu_1191_p3 : STD_LOGIC_VECTOR (71 downto 0);
    signal tmp_9_fu_1198_p4 : STD_LOGIC_VECTOR (71 downto 0);
    signal zext_ln312_fu_1163_p1 : STD_LOGIC_VECTOR (71 downto 0);
    signal zext_ln312_1_fu_1167_p1 : STD_LOGIC_VECTOR (71 downto 0);
    signal shl_ln312_fu_1215_p2 : STD_LOGIC_VECTOR (71 downto 0);
    signal lshr_ln312_fu_1221_p2 : STD_LOGIC_VECTOR (71 downto 0);
    signal select_ln312_3_fu_1208_p3 : STD_LOGIC_VECTOR (71 downto 0);
    signal and_ln312_fu_1227_p2 : STD_LOGIC_VECTOR (71 downto 0);
    signal add_ln310_fu_1239_p2 : STD_LOGIC_VECTOR (6 downto 0);
    signal p_Result_16_fu_1108_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln310_fu_1244_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln310_fu_1252_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln310_1_fu_1258_p1 : STD_LOGIC_VECTOR (135 downto 0);
    signal zext_ln310_fu_1248_p1 : STD_LOGIC_VECTOR (135 downto 0);
    signal lshr_ln310_fu_1262_p2 : STD_LOGIC_VECTOR (135 downto 0);
    signal sext_ln307_fu_1096_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal sext_ln312_1_fu_1274_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal p_Result_18_fu_1233_p2 : STD_LOGIC_VECTOR (71 downto 0);
    signal sext_ln312_2_fu_1283_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln312_1_fu_1277_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln312_1_fu_1290_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln312_4_fu_1296_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln312_6_fu_1310_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln312_5_fu_1303_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln312_2_fu_1318_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln312_2_fu_1286_p1 : STD_LOGIC_VECTOR (135 downto 0);
    signal zext_ln312_3_fu_1324_p1 : STD_LOGIC_VECTOR (135 downto 0);
    signal shl_ln312_1_fu_1336_p2 : STD_LOGIC_VECTOR (135 downto 0);
    signal tmp_12_fu_1342_p4 : STD_LOGIC_VECTOR (135 downto 0);
    signal zext_ln312_4_fu_1328_p1 : STD_LOGIC_VECTOR (135 downto 0);
    signal zext_ln312_5_fu_1332_p1 : STD_LOGIC_VECTOR (135 downto 0);
    signal shl_ln312_2_fu_1360_p2 : STD_LOGIC_VECTOR (135 downto 0);
    signal lshr_ln312_1_fu_1366_p2 : STD_LOGIC_VECTOR (135 downto 0);
    signal and_ln312_2_fu_1372_p2 : STD_LOGIC_VECTOR (135 downto 0);
    signal p_Result_19_fu_1268_p2 : STD_LOGIC_VECTOR (135 downto 0);
    signal xor_ln312_fu_1378_p2 : STD_LOGIC_VECTOR (135 downto 0);
    signal select_ln312_7_fu_1352_p3 : STD_LOGIC_VECTOR (135 downto 0);
    signal and_ln312_3_fu_1384_p2 : STD_LOGIC_VECTOR (135 downto 0);
    signal and_ln312_4_fu_1390_p2 : STD_LOGIC_VECTOR (135 downto 0);
    signal p_Result_20_fu_1396_p2 : STD_LOGIC_VECTOR (135 downto 0);
    signal or_ln372_fu_1413_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln372_fu_1406_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln371_fu_1402_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal trunc_ln3_fu_1436_p4 : STD_LOGIC_VECTOR (19 downto 0);
    signal trunc_ln2_fu_1489_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal add_ln318_fu_1498_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln1346_fu_1534_p1 : STD_LOGIC_VECTOR (33 downto 0);
    signal ret_fu_1537_p2 : STD_LOGIC_VECTOR (33 downto 0);
    signal p_Result_s_fu_1567_p4 : STD_LOGIC_VECTOR (111 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal regslice_both_rd_port_V_data_V_U_apdone_blk : STD_LOGIC;
    signal rd_port_TDATA_int_regslice : STD_LOGIC_VECTOR (127 downto 0);
    signal rd_port_TVALID_int_regslice : STD_LOGIC;
    signal rd_port_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_rd_port_V_data_V_U_ack_in : STD_LOGIC;
    signal regslice_both_rd_port_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal rd_port_TKEEP_int_regslice : STD_LOGIC_VECTOR (15 downto 0);
    signal regslice_both_rd_port_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_rd_port_V_keep_V_U_ack_in : STD_LOGIC;
    signal regslice_both_rd_port_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal rd_port_TSTRB_int_regslice : STD_LOGIC_VECTOR (15 downto 0);
    signal regslice_both_rd_port_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_rd_port_V_strb_V_U_ack_in : STD_LOGIC;
    signal regslice_both_rd_port_V_last_V_U_apdone_blk : STD_LOGIC;
    signal rd_port_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_rd_port_V_last_V_U_vld_out : STD_LOGIC;
    signal regslice_both_rd_port_V_last_V_U_ack_in : STD_LOGIC;
    signal wr_port_TDATA_int_regslice : STD_LOGIC_VECTOR (127 downto 0);
    signal wr_port_TVALID_int_regslice : STD_LOGIC;
    signal wr_port_TREADY_int_regslice : STD_LOGIC;
    signal regslice_both_wr_port_V_data_V_U_vld_out : STD_LOGIC;
    signal regslice_both_wr_port_V_keep_V_U_apdone_blk : STD_LOGIC;
    signal wr_port_TKEEP_int_regslice : STD_LOGIC_VECTOR (15 downto 0);
    signal regslice_both_wr_port_V_keep_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_wr_port_V_keep_V_U_vld_out : STD_LOGIC;
    signal regslice_both_wr_port_V_strb_V_U_apdone_blk : STD_LOGIC;
    signal wr_port_TSTRB_int_regslice : STD_LOGIC_VECTOR (15 downto 0);
    signal regslice_both_wr_port_V_strb_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_wr_port_V_strb_V_U_vld_out : STD_LOGIC;
    signal regslice_both_wr_port_V_last_V_U_apdone_blk : STD_LOGIC;
    signal wr_port_TLAST_int_regslice : STD_LOGIC_VECTOR (0 downto 0);
    signal regslice_both_wr_port_V_last_V_U_ack_in_dummy : STD_LOGIC;
    signal regslice_both_wr_port_V_last_V_U_vld_out : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component BFS_Scatter_gen_access_tuple IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ofst_buff_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ofst_buff_ce0 : OUT STD_LOGIC;
        ofst_buff_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        ofst_buff_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ofst_buff_ce1 : OUT STD_LOGIC;
        ofst_buff_q1 : IN STD_LOGIC_VECTOR (63 downto 0);
        rlt_tail_idx : IN STD_LOGIC_VECTOR (27 downto 0);
        batchIdx : IN STD_LOGIC_VECTOR (21 downto 0);
        n_mem_tuples : OUT STD_LOGIC_VECTOR (15 downto 0);
        n_mem_tuples_ap_vld : OUT STD_LOGIC;
        mem_req_buff_address1 : OUT STD_LOGIC_VECTOR (10 downto 0);
        mem_req_buff_ce1 : OUT STD_LOGIC;
        mem_req_buff_we1 : OUT STD_LOGIC;
        mem_req_buff_d1 : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component BFS_Scatter_feed_network IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        rd_req_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        rd_req_V_full_n : IN STD_LOGIC;
        rd_req_V_write : OUT STD_LOGIC;
        rd_start : OUT STD_LOGIC;
        rd_start_ap_vld : OUT STD_LOGIC;
        tmp_dist_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        tmp_dist_0_ce0 : OUT STD_LOGIC;
        tmp_dist_0_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        tmp_dist_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        tmp_dist_1_ce0 : OUT STD_LOGIC;
        tmp_dist_1_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        tmp_dist_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        tmp_dist_2_ce0 : OUT STD_LOGIC;
        tmp_dist_2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        tmp_dist_3_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        tmp_dist_3_ce0 : OUT STD_LOGIC;
        tmp_dist_3_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        tmp_dist_4_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        tmp_dist_4_ce0 : OUT STD_LOGIC;
        tmp_dist_4_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        tmp_dist_5_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        tmp_dist_5_ce0 : OUT STD_LOGIC;
        tmp_dist_5_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        tmp_dist_6_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        tmp_dist_6_ce0 : OUT STD_LOGIC;
        tmp_dist_6_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        tmp_dist_7_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        tmp_dist_7_ce0 : OUT STD_LOGIC;
        tmp_dist_7_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        sw_data_0_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        sw_data_0_V_full_n : IN STD_LOGIC;
        sw_data_0_V_write : OUT STD_LOGIC;
        sw_data_1_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        sw_data_1_V_full_n : IN STD_LOGIC;
        sw_data_1_V_write : OUT STD_LOGIC;
        sw_data_2_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        sw_data_2_V_full_n : IN STD_LOGIC;
        sw_data_2_V_write : OUT STD_LOGIC;
        sw_data_3_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        sw_data_3_V_full_n : IN STD_LOGIC;
        sw_data_3_V_write : OUT STD_LOGIC;
        rd_port_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
        rd_port_TVALID : IN STD_LOGIC;
        rd_port_TREADY : OUT STD_LOGIC;
        rd_port_TKEEP : IN STD_LOGIC_VECTOR (15 downto 0);
        rd_port_TSTRB : IN STD_LOGIC_VECTOR (15 downto 0);
        rd_port_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        n_mem_tuples : IN STD_LOGIC_VECTOR (15 downto 0);
        mem_req_buff_address0 : OUT STD_LOGIC_VECTOR (10 downto 0);
        mem_req_buff_ce0 : OUT STD_LOGIC;
        mem_req_buff_q0 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component BFS_Scatter_WrDist IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        tmp_dist_0_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        tmp_dist_0_ce0 : OUT STD_LOGIC;
        tmp_dist_0_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        tmp_dist_1_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        tmp_dist_1_ce0 : OUT STD_LOGIC;
        tmp_dist_1_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        tmp_dist_2_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        tmp_dist_2_ce0 : OUT STD_LOGIC;
        tmp_dist_2_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        tmp_dist_3_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        tmp_dist_3_ce0 : OUT STD_LOGIC;
        tmp_dist_3_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        tmp_dist_4_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        tmp_dist_4_ce0 : OUT STD_LOGIC;
        tmp_dist_4_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        tmp_dist_5_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        tmp_dist_5_ce0 : OUT STD_LOGIC;
        tmp_dist_5_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        tmp_dist_6_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        tmp_dist_6_ce0 : OUT STD_LOGIC;
        tmp_dist_6_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        tmp_dist_7_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
        tmp_dist_7_ce0 : OUT STD_LOGIC;
        tmp_dist_7_q0 : IN STD_LOGIC_VECTOR (63 downto 0);
        wr_port_TDATA : OUT STD_LOGIC_VECTOR (127 downto 0);
        wr_port_TVALID : OUT STD_LOGIC;
        wr_port_TREADY : IN STD_LOGIC;
        wr_port_TKEEP : OUT STD_LOGIC_VECTOR (15 downto 0);
        wr_port_TSTRB : OUT STD_LOGIC_VECTOR (15 downto 0);
        wr_port_TLAST : OUT STD_LOGIC_VECTOR (0 downto 0);
        idx : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component BFS_Scatter_BuffOfst IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        rd_req_V_din : OUT STD_LOGIC_VECTOR (31 downto 0);
        rd_req_V_full_n : IN STD_LOGIC;
        rd_req_V_write : OUT STD_LOGIC;
        rd_start : OUT STD_LOGIC;
        rd_start_ap_vld : OUT STD_LOGIC;
        ofst_buff_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
        ofst_buff_ce1 : OUT STD_LOGIC;
        ofst_buff_we1 : OUT STD_LOGIC;
        ofst_buff_d1 : OUT STD_LOGIC_VECTOR (63 downto 0);
        rd_port_TDATA : IN STD_LOGIC_VECTOR (127 downto 0);
        rd_port_TVALID : IN STD_LOGIC;
        rd_port_TREADY : OUT STD_LOGIC;
        rd_port_TKEEP : IN STD_LOGIC_VECTOR (15 downto 0);
        rd_port_TSTRB : IN STD_LOGIC_VECTOR (15 downto 0);
        rd_port_TLAST : IN STD_LOGIC_VECTOR (0 downto 0);
        size : IN STD_LOGIC_VECTOR (19 downto 0) );
    end component;


    component BFS_Scatter_ofst_buff IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (63 downto 0);
        address1 : IN STD_LOGIC_VECTOR (15 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (63 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (63 downto 0) );
    end component;


    component BFS_Scatter_mem_req_buff_V_0 IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (31 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component BFS_Scatter_regslice_both IS
    generic (
        DataWidth : INTEGER );
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        data_in : IN STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_in : IN STD_LOGIC;
        ack_in : OUT STD_LOGIC;
        data_out : OUT STD_LOGIC_VECTOR (DataWidth-1 downto 0);
        vld_out : OUT STD_LOGIC;
        ack_out : IN STD_LOGIC;
        apdone_blk : OUT STD_LOGIC );
    end component;



begin
    ofst_buff_U : component BFS_Scatter_ofst_buff
    generic map (
        DataWidth => 64,
        AddressRange => 49152,
        AddressWidth => 16)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_gen_access_tuple_fu_686_ofst_buff_address0,
        ce0 => ofst_buff_ce0,
        q0 => ofst_buff_q0,
        address1 => ofst_buff_address1,
        ce1 => ofst_buff_ce1,
        we1 => ofst_buff_we1,
        d1 => grp_BuffOfst_fu_767_ofst_buff_d1,
        q1 => ofst_buff_q1);

    mem_req_buff_V_0_U : component BFS_Scatter_mem_req_buff_V_0
    generic map (
        DataWidth => 32,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_feed_network_fu_696_mem_req_buff_address0,
        ce0 => mem_req_buff_V_0_ce0,
        q0 => mem_req_buff_V_0_q0,
        address1 => grp_gen_access_tuple_fu_686_mem_req_buff_address1,
        ce1 => mem_req_buff_V_0_ce1,
        we1 => mem_req_buff_V_0_we1,
        d1 => grp_gen_access_tuple_fu_686_mem_req_buff_d1);

    mem_req_buff_V_1_U : component BFS_Scatter_mem_req_buff_V_0
    generic map (
        DataWidth => 32,
        AddressRange => 2048,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst_n_inv,
        address0 => grp_feed_network_fu_696_mem_req_buff_address0,
        ce0 => mem_req_buff_V_1_ce0,
        q0 => mem_req_buff_V_1_q0,
        address1 => grp_gen_access_tuple_fu_686_mem_req_buff_address1,
        ce1 => mem_req_buff_V_1_ce1,
        we1 => mem_req_buff_V_1_we1,
        d1 => grp_gen_access_tuple_fu_686_mem_req_buff_d1);

    grp_gen_access_tuple_fu_686 : component BFS_Scatter_gen_access_tuple
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_gen_access_tuple_fu_686_ap_start,
        ap_done => grp_gen_access_tuple_fu_686_ap_done,
        ap_idle => grp_gen_access_tuple_fu_686_ap_idle,
        ap_ready => grp_gen_access_tuple_fu_686_ap_ready,
        ofst_buff_address0 => grp_gen_access_tuple_fu_686_ofst_buff_address0,
        ofst_buff_ce0 => grp_gen_access_tuple_fu_686_ofst_buff_ce0,
        ofst_buff_q0 => ofst_buff_q0,
        ofst_buff_address1 => grp_gen_access_tuple_fu_686_ofst_buff_address1,
        ofst_buff_ce1 => grp_gen_access_tuple_fu_686_ofst_buff_ce1,
        ofst_buff_q1 => ofst_buff_q1,
        rlt_tail_idx => rlt_tail_idx_reg_1644,
        batchIdx => i_6_reg_652,
        n_mem_tuples => grp_gen_access_tuple_fu_686_n_mem_tuples,
        n_mem_tuples_ap_vld => grp_gen_access_tuple_fu_686_n_mem_tuples_ap_vld,
        mem_req_buff_address1 => grp_gen_access_tuple_fu_686_mem_req_buff_address1,
        mem_req_buff_ce1 => grp_gen_access_tuple_fu_686_mem_req_buff_ce1,
        mem_req_buff_we1 => grp_gen_access_tuple_fu_686_mem_req_buff_we1,
        mem_req_buff_d1 => grp_gen_access_tuple_fu_686_mem_req_buff_d1);

    grp_feed_network_fu_696 : component BFS_Scatter_feed_network
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_feed_network_fu_696_ap_start,
        ap_done => grp_feed_network_fu_696_ap_done,
        ap_idle => grp_feed_network_fu_696_ap_idle,
        ap_ready => grp_feed_network_fu_696_ap_ready,
        rd_req_V_din => grp_feed_network_fu_696_rd_req_V_din,
        rd_req_V_full_n => rd_req_V_full_n,
        rd_req_V_write => grp_feed_network_fu_696_rd_req_V_write,
        rd_start => grp_feed_network_fu_696_rd_start,
        rd_start_ap_vld => grp_feed_network_fu_696_rd_start_ap_vld,
        tmp_dist_0_address0 => grp_feed_network_fu_696_tmp_dist_0_address0,
        tmp_dist_0_ce0 => grp_feed_network_fu_696_tmp_dist_0_ce0,
        tmp_dist_0_q0 => tmp_dist_0_q0,
        tmp_dist_1_address0 => grp_feed_network_fu_696_tmp_dist_1_address0,
        tmp_dist_1_ce0 => grp_feed_network_fu_696_tmp_dist_1_ce0,
        tmp_dist_1_q0 => tmp_dist_1_q0,
        tmp_dist_2_address0 => grp_feed_network_fu_696_tmp_dist_2_address0,
        tmp_dist_2_ce0 => grp_feed_network_fu_696_tmp_dist_2_ce0,
        tmp_dist_2_q0 => tmp_dist_2_q0,
        tmp_dist_3_address0 => grp_feed_network_fu_696_tmp_dist_3_address0,
        tmp_dist_3_ce0 => grp_feed_network_fu_696_tmp_dist_3_ce0,
        tmp_dist_3_q0 => tmp_dist_3_q0,
        tmp_dist_4_address0 => grp_feed_network_fu_696_tmp_dist_4_address0,
        tmp_dist_4_ce0 => grp_feed_network_fu_696_tmp_dist_4_ce0,
        tmp_dist_4_q0 => tmp_dist_4_q0,
        tmp_dist_5_address0 => grp_feed_network_fu_696_tmp_dist_5_address0,
        tmp_dist_5_ce0 => grp_feed_network_fu_696_tmp_dist_5_ce0,
        tmp_dist_5_q0 => tmp_dist_5_q0,
        tmp_dist_6_address0 => grp_feed_network_fu_696_tmp_dist_6_address0,
        tmp_dist_6_ce0 => grp_feed_network_fu_696_tmp_dist_6_ce0,
        tmp_dist_6_q0 => tmp_dist_6_q0,
        tmp_dist_7_address0 => grp_feed_network_fu_696_tmp_dist_7_address0,
        tmp_dist_7_ce0 => grp_feed_network_fu_696_tmp_dist_7_ce0,
        tmp_dist_7_q0 => tmp_dist_7_q0,
        sw_data_0_V_din => grp_feed_network_fu_696_sw_data_0_V_din,
        sw_data_0_V_full_n => sw_data_0_V_full_n,
        sw_data_0_V_write => grp_feed_network_fu_696_sw_data_0_V_write,
        sw_data_1_V_din => grp_feed_network_fu_696_sw_data_1_V_din,
        sw_data_1_V_full_n => sw_data_1_V_full_n,
        sw_data_1_V_write => grp_feed_network_fu_696_sw_data_1_V_write,
        sw_data_2_V_din => grp_feed_network_fu_696_sw_data_2_V_din,
        sw_data_2_V_full_n => sw_data_2_V_full_n,
        sw_data_2_V_write => grp_feed_network_fu_696_sw_data_2_V_write,
        sw_data_3_V_din => grp_feed_network_fu_696_sw_data_3_V_din,
        sw_data_3_V_full_n => sw_data_3_V_full_n,
        sw_data_3_V_write => grp_feed_network_fu_696_sw_data_3_V_write,
        rd_port_TDATA => rd_port_TDATA_int_regslice,
        rd_port_TVALID => rd_port_TVALID_int_regslice,
        rd_port_TREADY => grp_feed_network_fu_696_rd_port_TREADY,
        rd_port_TKEEP => rd_port_TKEEP_int_regslice,
        rd_port_TSTRB => rd_port_TSTRB_int_regslice,
        rd_port_TLAST => rd_port_TLAST_int_regslice,
        n_mem_tuples => grp_feed_network_fu_696_n_mem_tuples,
        mem_req_buff_address0 => grp_feed_network_fu_696_mem_req_buff_address0,
        mem_req_buff_ce0 => grp_feed_network_fu_696_mem_req_buff_ce0,
        mem_req_buff_q0 => grp_feed_network_fu_696_mem_req_buff_q0);

    grp_WrDist_fu_738 : component BFS_Scatter_WrDist
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_WrDist_fu_738_ap_start,
        ap_done => grp_WrDist_fu_738_ap_done,
        ap_idle => grp_WrDist_fu_738_ap_idle,
        ap_ready => grp_WrDist_fu_738_ap_ready,
        tmp_dist_0_address0 => grp_WrDist_fu_738_tmp_dist_0_address0,
        tmp_dist_0_ce0 => grp_WrDist_fu_738_tmp_dist_0_ce0,
        tmp_dist_0_q0 => tmp_dist_0_q0,
        tmp_dist_1_address0 => grp_WrDist_fu_738_tmp_dist_1_address0,
        tmp_dist_1_ce0 => grp_WrDist_fu_738_tmp_dist_1_ce0,
        tmp_dist_1_q0 => tmp_dist_1_q0,
        tmp_dist_2_address0 => grp_WrDist_fu_738_tmp_dist_2_address0,
        tmp_dist_2_ce0 => grp_WrDist_fu_738_tmp_dist_2_ce0,
        tmp_dist_2_q0 => tmp_dist_2_q0,
        tmp_dist_3_address0 => grp_WrDist_fu_738_tmp_dist_3_address0,
        tmp_dist_3_ce0 => grp_WrDist_fu_738_tmp_dist_3_ce0,
        tmp_dist_3_q0 => tmp_dist_3_q0,
        tmp_dist_4_address0 => grp_WrDist_fu_738_tmp_dist_4_address0,
        tmp_dist_4_ce0 => grp_WrDist_fu_738_tmp_dist_4_ce0,
        tmp_dist_4_q0 => tmp_dist_4_q0,
        tmp_dist_5_address0 => grp_WrDist_fu_738_tmp_dist_5_address0,
        tmp_dist_5_ce0 => grp_WrDist_fu_738_tmp_dist_5_ce0,
        tmp_dist_5_q0 => tmp_dist_5_q0,
        tmp_dist_6_address0 => grp_WrDist_fu_738_tmp_dist_6_address0,
        tmp_dist_6_ce0 => grp_WrDist_fu_738_tmp_dist_6_ce0,
        tmp_dist_6_q0 => tmp_dist_6_q0,
        tmp_dist_7_address0 => grp_WrDist_fu_738_tmp_dist_7_address0,
        tmp_dist_7_ce0 => grp_WrDist_fu_738_tmp_dist_7_ce0,
        tmp_dist_7_q0 => tmp_dist_7_q0,
        wr_port_TDATA => grp_WrDist_fu_738_wr_port_TDATA,
        wr_port_TVALID => grp_WrDist_fu_738_wr_port_TVALID,
        wr_port_TREADY => grp_WrDist_fu_738_wr_port_TREADY,
        wr_port_TKEEP => grp_WrDist_fu_738_wr_port_TKEEP,
        wr_port_TSTRB => grp_WrDist_fu_738_wr_port_TSTRB,
        wr_port_TLAST => grp_WrDist_fu_738_wr_port_TLAST,
        idx => trunc_ln325_reg_1846);

    grp_BuffOfst_fu_767 : component BFS_Scatter_BuffOfst
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        ap_start => grp_BuffOfst_fu_767_ap_start,
        ap_done => grp_BuffOfst_fu_767_ap_done,
        ap_idle => grp_BuffOfst_fu_767_ap_idle,
        ap_ready => grp_BuffOfst_fu_767_ap_ready,
        rd_req_V_din => grp_BuffOfst_fu_767_rd_req_V_din,
        rd_req_V_full_n => rd_req_V_full_n,
        rd_req_V_write => grp_BuffOfst_fu_767_rd_req_V_write,
        rd_start => grp_BuffOfst_fu_767_rd_start,
        rd_start_ap_vld => grp_BuffOfst_fu_767_rd_start_ap_vld,
        ofst_buff_address1 => grp_BuffOfst_fu_767_ofst_buff_address1,
        ofst_buff_ce1 => grp_BuffOfst_fu_767_ofst_buff_ce1,
        ofst_buff_we1 => grp_BuffOfst_fu_767_ofst_buff_we1,
        ofst_buff_d1 => grp_BuffOfst_fu_767_ofst_buff_d1,
        rd_port_TDATA => rd_port_TDATA_int_regslice,
        rd_port_TVALID => rd_port_TVALID_int_regslice,
        rd_port_TREADY => grp_BuffOfst_fu_767_rd_port_TREADY,
        rd_port_TKEEP => rd_port_TKEEP_int_regslice,
        rd_port_TSTRB => rd_port_TSTRB_int_regslice,
        rd_port_TLAST => rd_port_TLAST_int_regslice,
        size => add_ln388_reg_1805);

    regslice_both_rd_port_V_data_V_U : component BFS_Scatter_regslice_both
    generic map (
        DataWidth => 128)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => rd_port_TDATA,
        vld_in => rd_port_TVALID,
        ack_in => regslice_both_rd_port_V_data_V_U_ack_in,
        data_out => rd_port_TDATA_int_regslice,
        vld_out => rd_port_TVALID_int_regslice,
        ack_out => rd_port_TREADY_int_regslice,
        apdone_blk => regslice_both_rd_port_V_data_V_U_apdone_blk);

    regslice_both_rd_port_V_keep_V_U : component BFS_Scatter_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => rd_port_TKEEP,
        vld_in => rd_port_TVALID,
        ack_in => regslice_both_rd_port_V_keep_V_U_ack_in,
        data_out => rd_port_TKEEP_int_regslice,
        vld_out => regslice_both_rd_port_V_keep_V_U_vld_out,
        ack_out => rd_port_TREADY_int_regslice,
        apdone_blk => regslice_both_rd_port_V_keep_V_U_apdone_blk);

    regslice_both_rd_port_V_strb_V_U : component BFS_Scatter_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => rd_port_TSTRB,
        vld_in => rd_port_TVALID,
        ack_in => regslice_both_rd_port_V_strb_V_U_ack_in,
        data_out => rd_port_TSTRB_int_regslice,
        vld_out => regslice_both_rd_port_V_strb_V_U_vld_out,
        ack_out => rd_port_TREADY_int_regslice,
        apdone_blk => regslice_both_rd_port_V_strb_V_U_apdone_blk);

    regslice_both_rd_port_V_last_V_U : component BFS_Scatter_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => rd_port_TLAST,
        vld_in => rd_port_TVALID,
        ack_in => regslice_both_rd_port_V_last_V_U_ack_in,
        data_out => rd_port_TLAST_int_regslice,
        vld_out => regslice_both_rd_port_V_last_V_U_vld_out,
        ack_out => rd_port_TREADY_int_regslice,
        apdone_blk => regslice_both_rd_port_V_last_V_U_apdone_blk);

    regslice_both_wr_port_V_data_V_U : component BFS_Scatter_regslice_both
    generic map (
        DataWidth => 128)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => wr_port_TDATA_int_regslice,
        vld_in => wr_port_TVALID_int_regslice,
        ack_in => wr_port_TREADY_int_regslice,
        data_out => wr_port_TDATA,
        vld_out => regslice_both_wr_port_V_data_V_U_vld_out,
        ack_out => wr_port_TREADY,
        apdone_blk => regslice_both_wr_port_V_data_V_U_apdone_blk);

    regslice_both_wr_port_V_keep_V_U : component BFS_Scatter_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => wr_port_TKEEP_int_regslice,
        vld_in => wr_port_TVALID_int_regslice,
        ack_in => regslice_both_wr_port_V_keep_V_U_ack_in_dummy,
        data_out => wr_port_TKEEP,
        vld_out => regslice_both_wr_port_V_keep_V_U_vld_out,
        ack_out => wr_port_TREADY,
        apdone_blk => regslice_both_wr_port_V_keep_V_U_apdone_blk);

    regslice_both_wr_port_V_strb_V_U : component BFS_Scatter_regslice_both
    generic map (
        DataWidth => 16)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => wr_port_TSTRB_int_regslice,
        vld_in => wr_port_TVALID_int_regslice,
        ack_in => regslice_both_wr_port_V_strb_V_U_ack_in_dummy,
        data_out => wr_port_TSTRB,
        vld_out => regslice_both_wr_port_V_strb_V_U_vld_out,
        ack_out => wr_port_TREADY,
        apdone_blk => regslice_both_wr_port_V_strb_V_U_apdone_blk);

    regslice_both_wr_port_V_last_V_U : component BFS_Scatter_regslice_both
    generic map (
        DataWidth => 1)
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst_n_inv,
        data_in => wr_port_TLAST_int_regslice,
        vld_in => wr_port_TVALID_int_regslice,
        ack_in => regslice_both_wr_port_V_last_V_U_ack_in_dummy,
        data_out => wr_port_TLAST,
        vld_out => regslice_both_wr_port_V_last_V_U_vld_out,
        ack_out => wr_port_TREADY,
        apdone_blk => regslice_both_wr_port_V_last_V_U_apdone_blk);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln352_fu_857_p2 = ap_const_lv1_1) and (resWrite_assign_load_load_fu_854_p1 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln352_fu_857_p2 = ap_const_lv1_1) and (resWrite_assign_load_load_fu_854_p1 = ap_const_lv1_0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_BuffOfst_fu_767_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_BuffOfst_fu_767_ap_start_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    grp_BuffOfst_fu_767_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_BuffOfst_fu_767_ap_ready = ap_const_logic_1)) then 
                    grp_BuffOfst_fu_767_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_WrDist_fu_738_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_WrDist_fu_738_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln323_fu_1524_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                    grp_WrDist_fu_738_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_WrDist_fu_738_ap_ready = ap_const_logic_1)) then 
                    grp_WrDist_fu_738_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_feed_network_fu_696_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_feed_network_fu_696_ap_start_reg <= ap_const_logic_0;
            else
                if ((((icmp_ln395_fu_1476_p2 = ap_const_lv1_0) and (trunc_ln395_fu_1472_p1 = ap_const_lv1_1) and (regslice_both_wr_port_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state10) and (resWrite_assign_load_reg_1649 = ap_const_lv1_0)) or ((icmp_ln395_fu_1476_p2 = ap_const_lv1_0) and (trunc_ln395_fu_1472_p1 = ap_const_lv1_0) and (regslice_both_wr_port_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state10) and (resWrite_assign_load_reg_1649 = ap_const_lv1_0)))) then 
                    grp_feed_network_fu_696_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_feed_network_fu_696_ap_ready = ap_const_logic_1)) then 
                    grp_feed_network_fu_696_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_gen_access_tuple_fu_686_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                grp_gen_access_tuple_fu_686_ap_start_reg <= ap_const_logic_0;
            else
                if ((((icmp_ln395_fu_1476_p2 = ap_const_lv1_0) and (trunc_ln395_fu_1472_p1 = ap_const_lv1_1) and (regslice_both_wr_port_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state10) and (resWrite_assign_load_reg_1649 = ap_const_lv1_0)) or ((icmp_ln395_fu_1476_p2 = ap_const_lv1_0) and (trunc_ln395_fu_1472_p1 = ap_const_lv1_0) and (regslice_both_wr_port_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state10) and (resWrite_assign_load_reg_1649 = ap_const_lv1_0)))) then 
                    grp_gen_access_tuple_fu_686_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_gen_access_tuple_fu_686_ap_ready = ap_const_logic_1)) then 
                    grp_gen_access_tuple_fu_686_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    launch_recv_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                launch_recv_preg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_state9_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln352_reg_1658 = ap_const_lv1_1)))) then 
                    launch_recv_preg <= ap_const_logic_1;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                    launch_recv_preg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    rd_baseAddr_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                rd_baseAddr_preg(0) <= '0';
                rd_baseAddr_preg(1) <= '0';
                rd_baseAddr_preg(2) <= '0';
                rd_baseAddr_preg(3) <= '0';
                rd_baseAddr_preg(4) <= '0';
                rd_baseAddr_preg(5) <= '0';
                rd_baseAddr_preg(6) <= '0';
                rd_baseAddr_preg(7) <= '0';
                rd_baseAddr_preg(8) <= '0';
                rd_baseAddr_preg(9) <= '0';
                rd_baseAddr_preg(10) <= '0';
                rd_baseAddr_preg(11) <= '0';
                rd_baseAddr_preg(12) <= '0';
                rd_baseAddr_preg(13) <= '0';
                rd_baseAddr_preg(14) <= '0';
                rd_baseAddr_preg(15) <= '0';
                rd_baseAddr_preg(16) <= '0';
                rd_baseAddr_preg(17) <= '0';
                rd_baseAddr_preg(18) <= '0';
                rd_baseAddr_preg(19) <= '0';
                rd_baseAddr_preg(20) <= '0';
                rd_baseAddr_preg(21) <= '0';
                rd_baseAddr_preg(22) <= '0';
                rd_baseAddr_preg(23) <= '0';
                rd_baseAddr_preg(24) <= '0';
                rd_baseAddr_preg(25) <= '0';
                rd_baseAddr_preg(26) <= '0';
                rd_baseAddr_preg(27) <= '0';
                rd_baseAddr_preg(28) <= '0';
                rd_baseAddr_preg(29) <= '0';
                rd_baseAddr_preg(30) <= '0';
                rd_baseAddr_preg(31) <= '0';
                rd_baseAddr_preg(32) <= '0';
            else
                if (((ap_const_boolean_0 = ap_block_state9_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                                        rd_baseAddr_preg(32 downto 0) <= CSR_E_cast_reg_1634(32 downto 0);
                elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
                                        rd_baseAddr_preg(32 downto 0) <= CSR_V_cast_reg_1629(32 downto 0);
                end if; 
            end if;
        end if;
    end process;


    rd_start_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                
            else
            end if;
        end if;
    end process;


    wr_baseAddr_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                wr_baseAddr_preg(0) <= '0';
                wr_baseAddr_preg(1) <= '0';
                wr_baseAddr_preg(2) <= '0';
                wr_baseAddr_preg(3) <= '0';
                wr_baseAddr_preg(4) <= '0';
                wr_baseAddr_preg(5) <= '0';
                wr_baseAddr_preg(6) <= '0';
                wr_baseAddr_preg(7) <= '0';
                wr_baseAddr_preg(8) <= '0';
                wr_baseAddr_preg(9) <= '0';
                wr_baseAddr_preg(10) <= '0';
                wr_baseAddr_preg(11) <= '0';
                wr_baseAddr_preg(12) <= '0';
                wr_baseAddr_preg(13) <= '0';
                wr_baseAddr_preg(14) <= '0';
                wr_baseAddr_preg(15) <= '0';
                wr_baseAddr_preg(16) <= '0';
                wr_baseAddr_preg(17) <= '0';
                wr_baseAddr_preg(18) <= '0';
                wr_baseAddr_preg(19) <= '0';
                wr_baseAddr_preg(20) <= '0';
                wr_baseAddr_preg(21) <= '0';
                wr_baseAddr_preg(22) <= '0';
                wr_baseAddr_preg(23) <= '0';
                wr_baseAddr_preg(24) <= '0';
                wr_baseAddr_preg(25) <= '0';
                wr_baseAddr_preg(26) <= '0';
                wr_baseAddr_preg(27) <= '0';
                wr_baseAddr_preg(28) <= '0';
                wr_baseAddr_preg(29) <= '0';
                wr_baseAddr_preg(30) <= '0';
                wr_baseAddr_preg(31) <= '0';
                wr_baseAddr_preg(32) <= '0';
                wr_baseAddr_preg(33) <= '0';
            else
                if (((icmp_ln323_fu_1524_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                                        wr_baseAddr_preg(33 downto 0) <= zext_ln534_fu_1543_p1(33 downto 0);
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (resWrite_assign_load_load_fu_854_p1 = ap_const_lv1_1))) then 
                                        wr_baseAddr_preg(33 downto 0) <= glbl_d_cast10_fu_810_p1(33 downto 0);
                end if; 
            end if;
        end if;
    end process;


    wr_len_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                wr_len_preg(0) <= '0';
                wr_len_preg(6) <= '0';
                wr_len_preg(7) <= '0';
                wr_len_preg(8) <= '0';
                wr_len_preg(9) <= '0';
                wr_len_preg(10) <= '0';
                wr_len_preg(11) <= '0';
                wr_len_preg(12) <= '0';
                wr_len_preg(13) <= '0';
                wr_len_preg(14) <= '0';
                wr_len_preg(15) <= '0';
            else
                if (((icmp_ln323_fu_1524_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                    wr_len_preg(0) <= '1';
                    wr_len_preg(6) <= '0';
                    wr_len_preg(7) <= '0';
                    wr_len_preg(8) <= '0';
                    wr_len_preg(9) <= '0';
                    wr_len_preg(10) <= '0';
                    wr_len_preg(11) <= '0';
                    wr_len_preg(12) <= '0';
                    wr_len_preg(13) <= '0';
                    wr_len_preg(14) <= '0';
                    wr_len_preg(15) <= '0';
                elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                                        wr_len_preg(0) <= shl_ln320_fu_1511_p2(0);                    wr_len_preg(15 downto 6) <= shl_ln320_fu_1511_p2(15 downto 6);
                end if; 
            end if;
        end if;
    end process;


    wr_start_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst_n_inv = '1') then
                wr_start_preg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (wr_port_TREADY_int_regslice = ap_const_logic_1)))) then 
                    wr_start_preg <= ap_const_logic_1;
                elsif ((((icmp_ln323_fu_1524_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
                    wr_start_preg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    cnt_oot_reg_675_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln332_fu_1548_p2 = ap_const_lv1_1) and (icmp_ln323_fu_1524_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
                cnt_oot_reg_675 <= ap_const_lv7_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state16)) then 
                cnt_oot_reg_675 <= add_ln334_reg_1857;
            end if; 
        end if;
    end process;

    i_4_reg_641_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln352_fu_857_p2 = ap_const_lv1_1) and (resWrite_assign_load_load_fu_854_p1 = ap_const_lv1_0))) then 
                i_4_reg_641 <= ap_const_lv13_0;
            elsif (((icmp_ln354_fu_875_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                i_4_reg_641 <= i_5_fu_869_p2;
            end if; 
        end if;
    end process;

    i_6_reg_652_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                i_6_reg_652 <= i_7_reg_1815;
            elsif (((ap_const_boolean_0 = ap_block_state9_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                i_6_reg_652 <= ap_const_lv22_0;
            end if; 
        end if;
    end process;

    i_reg_664_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((grp_WrDist_fu_738_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
                i_reg_664 <= i_3_reg_1838;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                i_reg_664 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    n_tuple_0_fu_336_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state9_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                n_tuple_0_fu_336 <= ap_const_lv16_0;
            elsif (((grp_gen_access_tuple_fu_686_n_mem_tuples_ap_vld = ap_const_logic_1) and (trunc_ln395_reg_1820 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                n_tuple_0_fu_336 <= grp_gen_access_tuple_fu_686_n_mem_tuples;
            end if; 
        end if;
    end process;

    n_tuple_1_fu_340_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_state9_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
                n_tuple_1_fu_340 <= ap_const_lv16_0;
            elsif (((grp_gen_access_tuple_fu_686_n_mem_tuples_ap_vld = ap_const_logic_1) and (trunc_ln395_reg_1820 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
                n_tuple_1_fu_340 <= grp_gen_access_tuple_fu_686_n_mem_tuples;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                    CSR_E_cast_reg_1634(32 downto 0) <= CSR_E_cast_fu_806_p1(32 downto 0);
                    CSR_V_cast_reg_1629(32 downto 0) <= CSR_V_cast_fu_802_p1(32 downto 0);
                empty_154_reg_1603 <= empty_154_fu_794_p1;
                empty_reg_1598 <= empty_fu_790_p1;
                resWrite_assign_load_reg_1649 <= ap_sig_allocacmp_resWrite_assign_load;
                rlt_tail_idx_reg_1644 <= rlt_tail_idx_fu_848_p2;
                    zext_ln306_reg_1639(20 downto 0) <= zext_ln306_fu_830_p1(20 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln366_fu_899_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    W_ref1_reg_1735(1) <= W_ref1_fu_972_p3(1);    W_ref1_reg_1735(6 downto 3) <= W_ref1_fu_972_p3(6 downto 3);
                    W_ref2_reg_1740(1) <= W_ref2_fu_992_p3(1);    W_ref2_reg_1740(6 downto 3) <= W_ref2_fu_992_p3(6 downto 3);
                    add_ln312_1_reg_1770(7 downto 1) <= add_ln312_1_fu_1068_p2(7 downto 1);
                    add_ln312_reg_1757(6 downto 1) <= add_ln312_fu_1042_p2(6 downto 1);
                    add_ln377_reg_1730(6 downto 3) <= add_ln377_fu_942_p2(6 downto 3);
                icmp_ln312_reg_1762 <= icmp_ln312_fu_1058_p2;
                icmp_ln372_1_reg_1782 <= icmp_ln372_1_fu_1080_p2;
                icmp_ln372_reg_1777 <= icmp_ln372_fu_1074_p2;
                icmp_ln674_reg_1747 <= icmp_ln674_fu_1016_p2;
                lshr_ln_reg_1788 <= sub_ln368_fu_904_p2(22 downto 11);
                rootBank_reg_1720 <= sub_ln368_fu_904_p2(7 downto 5);
                sub_ln674_3_reg_1752 <= sub_ln674_3_fu_1036_p2;
                    zext_ln377_reg_1724(5 downto 3) <= zext_ln377_fu_937_p1(5 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state9)) then
                add105_reg_1810 <= add105_fu_1461_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not(((ap_const_boolean_1 = ap_block_state15_io) or ((tmp_fu_1553_p3 = ap_const_lv1_1) and (wr_port_TREADY_int_regslice = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state15) and (tmp_fu_1553_p3 = ap_const_lv1_0))) then
                add_ln334_reg_1857 <= add_ln334_fu_1561_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                add_ln388_reg_1805 <= add_ln388_fu_1445_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state13)) then
                i_3_reg_1838 <= i_3_fu_1518_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((regslice_both_wr_port_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state10) and (resWrite_assign_load_reg_1649 = ap_const_lv1_0))) then
                i_7_reg_1815 <= i_7_fu_1466_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (resWrite_assign_load_load_fu_854_p1 = ap_const_lv1_1))) then
                icmp_ln318_reg_1662 <= icmp_ln318_fu_863_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state1) and (resWrite_assign_load_load_fu_854_p1 = ap_const_lv1_0))) then
                icmp_ln352_reg_1658 <= icmp_ln352_fu_857_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state5)) then
                icmp_ln366_reg_1716 <= icmp_ln366_fu_899_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then
                n_wr_iter_reg_1833 <= n_wr_iter_fu_1504_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                resWrite_assign_fu_324 <= (0=>resWrite, others=>'-');
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln323_fu_1524_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                trunc_ln325_reg_1846 <= trunc_ln325_fu_1529_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state10) and (resWrite_assign_load_reg_1649 = ap_const_lv1_0))) then
                trunc_ln395_reg_1820 <= trunc_ln395_fu_1472_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                wrVal_reg_1793 <= wrVal_fu_1417_p3;
            end if;
        end if;
    end process;
    CSR_V_cast_reg_1629(63 downto 33) <= "0000000000000000000000000000000";
    CSR_E_cast_reg_1634(63 downto 33) <= "0000000000000000000000000000000";
    zext_ln306_reg_1639(21) <= '0';
    zext_ln377_reg_1724(2 downto 0) <= "000";
    zext_ln377_reg_1724(6) <= '0';
    add_ln377_reg_1730(2 downto 0) <= "000";
    W_ref1_reg_1735(0) <= '0';
    W_ref1_reg_1735(2) <= '0';
    W_ref2_reg_1740(0) <= '0';
    W_ref2_reg_1740(2) <= '0';
    add_ln312_reg_1757(0) <= '1';
    add_ln312_1_reg_1770(0) <= '1';
    rd_start_preg <= '0';
    wr_baseAddr_preg(63 downto 34) <= "000000000000000000000000000000";
    rd_baseAddr_preg(63 downto 33) <= "0000000000000000000000000000000";
    wr_len_preg(5 downto 1) <= "00000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_CS_fsm_state15, tmp_fu_1553_p3, ap_CS_fsm_state17, resWrite_assign_load_load_fu_854_p1, resWrite_assign_load_reg_1649, icmp_ln352_fu_857_p2, ap_enable_reg_pp0_iter0, icmp_ln354_fu_875_p2, icmp_ln366_fu_899_p2, ap_CS_fsm_state5, ap_CS_fsm_state9, ap_CS_fsm_state10, regslice_both_wr_port_V_data_V_U_apdone_blk, ap_CS_fsm_state13, icmp_ln323_fu_1524_p2, ap_block_state15_io, ap_block_pp0_stage0_subdone, grp_WrDist_fu_738_ap_done, ap_block_state9_on_subcall_done, ap_CS_fsm_state11, ap_block_state11_on_subcall_done, ap_CS_fsm_state14, icmp_ln332_fu_1548_p2, icmp_ln395_fu_1476_p2, wr_port_TREADY_int_regslice)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln352_fu_857_p2 = ap_const_lv1_1) and (resWrite_assign_load_load_fu_854_p1 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (icmp_ln352_fu_857_p2 = ap_const_lv1_0) and (resWrite_assign_load_load_fu_854_p1 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (resWrite_assign_load_load_fu_854_p1 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((icmp_ln354_fu_875_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((icmp_ln354_fu_875_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state5 => 
                if (((icmp_ln366_fu_899_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state5))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                if (((ap_const_boolean_0 = ap_block_state9_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state9))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state9;
                end if;
            when ap_ST_fsm_state10 => 
                if (((regslice_both_wr_port_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state10) and ((icmp_ln395_fu_1476_p2 = ap_const_lv1_1) or (resWrite_assign_load_reg_1649 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif (((icmp_ln395_fu_1476_p2 = ap_const_lv1_0) and (regslice_both_wr_port_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state10) and (resWrite_assign_load_reg_1649 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state11;
                else
                    ap_NS_fsm <= ap_ST_fsm_state10;
                end if;
            when ap_ST_fsm_state11 => 
                if (((ap_const_boolean_0 = ap_block_state11_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state11))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state13;
            when ap_ST_fsm_state13 => 
                if (((icmp_ln332_fu_1548_p2 = ap_const_lv1_1) and (icmp_ln323_fu_1524_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state15;
                elsif (((icmp_ln332_fu_1548_p2 = ap_const_lv1_0) and (icmp_ln323_fu_1524_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state14 => 
                if (((grp_WrDist_fu_738_ap_done = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state14;
                end if;
            when ap_ST_fsm_state15 => 
                if ((not(((ap_const_boolean_1 = ap_block_state15_io) or ((tmp_fu_1553_p3 = ap_const_lv1_1) and (wr_port_TREADY_int_regslice = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state15) and (tmp_fu_1553_p3 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                elsif ((not(((ap_const_boolean_1 = ap_block_state15_io) or ((tmp_fu_1553_p3 = ap_const_lv1_1) and (wr_port_TREADY_int_regslice = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state15) and (tmp_fu_1553_p3 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state16;
                else
                    ap_NS_fsm <= ap_ST_fsm_state15;
                end if;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state17 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state17) and (wr_port_TREADY_int_regslice = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state10;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXX";
        end case;
    end process;
    CSR_E_cast_fu_806_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(CSR_E),64));
    CSR_V_cast_fu_802_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(CSR_V),64));
    W_ref1_fu_972_p3 <= 
        add_ln684_fu_966_p2 when (tmp_6_fu_948_p3(0) = '1') else 
        zext_ln684_fu_962_p1;
    W_ref2_fu_992_p3 <= 
        zext_ln377_fu_937_p1 when (icmp_ln684_fu_980_p2(0) = '1') else 
        sub_ln684_1_fu_986_p2;
    add105_fu_1461_p2 <= std_logic_vector(unsigned(zext_ln306_reg_1639) + unsigned(ap_const_lv22_2));
    add_ln310_fu_1239_p2 <= std_logic_vector(signed(W_ref2_reg_1740) + signed(ap_const_lv7_7F));
    add_ln312_1_fu_1068_p2 <= std_logic_vector(signed(sext_ln312_fu_1064_p1) + signed(sext_ln307_1_fu_1000_p1));
    add_ln312_fu_1042_p2 <= std_logic_vector(unsigned(W_ref1_fu_972_p3) + unsigned(ap_const_lv7_7));
    add_ln318_fu_1498_p2 <= std_logic_vector(unsigned(trunc_ln2_fu_1489_p4) + unsigned(ap_const_lv16_1));
    add_ln334_fu_1561_p2 <= std_logic_vector(unsigned(cnt_oot_reg_675) + unsigned(ap_const_lv7_2));
    add_ln377_fu_942_p2 <= std_logic_vector(unsigned(zext_ln377_fu_937_p1) + unsigned(ap_const_lv7_8));
    add_ln388_fu_1445_p2 <= std_logic_vector(unsigned(trunc_ln3_fu_1436_p4) + unsigned(ap_const_lv20_2));
    add_ln674_fu_1022_p2 <= std_logic_vector(unsigned(zext_ln377_fu_937_p1) + unsigned(ap_const_lv7_49));
    add_ln684_fu_966_p2 <= std_logic_vector(unsigned(zext_ln377_fu_937_p1) + unsigned(ap_const_lv7_4A));
    and_ln312_2_fu_1372_p2 <= (shl_ln312_2_fu_1360_p2 and lshr_ln312_1_fu_1366_p2);
    and_ln312_3_fu_1384_p2 <= (xor_ln312_fu_1378_p2 and p_Result_19_fu_1268_p2);
    and_ln312_4_fu_1390_p2 <= (select_ln312_7_fu_1352_p3 and and_ln312_2_fu_1372_p2);
    and_ln312_fu_1227_p2 <= (shl_ln312_fu_1215_p2 and lshr_ln312_fu_1221_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state10 <= ap_CS_fsm(8);
    ap_CS_fsm_state11 <= ap_CS_fsm(9);
    ap_CS_fsm_state12 <= ap_CS_fsm(10);
    ap_CS_fsm_state13 <= ap_CS_fsm(11);
    ap_CS_fsm_state14 <= ap_CS_fsm(12);
    ap_CS_fsm_state15 <= ap_CS_fsm(13);
    ap_CS_fsm_state16 <= ap_CS_fsm(14);
    ap_CS_fsm_state17 <= ap_CS_fsm(15);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);
    ap_CS_fsm_state6 <= ap_CS_fsm(4);
    ap_CS_fsm_state7 <= ap_CS_fsm(5);
    ap_CS_fsm_state8 <= ap_CS_fsm(6);
    ap_CS_fsm_state9 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state11_on_subcall_done_assign_proc : process(trunc_ln395_reg_1820, grp_gen_access_tuple_fu_686_ap_done, grp_feed_network_fu_696_ap_done)
    begin
                ap_block_state11_on_subcall_done <= (((grp_gen_access_tuple_fu_686_ap_done = ap_const_logic_0) and (trunc_ln395_reg_1820 = ap_const_lv1_1)) or ((grp_gen_access_tuple_fu_686_ap_done = ap_const_logic_0) and (trunc_ln395_reg_1820 = ap_const_lv1_0)) or ((grp_feed_network_fu_696_ap_done = ap_const_logic_0) and (trunc_ln395_reg_1820 = ap_const_lv1_1)) or ((grp_feed_network_fu_696_ap_done = ap_const_logic_0) and (trunc_ln395_reg_1820 = ap_const_lv1_0)));
    end process;


    ap_block_state15_assign_proc : process(tmp_fu_1553_p3, wr_port_TREADY_int_regslice)
    begin
                ap_block_state15 <= ((tmp_fu_1553_p3 = ap_const_lv1_1) and (wr_port_TREADY_int_regslice = ap_const_logic_0));
    end process;


    ap_block_state15_io_assign_proc : process(tmp_fu_1553_p3, wr_port_TREADY_int_regslice)
    begin
                ap_block_state15_io <= ((tmp_fu_1553_p3 = ap_const_lv1_1) and (wr_port_TREADY_int_regslice = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state9_on_subcall_done_assign_proc : process(icmp_ln352_reg_1658, grp_BuffOfst_fu_767_ap_done)
    begin
                ap_block_state9_on_subcall_done <= ((grp_BuffOfst_fu_767_ap_done = ap_const_logic_0) and (icmp_ln352_reg_1658 = ap_const_lv1_1));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(icmp_ln354_fu_875_p2)
    begin
        if ((icmp_ln354_fu_875_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(resWrite_assign_load_reg_1649, ap_CS_fsm_state10, regslice_both_wr_port_V_data_V_U_apdone_blk, icmp_ln395_fu_1476_p2)
    begin
        if (((regslice_both_wr_port_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state10) and ((icmp_ln395_fu_1476_p2 = ap_const_lv1_1) or (resWrite_assign_load_reg_1649 = ap_const_lv1_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(resWrite_assign_load_reg_1649, ap_CS_fsm_state10, regslice_both_wr_port_V_data_V_U_apdone_blk, icmp_ln395_fu_1476_p2)
    begin
        if (((regslice_both_wr_port_V_data_V_U_apdone_blk = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state10) and ((icmp_ln395_fu_1476_p2 = ap_const_lv1_1) or (resWrite_assign_load_reg_1649 = ap_const_lv1_1)))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_rst_n_inv_assign_proc : process(ap_rst_n)
    begin
                ap_rst_n_inv <= not(ap_rst_n);
    end process;


    ap_sig_allocacmp_resWrite_assign_load_assign_proc : process(ap_CS_fsm_state1, resWrite, resWrite_assign_fu_324)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state1)) then 
            ap_sig_allocacmp_resWrite_assign_load <= (0=>resWrite, others=>'-');
        else 
            ap_sig_allocacmp_resWrite_assign_load <= resWrite_assign_fu_324;
        end if; 
    end process;

    empty_154_fu_794_p1 <= root(5 - 1 downto 0);
    empty_155_fu_798_p1 <= N_Vertex(15 - 1 downto 0);
    empty_fu_790_p1 <= root(23 - 1 downto 0);
    glbl_d_cast10_fu_810_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(glbl_d),64));
    grp_BuffOfst_fu_767_ap_start <= grp_BuffOfst_fu_767_ap_start_reg;
    grp_WrDist_fu_738_ap_start <= grp_WrDist_fu_738_ap_start_reg;
    grp_WrDist_fu_738_wr_port_TREADY <= (wr_port_TREADY_int_regslice and ap_CS_fsm_state14);
    grp_feed_network_fu_696_ap_start <= grp_feed_network_fu_696_ap_start_reg;

    grp_feed_network_fu_696_mem_req_buff_q0_assign_proc : process(trunc_ln395_reg_1820, mem_req_buff_V_0_q0, mem_req_buff_V_1_q0, ap_CS_fsm_state11)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
            if ((trunc_ln395_reg_1820 = ap_const_lv1_1)) then 
                grp_feed_network_fu_696_mem_req_buff_q0 <= mem_req_buff_V_0_q0;
            elsif ((trunc_ln395_reg_1820 = ap_const_lv1_0)) then 
                grp_feed_network_fu_696_mem_req_buff_q0 <= mem_req_buff_V_1_q0;
            else 
                grp_feed_network_fu_696_mem_req_buff_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_feed_network_fu_696_mem_req_buff_q0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_feed_network_fu_696_n_mem_tuples_assign_proc : process(trunc_ln395_reg_1820, ap_CS_fsm_state11, n_tuple_0_fu_336, n_tuple_1_fu_340)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
            if ((trunc_ln395_reg_1820 = ap_const_lv1_1)) then 
                grp_feed_network_fu_696_n_mem_tuples <= n_tuple_0_fu_336;
            elsif ((trunc_ln395_reg_1820 = ap_const_lv1_0)) then 
                grp_feed_network_fu_696_n_mem_tuples <= n_tuple_1_fu_340;
            else 
                grp_feed_network_fu_696_n_mem_tuples <= "XXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_feed_network_fu_696_n_mem_tuples <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_785_p1_assign_proc : process(ap_CS_fsm_state5, zext_ln377_fu_937_p1, zext_ln377_reg_1724, ap_CS_fsm_state6)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            grp_fu_785_p1 <= zext_ln377_reg_1724;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
            grp_fu_785_p1 <= zext_ln377_fu_937_p1;
        else 
            grp_fu_785_p1 <= "XXXXXXX";
        end if; 
    end process;

    grp_fu_785_p2 <= std_logic_vector(unsigned(ap_const_lv7_37) - unsigned(grp_fu_785_p1));
    grp_gen_access_tuple_fu_686_ap_start <= grp_gen_access_tuple_fu_686_ap_start_reg;
    i_3_fu_1518_p2 <= std_logic_vector(unsigned(i_reg_664) + unsigned(ap_const_lv16_1));
    i_5_fu_869_p2 <= std_logic_vector(unsigned(i_4_reg_641) + unsigned(ap_const_lv13_1));
    i_7_fu_1466_p2 <= std_logic_vector(unsigned(i_6_reg_652) + unsigned(ap_const_lv22_1));
    icmp_ln312_1_fu_1277_p2 <= "1" when (unsigned(sext_ln307_fu_1096_p1) > unsigned(sext_ln312_1_fu_1274_p1)) else "0";
    icmp_ln312_fu_1058_p2 <= "1" when (unsigned(tmp_8_fu_1048_p4) < unsigned(ap_const_lv4_1)) else "0";
    icmp_ln318_fu_863_p2 <= "1" when (empty_155_fu_798_p1 = ap_const_lv15_0) else "0";
    icmp_ln323_fu_1524_p2 <= "1" when (i_reg_664 = n_wr_iter_reg_1833) else "0";
    icmp_ln332_fu_1548_p2 <= "1" when (peID = ap_const_lv8_0) else "0";
    icmp_ln352_fu_857_p2 <= "1" when (glblIterIdx = ap_const_lv16_0) else "0";
    icmp_ln354_fu_875_p2 <= "1" when (i_4_reg_641 = ap_const_lv13_1000) else "0";
    icmp_ln366_fu_899_p2 <= "1" when (zext_ln366_1_fu_896_p1 = peID) else "0";
    icmp_ln372_1_fu_1080_p2 <= "1" when (rangeOfst_fu_919_p4 = ap_const_lv3_0) else "0";
    icmp_ln372_fu_1074_p2 <= "1" when (rangeOfst_fu_919_p4 = ap_const_lv3_7) else "0";
    icmp_ln395_fu_1476_p2 <= "1" when (i_6_reg_652 = add105_reg_1810) else "0";
    icmp_ln674_fu_1016_p2 <= "0" when (zext_ln674_1_fu_1012_p1 = ap_const_lv26_0) else "1";
    icmp_ln684_fu_980_p2 <= "0" when (rangeOfst_fu_919_p4 = ap_const_lv3_0) else "1";
    idxprom58_fu_881_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_4_reg_641),64));

    launch_recv_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_ln352_reg_1658, ap_CS_fsm_state9, ap_block_state9_on_subcall_done, launch_recv_preg, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_state9_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln352_reg_1658 = ap_const_lv1_1)))) then 
            launch_recv <= ap_const_logic_1;
        elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            launch_recv <= ap_const_logic_0;
        else 
            launch_recv <= launch_recv_preg;
        end if; 
    end process;

    lshr_ln310_fu_1262_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv136_lc_1),to_integer(unsigned('0' & zext_ln310_1_fu_1258_p1(31-1 downto 0)))));
    lshr_ln312_1_fu_1366_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv136_lc_1),to_integer(unsigned('0' & zext_ln312_5_fu_1332_p1(31-1 downto 0)))));
    lshr_ln312_fu_1221_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv72_FFFFFFFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln312_1_fu_1167_p1(31-1 downto 0)))));
    lshr_ln674_1_fu_1133_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv64_FFFFFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln674_3_fu_1124_p1(31-1 downto 0)))));
    lshr_ln674_fu_1127_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv64_FFFFFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln674_2_fu_1120_p1(31-1 downto 0)))));

    mem_req_buff_V_0_ce0_assign_proc : process(trunc_ln395_reg_1820, grp_feed_network_fu_696_mem_req_buff_ce0, ap_CS_fsm_state11)
    begin
        if (((trunc_ln395_reg_1820 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            mem_req_buff_V_0_ce0 <= grp_feed_network_fu_696_mem_req_buff_ce0;
        else 
            mem_req_buff_V_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_req_buff_V_0_ce1_assign_proc : process(trunc_ln395_reg_1820, grp_gen_access_tuple_fu_686_mem_req_buff_ce1, ap_CS_fsm_state11)
    begin
        if (((trunc_ln395_reg_1820 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            mem_req_buff_V_0_ce1 <= grp_gen_access_tuple_fu_686_mem_req_buff_ce1;
        else 
            mem_req_buff_V_0_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    mem_req_buff_V_0_we1_assign_proc : process(trunc_ln395_reg_1820, grp_gen_access_tuple_fu_686_mem_req_buff_we1, ap_CS_fsm_state11)
    begin
        if (((trunc_ln395_reg_1820 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            mem_req_buff_V_0_we1 <= grp_gen_access_tuple_fu_686_mem_req_buff_we1;
        else 
            mem_req_buff_V_0_we1 <= ap_const_logic_0;
        end if; 
    end process;


    mem_req_buff_V_1_ce0_assign_proc : process(trunc_ln395_reg_1820, grp_feed_network_fu_696_mem_req_buff_ce0, ap_CS_fsm_state11)
    begin
        if (((trunc_ln395_reg_1820 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            mem_req_buff_V_1_ce0 <= grp_feed_network_fu_696_mem_req_buff_ce0;
        else 
            mem_req_buff_V_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    mem_req_buff_V_1_ce1_assign_proc : process(trunc_ln395_reg_1820, grp_gen_access_tuple_fu_686_mem_req_buff_ce1, ap_CS_fsm_state11)
    begin
        if (((trunc_ln395_reg_1820 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            mem_req_buff_V_1_ce1 <= grp_gen_access_tuple_fu_686_mem_req_buff_ce1;
        else 
            mem_req_buff_V_1_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    mem_req_buff_V_1_we1_assign_proc : process(trunc_ln395_reg_1820, grp_gen_access_tuple_fu_686_mem_req_buff_we1, ap_CS_fsm_state11)
    begin
        if (((trunc_ln395_reg_1820 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            mem_req_buff_V_1_we1 <= grp_gen_access_tuple_fu_686_mem_req_buff_we1;
        else 
            mem_req_buff_V_1_we1 <= ap_const_logic_0;
        end if; 
    end process;

    n_wr_iter_fu_1504_p3 <= 
        trunc_ln2_fu_1489_p4 when (icmp_ln318_reg_1662(0) = '1') else 
        add_ln318_fu_1498_p2;

    ofst_buff_address1_assign_proc : process(icmp_ln352_reg_1658, ap_CS_fsm_state9, trunc_ln395_reg_1820, grp_gen_access_tuple_fu_686_ofst_buff_address1, grp_BuffOfst_fu_767_ofst_buff_address1, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln352_reg_1658 = ap_const_lv1_1))) then 
            ofst_buff_address1 <= grp_BuffOfst_fu_767_ofst_buff_address1;
        elsif ((((trunc_ln395_reg_1820 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((trunc_ln395_reg_1820 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            ofst_buff_address1 <= grp_gen_access_tuple_fu_686_ofst_buff_address1;
        else 
            ofst_buff_address1 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    ofst_buff_ce0_assign_proc : process(trunc_ln395_reg_1820, grp_gen_access_tuple_fu_686_ofst_buff_ce0, ap_CS_fsm_state11)
    begin
        if ((((trunc_ln395_reg_1820 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((trunc_ln395_reg_1820 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            ofst_buff_ce0 <= grp_gen_access_tuple_fu_686_ofst_buff_ce0;
        else 
            ofst_buff_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    ofst_buff_ce1_assign_proc : process(icmp_ln352_reg_1658, ap_CS_fsm_state9, trunc_ln395_reg_1820, grp_gen_access_tuple_fu_686_ofst_buff_ce1, grp_BuffOfst_fu_767_ofst_buff_ce1, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln352_reg_1658 = ap_const_lv1_1))) then 
            ofst_buff_ce1 <= grp_BuffOfst_fu_767_ofst_buff_ce1;
        elsif ((((trunc_ln395_reg_1820 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((trunc_ln395_reg_1820 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            ofst_buff_ce1 <= grp_gen_access_tuple_fu_686_ofst_buff_ce1;
        else 
            ofst_buff_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    ofst_buff_we1_assign_proc : process(icmp_ln352_reg_1658, ap_CS_fsm_state9, grp_BuffOfst_fu_767_ofst_buff_we1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln352_reg_1658 = ap_const_lv1_1))) then 
            ofst_buff_we1 <= grp_BuffOfst_fu_767_ofst_buff_we1;
        else 
            ofst_buff_we1 <= ap_const_logic_0;
        end if; 
    end process;

    or_ln372_fu_1413_p2 <= (icmp_ln372_reg_1777 or icmp_ln372_1_reg_1782);
    p_Result_16_fu_1108_p2 <= std_logic_vector(shift_right(unsigned(ap_const_lv64_FFFFFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln674_fu_1104_p1(31-1 downto 0)))));
    p_Result_17_fu_1139_p2 <= (lshr_ln674_fu_1127_p2 and lshr_ln674_1_fu_1133_p2);
    p_Result_18_fu_1233_p2 <= (select_ln312_3_fu_1208_p3 and and_ln312_fu_1227_p2);
    p_Result_19_fu_1268_p2 <= (zext_ln310_fu_1248_p1 and lshr_ln310_fu_1262_p2);
    p_Result_20_fu_1396_p2 <= (and_ln312_4_fu_1390_p2 or and_ln312_3_fu_1384_p2);
    p_Result_s_fu_1567_p4 <= ((glblIterIdx & ap_const_lv64_0) & cycle_cnt);
    rangeOfst_fu_919_p4 <= sub_ln368_fu_904_p2(10 downto 8);

    rd_baseAddr_assign_proc : process(CSR_V_cast_reg_1629, CSR_E_cast_reg_1634, ap_CS_fsm_state7, ap_CS_fsm_state9, ap_block_state9_on_subcall_done, rd_baseAddr_preg)
    begin
        if (((ap_const_boolean_0 = ap_block_state9_on_subcall_done) and (ap_const_logic_1 = ap_CS_fsm_state9))) then 
            rd_baseAddr <= CSR_E_cast_reg_1634;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            rd_baseAddr <= CSR_V_cast_reg_1629;
        else 
            rd_baseAddr <= rd_baseAddr_preg;
        end if; 
    end process;

    rd_port_TREADY <= regslice_both_rd_port_V_data_V_U_ack_in;

    rd_port_TREADY_int_regslice_assign_proc : process(icmp_ln352_reg_1658, ap_CS_fsm_state9, trunc_ln395_reg_1820, grp_feed_network_fu_696_rd_port_TREADY, grp_BuffOfst_fu_767_rd_port_TREADY, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln352_reg_1658 = ap_const_lv1_1))) then 
            rd_port_TREADY_int_regslice <= grp_BuffOfst_fu_767_rd_port_TREADY;
        elsif ((((trunc_ln395_reg_1820 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((trunc_ln395_reg_1820 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            rd_port_TREADY_int_regslice <= grp_feed_network_fu_696_rd_port_TREADY;
        else 
            rd_port_TREADY_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    rd_req_V_din_assign_proc : process(icmp_ln352_reg_1658, ap_CS_fsm_state9, trunc_ln395_reg_1820, grp_feed_network_fu_696_rd_req_V_din, grp_BuffOfst_fu_767_rd_req_V_din, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln352_reg_1658 = ap_const_lv1_1))) then 
            rd_req_V_din <= grp_BuffOfst_fu_767_rd_req_V_din;
        elsif ((((trunc_ln395_reg_1820 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((trunc_ln395_reg_1820 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            rd_req_V_din <= grp_feed_network_fu_696_rd_req_V_din;
        else 
            rd_req_V_din <= grp_BuffOfst_fu_767_rd_req_V_din;
        end if; 
    end process;


    rd_req_V_write_assign_proc : process(icmp_ln352_reg_1658, ap_CS_fsm_state9, trunc_ln395_reg_1820, grp_feed_network_fu_696_rd_req_V_write, grp_BuffOfst_fu_767_rd_req_V_write, ap_CS_fsm_state11)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln352_reg_1658 = ap_const_lv1_1))) then 
            rd_req_V_write <= grp_BuffOfst_fu_767_rd_req_V_write;
        elsif ((((trunc_ln395_reg_1820 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((trunc_ln395_reg_1820 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            rd_req_V_write <= grp_feed_network_fu_696_rd_req_V_write;
        else 
            rd_req_V_write <= ap_const_logic_0;
        end if; 
    end process;


    rd_start_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_ln352_reg_1658, ap_CS_fsm_state9, trunc_ln395_reg_1820, grp_feed_network_fu_696_rd_start, grp_feed_network_fu_696_rd_start_ap_vld, grp_BuffOfst_fu_767_rd_start, grp_BuffOfst_fu_767_rd_start_ap_vld, ap_CS_fsm_state11, rd_start_preg)
    begin
        if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            rd_start <= ap_const_logic_0;
        elsif (((grp_BuffOfst_fu_767_rd_start_ap_vld = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state9) and (icmp_ln352_reg_1658 = ap_const_lv1_1))) then 
            rd_start <= grp_BuffOfst_fu_767_rd_start;
        elsif ((((grp_feed_network_fu_696_rd_start_ap_vld = ap_const_logic_1) and (trunc_ln395_reg_1820 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((grp_feed_network_fu_696_rd_start_ap_vld = ap_const_logic_1) and (trunc_ln395_reg_1820 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            rd_start <= grp_feed_network_fu_696_rd_start;
        else 
            rd_start <= rd_start_preg;
        end if; 
    end process;

    resWrite_assign_load_load_fu_854_p1 <= ap_sig_allocacmp_resWrite_assign_load;
    ret_fu_1537_p2 <= std_logic_vector(unsigned(zext_ln1346_fu_1534_p1) + unsigned(ap_const_lv34_3F000));
    rlt_tail_idx_fu_848_p2 <= std_logic_vector(unsigned(zext_ln307_fu_844_p1) + unsigned(ap_const_lv28_1));
    select_ln312_1_fu_1156_p3 <= 
        ap_const_lv7_3F when (icmp_ln312_reg_1762(0) = '1') else 
        sub_ln312_fu_1151_p2;
    select_ln312_2_fu_1191_p3 <= 
        st_fu_1175_p3 when (icmp_ln312_reg_1762(0) = '1') else 
        sf_fu_1183_p3;
    select_ln312_3_fu_1208_p3 <= 
        tmp_9_fu_1198_p4 when (icmp_ln312_reg_1762(0) = '1') else 
        sf_fu_1183_p3;
    select_ln312_4_fu_1296_p3 <= 
        sext_ln312_2_fu_1283_p1 when (icmp_ln312_1_fu_1277_p2(0) = '1') else 
        add_ln312_1_reg_1770;
    select_ln312_5_fu_1303_p3 <= 
        add_ln312_1_reg_1770 when (icmp_ln312_1_fu_1277_p2(0) = '1') else 
        sext_ln312_2_fu_1283_p1;
    select_ln312_6_fu_1310_p3 <= 
        sub_ln312_1_fu_1290_p2 when (icmp_ln312_1_fu_1277_p2(0) = '1') else 
        sext_ln312_2_fu_1283_p1;
    select_ln312_7_fu_1352_p3 <= 
        tmp_12_fu_1342_p4 when (icmp_ln312_1_fu_1277_p2(0) = '1') else 
        shl_ln312_1_fu_1336_p2;
    select_ln312_fu_1145_p3 <= 
        add_ln312_reg_1757 when (icmp_ln312_reg_1762(0) = '1') else 
        ap_const_lv7_8;
    select_ln372_fu_1406_p3 <= 
        ap_const_lv64_FFFFFFFFFFFFFF00 when (icmp_ln372_1_reg_1782(0) = '1') else 
        ap_const_lv64_FFFFFFFFFFFFFF;
    select_ln674_1_fu_1114_p3 <= 
        grp_fu_785_p2 when (icmp_ln674_reg_1747(0) = '1') else 
        add_ln377_reg_1730;
    select_ln674_fu_1028_p3 <= 
        add_ln674_fu_1022_p2 when (icmp_ln674_fu_1016_p2(0) = '1') else 
        grp_fu_785_p2;
        sext_ln307_1_fu_1000_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(W_ref2_fu_992_p3),8));

        sext_ln307_fu_1096_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(W_ref2_reg_1740),32));

        sext_ln310_fu_1244_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln310_fu_1239_p2),8));

        sext_ln312_1_fu_1274_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln312_1_reg_1770),32));

        sext_ln312_2_fu_1283_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(W_ref2_reg_1740),8));

        sext_ln312_fu_1064_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln312_fu_1042_p2),8));

    sf_fu_1183_p3 <= (p_Result_17_fu_1139_p2 & ap_const_lv8_0);
    shl_ln312_1_fu_1336_p2 <= std_logic_vector(shift_left(unsigned(zext_ln312_2_fu_1286_p1),to_integer(unsigned('0' & zext_ln312_3_fu_1324_p1(31-1 downto 0)))));
    shl_ln312_2_fu_1360_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv136_lc_1),to_integer(unsigned('0' & zext_ln312_4_fu_1328_p1(31-1 downto 0)))));
    shl_ln312_fu_1215_p2 <= std_logic_vector(shift_left(unsigned(ap_const_lv72_FFFFFFFFFFFFFFFFFF),to_integer(unsigned('0' & zext_ln312_fu_1163_p1(31-1 downto 0)))));
    shl_ln320_fu_1511_p2 <= std_logic_vector(shift_left(unsigned(n_wr_iter_fu_1504_p3),to_integer(unsigned('0' & ap_const_lv16_6(16-1 downto 0)))));
    shl_ln4_fu_929_p3 <= (rangeOfst_fu_919_p4 & ap_const_lv3_0);
    st_fu_1175_p3 <= (trunc_ln312_fu_1171_p1 & ap_const_lv63_0);
    sub_ln310_fu_1252_p2 <= std_logic_vector(signed(ap_const_lv8_87) - signed(sext_ln310_fu_1244_p1));
    sub_ln312_1_fu_1290_p2 <= std_logic_vector(signed(ap_const_lv8_87) - signed(sext_ln312_2_fu_1283_p1));
    sub_ln312_2_fu_1318_p2 <= std_logic_vector(signed(ap_const_lv8_87) - signed(select_ln312_4_fu_1296_p3));
    sub_ln312_fu_1151_p2 <= std_logic_vector(signed(ap_const_lv7_40) - signed(W_ref1_reg_1735));
    sub_ln368_fu_904_p2 <= std_logic_vector(unsigned(empty_reg_1598) - unsigned(zext_ln366_fu_893_p1));
    sub_ln674_3_fu_1036_p2 <= std_logic_vector(unsigned(ap_const_lv7_3F) - unsigned(select_ln674_fu_1028_p3));
    sub_ln674_fu_1099_p2 <= std_logic_vector(signed(ap_const_lv7_40) - signed(zext_ln377_reg_1724));
    sub_ln684_1_fu_986_p2 <= std_logic_vector(unsigned(ap_const_lv7_2) - unsigned(zext_ln377_fu_937_p1));
    sub_ln684_fu_956_p2 <= std_logic_vector(signed(ap_const_lv6_38) - signed(shl_ln4_fu_929_p3));
    sw_data_0_V_din <= grp_feed_network_fu_696_sw_data_0_V_din;

    sw_data_0_V_write_assign_proc : process(trunc_ln395_reg_1820, grp_feed_network_fu_696_sw_data_0_V_write, ap_CS_fsm_state11)
    begin
        if ((((trunc_ln395_reg_1820 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((trunc_ln395_reg_1820 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            sw_data_0_V_write <= grp_feed_network_fu_696_sw_data_0_V_write;
        else 
            sw_data_0_V_write <= ap_const_logic_0;
        end if; 
    end process;

    sw_data_1_V_din <= grp_feed_network_fu_696_sw_data_1_V_din;

    sw_data_1_V_write_assign_proc : process(trunc_ln395_reg_1820, grp_feed_network_fu_696_sw_data_1_V_write, ap_CS_fsm_state11)
    begin
        if ((((trunc_ln395_reg_1820 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((trunc_ln395_reg_1820 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            sw_data_1_V_write <= grp_feed_network_fu_696_sw_data_1_V_write;
        else 
            sw_data_1_V_write <= ap_const_logic_0;
        end if; 
    end process;

    sw_data_2_V_din <= grp_feed_network_fu_696_sw_data_2_V_din;

    sw_data_2_V_write_assign_proc : process(trunc_ln395_reg_1820, grp_feed_network_fu_696_sw_data_2_V_write, ap_CS_fsm_state11)
    begin
        if ((((trunc_ln395_reg_1820 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((trunc_ln395_reg_1820 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            sw_data_2_V_write <= grp_feed_network_fu_696_sw_data_2_V_write;
        else 
            sw_data_2_V_write <= ap_const_logic_0;
        end if; 
    end process;

    sw_data_3_V_din <= grp_feed_network_fu_696_sw_data_3_V_din;

    sw_data_3_V_write_assign_proc : process(trunc_ln395_reg_1820, grp_feed_network_fu_696_sw_data_3_V_write, ap_CS_fsm_state11)
    begin
        if ((((trunc_ln395_reg_1820 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((trunc_ln395_reg_1820 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            sw_data_3_V_write <= grp_feed_network_fu_696_sw_data_3_V_write;
        else 
            sw_data_3_V_write <= ap_const_logic_0;
        end if; 
    end process;

    
    tmp_12_fu_1342_p4_proc : process(shl_ln312_1_fu_1336_p2)
    variable vlo_cpy : STD_LOGIC_VECTOR(136+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(136+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(136 - 1 downto 0);
    variable tmp_12_fu_1342_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(136 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(136 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(136 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(8 - 1 downto 0) := ap_const_lv32_87(8 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(8 - 1 downto 0) := ap_const_lv32_0(8 - 1 downto 0);
        v0_cpy := shl_ln312_1_fu_1336_p2;
        if (vlo_cpy(8 - 1 downto 0) > vhi_cpy(8 - 1 downto 0)) then
            vhi_cpy(8-1 downto 0) := std_logic_vector(136-1-unsigned(ap_const_lv32_0(8-1 downto 0)));
            vlo_cpy(8-1 downto 0) := std_logic_vector(136-1-unsigned(ap_const_lv32_87(8-1 downto 0)));
            for tmp_12_fu_1342_p4_i in 0 to 136-1 loop
                v0_cpy(tmp_12_fu_1342_p4_i) := shl_ln312_1_fu_1336_p2(136-1-tmp_12_fu_1342_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(8-1 downto 0)))));

        section := (others=>'0');
        section(8-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(8-1 downto 0)) - unsigned(vlo_cpy(8-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(136-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_12_fu_1342_p4 <= resvalue(136-1 downto 0);
    end process;

    tmp_6_fu_948_p3 <= add_ln377_fu_942_p2(6 downto 6);
    tmp_7_fu_1004_p3 <= add_ln377_fu_942_p2(6 downto 6);
    tmp_8_fu_1048_p4 <= add_ln312_fu_1042_p2(6 downto 3);
    
    tmp_9_fu_1198_p4_proc : process(select_ln312_2_fu_1191_p3)
    variable vlo_cpy : STD_LOGIC_VECTOR(72+32 - 1 downto 0);
    variable vhi_cpy : STD_LOGIC_VECTOR(72+32 - 1 downto 0);
    variable v0_cpy : STD_LOGIC_VECTOR(72 - 1 downto 0);
    variable tmp_9_fu_1198_p4_i : integer;
    variable section : STD_LOGIC_VECTOR(72 - 1 downto 0);
    variable tmp_mask : STD_LOGIC_VECTOR(72 - 1 downto 0);
    variable resvalue, res_value, res_mask : STD_LOGIC_VECTOR(72 - 1 downto 0);
    begin
        vlo_cpy := (others => '0');
        vlo_cpy(7 - 1 downto 0) := ap_const_lv32_47(7 - 1 downto 0);
        vhi_cpy := (others => '0');
        vhi_cpy(7 - 1 downto 0) := ap_const_lv32_0(7 - 1 downto 0);
        v0_cpy := select_ln312_2_fu_1191_p3;
        if (vlo_cpy(7 - 1 downto 0) > vhi_cpy(7 - 1 downto 0)) then
            vhi_cpy(7-1 downto 0) := std_logic_vector(72-1-unsigned(ap_const_lv32_0(7-1 downto 0)));
            vlo_cpy(7-1 downto 0) := std_logic_vector(72-1-unsigned(ap_const_lv32_47(7-1 downto 0)));
            for tmp_9_fu_1198_p4_i in 0 to 72-1 loop
                v0_cpy(tmp_9_fu_1198_p4_i) := select_ln312_2_fu_1191_p3(72-1-tmp_9_fu_1198_p4_i);
            end loop;
        end if;
        res_value := std_logic_vector(shift_right(unsigned(v0_cpy), to_integer(unsigned('0' & vlo_cpy(7-1 downto 0)))));

        section := (others=>'0');
        section(7-1 downto 0) := std_logic_vector(unsigned(vhi_cpy(7-1 downto 0)) - unsigned(vlo_cpy(7-1 downto 0)));
        tmp_mask := (others => '1');
        res_mask := std_logic_vector(shift_left(unsigned(tmp_mask),to_integer(unsigned('0' & section(31-1 downto 0)))));
        res_mask := res_mask(72-2 downto 0) & '0';
        resvalue := res_value and not res_mask;
        tmp_9_fu_1198_p4 <= resvalue(72-1 downto 0);
    end process;


    tmp_dist_0_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_state7, trunc_ln395_reg_1820, grp_feed_network_fu_696_tmp_dist_0_address0, grp_WrDist_fu_738_tmp_dist_0_address0, ap_CS_fsm_state11, ap_CS_fsm_state14, idxprom58_fu_881_p1, ap_block_pp0_stage0, zext_ln379_fu_1425_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            tmp_dist_0_address0 <= zext_ln379_fu_1425_p1(12 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            tmp_dist_0_address0 <= idxprom58_fu_881_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            tmp_dist_0_address0 <= grp_WrDist_fu_738_tmp_dist_0_address0;
        elsif ((((trunc_ln395_reg_1820 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((trunc_ln395_reg_1820 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            tmp_dist_0_address0 <= grp_feed_network_fu_696_tmp_dist_0_address0;
        else 
            tmp_dist_0_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    tmp_dist_0_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, ap_CS_fsm_state7, trunc_ln395_reg_1820, ap_enable_reg_pp0_iter1, grp_feed_network_fu_696_tmp_dist_0_ce0, grp_WrDist_fu_738_tmp_dist_0_ce0, ap_CS_fsm_state11, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            tmp_dist_0_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            tmp_dist_0_ce0 <= grp_WrDist_fu_738_tmp_dist_0_ce0;
        elsif ((((trunc_ln395_reg_1820 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((trunc_ln395_reg_1820 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            tmp_dist_0_ce0 <= grp_feed_network_fu_696_tmp_dist_0_ce0;
        else 
            tmp_dist_0_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_dist_0_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, wrVal_reg_1793, ap_CS_fsm_state7, ap_block_pp0_stage0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            tmp_dist_0_d0 <= wrVal_reg_1793;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            tmp_dist_0_d0 <= ap_const_lv64_FFFFFFFFFFFFFFFF;
        else 
            tmp_dist_0_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tmp_dist_0_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, icmp_ln354_fu_875_p2, icmp_ln366_reg_1716, rootBank_reg_1720, ap_CS_fsm_state7)
    begin
        if ((((rootBank_reg_1720 = ap_const_lv3_0) and (icmp_ln366_reg_1716 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((icmp_ln354_fu_875_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            tmp_dist_0_we0 <= ap_const_logic_1;
        else 
            tmp_dist_0_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_dist_1_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_state7, trunc_ln395_reg_1820, grp_feed_network_fu_696_tmp_dist_1_address0, grp_WrDist_fu_738_tmp_dist_1_address0, ap_CS_fsm_state11, ap_CS_fsm_state14, idxprom58_fu_881_p1, ap_block_pp0_stage0, zext_ln379_fu_1425_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            tmp_dist_1_address0 <= zext_ln379_fu_1425_p1(12 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            tmp_dist_1_address0 <= idxprom58_fu_881_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            tmp_dist_1_address0 <= grp_WrDist_fu_738_tmp_dist_1_address0;
        elsif ((((trunc_ln395_reg_1820 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((trunc_ln395_reg_1820 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            tmp_dist_1_address0 <= grp_feed_network_fu_696_tmp_dist_1_address0;
        else 
            tmp_dist_1_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    tmp_dist_1_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, ap_CS_fsm_state7, trunc_ln395_reg_1820, ap_enable_reg_pp0_iter1, grp_feed_network_fu_696_tmp_dist_1_ce0, grp_WrDist_fu_738_tmp_dist_1_ce0, ap_CS_fsm_state11, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            tmp_dist_1_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            tmp_dist_1_ce0 <= grp_WrDist_fu_738_tmp_dist_1_ce0;
        elsif ((((trunc_ln395_reg_1820 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((trunc_ln395_reg_1820 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            tmp_dist_1_ce0 <= grp_feed_network_fu_696_tmp_dist_1_ce0;
        else 
            tmp_dist_1_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_dist_1_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, wrVal_reg_1793, ap_CS_fsm_state7, ap_block_pp0_stage0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            tmp_dist_1_d0 <= wrVal_reg_1793;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            tmp_dist_1_d0 <= ap_const_lv64_FFFFFFFFFFFFFFFF;
        else 
            tmp_dist_1_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tmp_dist_1_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, icmp_ln354_fu_875_p2, icmp_ln366_reg_1716, rootBank_reg_1720, ap_CS_fsm_state7)
    begin
        if ((((rootBank_reg_1720 = ap_const_lv3_1) and (icmp_ln366_reg_1716 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((icmp_ln354_fu_875_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            tmp_dist_1_we0 <= ap_const_logic_1;
        else 
            tmp_dist_1_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_dist_2_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_state7, trunc_ln395_reg_1820, grp_feed_network_fu_696_tmp_dist_2_address0, grp_WrDist_fu_738_tmp_dist_2_address0, ap_CS_fsm_state11, ap_CS_fsm_state14, idxprom58_fu_881_p1, ap_block_pp0_stage0, zext_ln379_fu_1425_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            tmp_dist_2_address0 <= zext_ln379_fu_1425_p1(12 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            tmp_dist_2_address0 <= idxprom58_fu_881_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            tmp_dist_2_address0 <= grp_WrDist_fu_738_tmp_dist_2_address0;
        elsif ((((trunc_ln395_reg_1820 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((trunc_ln395_reg_1820 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            tmp_dist_2_address0 <= grp_feed_network_fu_696_tmp_dist_2_address0;
        else 
            tmp_dist_2_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    tmp_dist_2_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, ap_CS_fsm_state7, trunc_ln395_reg_1820, ap_enable_reg_pp0_iter1, grp_feed_network_fu_696_tmp_dist_2_ce0, grp_WrDist_fu_738_tmp_dist_2_ce0, ap_CS_fsm_state11, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            tmp_dist_2_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            tmp_dist_2_ce0 <= grp_WrDist_fu_738_tmp_dist_2_ce0;
        elsif ((((trunc_ln395_reg_1820 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((trunc_ln395_reg_1820 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            tmp_dist_2_ce0 <= grp_feed_network_fu_696_tmp_dist_2_ce0;
        else 
            tmp_dist_2_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_dist_2_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, wrVal_reg_1793, ap_CS_fsm_state7, ap_block_pp0_stage0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            tmp_dist_2_d0 <= wrVal_reg_1793;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            tmp_dist_2_d0 <= ap_const_lv64_FFFFFFFFFFFFFFFF;
        else 
            tmp_dist_2_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tmp_dist_2_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, icmp_ln354_fu_875_p2, icmp_ln366_reg_1716, rootBank_reg_1720, ap_CS_fsm_state7)
    begin
        if ((((rootBank_reg_1720 = ap_const_lv3_2) and (icmp_ln366_reg_1716 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((icmp_ln354_fu_875_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            tmp_dist_2_we0 <= ap_const_logic_1;
        else 
            tmp_dist_2_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_dist_3_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_state7, trunc_ln395_reg_1820, grp_feed_network_fu_696_tmp_dist_3_address0, grp_WrDist_fu_738_tmp_dist_3_address0, ap_CS_fsm_state11, ap_CS_fsm_state14, idxprom58_fu_881_p1, ap_block_pp0_stage0, zext_ln379_fu_1425_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            tmp_dist_3_address0 <= zext_ln379_fu_1425_p1(12 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            tmp_dist_3_address0 <= idxprom58_fu_881_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            tmp_dist_3_address0 <= grp_WrDist_fu_738_tmp_dist_3_address0;
        elsif ((((trunc_ln395_reg_1820 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((trunc_ln395_reg_1820 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            tmp_dist_3_address0 <= grp_feed_network_fu_696_tmp_dist_3_address0;
        else 
            tmp_dist_3_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    tmp_dist_3_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, ap_CS_fsm_state7, trunc_ln395_reg_1820, ap_enable_reg_pp0_iter1, grp_feed_network_fu_696_tmp_dist_3_ce0, grp_WrDist_fu_738_tmp_dist_3_ce0, ap_CS_fsm_state11, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            tmp_dist_3_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            tmp_dist_3_ce0 <= grp_WrDist_fu_738_tmp_dist_3_ce0;
        elsif ((((trunc_ln395_reg_1820 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((trunc_ln395_reg_1820 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            tmp_dist_3_ce0 <= grp_feed_network_fu_696_tmp_dist_3_ce0;
        else 
            tmp_dist_3_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_dist_3_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, wrVal_reg_1793, ap_CS_fsm_state7, ap_block_pp0_stage0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            tmp_dist_3_d0 <= wrVal_reg_1793;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            tmp_dist_3_d0 <= ap_const_lv64_FFFFFFFFFFFFFFFF;
        else 
            tmp_dist_3_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tmp_dist_3_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, icmp_ln354_fu_875_p2, icmp_ln366_reg_1716, rootBank_reg_1720, ap_CS_fsm_state7)
    begin
        if ((((rootBank_reg_1720 = ap_const_lv3_3) and (icmp_ln366_reg_1716 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((icmp_ln354_fu_875_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            tmp_dist_3_we0 <= ap_const_logic_1;
        else 
            tmp_dist_3_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_dist_4_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_state7, trunc_ln395_reg_1820, grp_feed_network_fu_696_tmp_dist_4_address0, grp_WrDist_fu_738_tmp_dist_4_address0, ap_CS_fsm_state11, ap_CS_fsm_state14, idxprom58_fu_881_p1, ap_block_pp0_stage0, zext_ln379_fu_1425_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            tmp_dist_4_address0 <= zext_ln379_fu_1425_p1(12 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            tmp_dist_4_address0 <= idxprom58_fu_881_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            tmp_dist_4_address0 <= grp_WrDist_fu_738_tmp_dist_4_address0;
        elsif ((((trunc_ln395_reg_1820 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((trunc_ln395_reg_1820 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            tmp_dist_4_address0 <= grp_feed_network_fu_696_tmp_dist_4_address0;
        else 
            tmp_dist_4_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    tmp_dist_4_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, ap_CS_fsm_state7, trunc_ln395_reg_1820, ap_enable_reg_pp0_iter1, grp_feed_network_fu_696_tmp_dist_4_ce0, grp_WrDist_fu_738_tmp_dist_4_ce0, ap_CS_fsm_state11, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            tmp_dist_4_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            tmp_dist_4_ce0 <= grp_WrDist_fu_738_tmp_dist_4_ce0;
        elsif ((((trunc_ln395_reg_1820 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((trunc_ln395_reg_1820 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            tmp_dist_4_ce0 <= grp_feed_network_fu_696_tmp_dist_4_ce0;
        else 
            tmp_dist_4_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_dist_4_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, wrVal_reg_1793, ap_CS_fsm_state7, ap_block_pp0_stage0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            tmp_dist_4_d0 <= wrVal_reg_1793;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            tmp_dist_4_d0 <= ap_const_lv64_FFFFFFFFFFFFFFFF;
        else 
            tmp_dist_4_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tmp_dist_4_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, icmp_ln354_fu_875_p2, icmp_ln366_reg_1716, rootBank_reg_1720, ap_CS_fsm_state7)
    begin
        if ((((rootBank_reg_1720 = ap_const_lv3_4) and (icmp_ln366_reg_1716 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((icmp_ln354_fu_875_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            tmp_dist_4_we0 <= ap_const_logic_1;
        else 
            tmp_dist_4_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_dist_5_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_state7, trunc_ln395_reg_1820, grp_feed_network_fu_696_tmp_dist_5_address0, grp_WrDist_fu_738_tmp_dist_5_address0, ap_CS_fsm_state11, ap_CS_fsm_state14, idxprom58_fu_881_p1, ap_block_pp0_stage0, zext_ln379_fu_1425_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            tmp_dist_5_address0 <= zext_ln379_fu_1425_p1(12 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            tmp_dist_5_address0 <= idxprom58_fu_881_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            tmp_dist_5_address0 <= grp_WrDist_fu_738_tmp_dist_5_address0;
        elsif ((((trunc_ln395_reg_1820 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((trunc_ln395_reg_1820 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            tmp_dist_5_address0 <= grp_feed_network_fu_696_tmp_dist_5_address0;
        else 
            tmp_dist_5_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    tmp_dist_5_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, ap_CS_fsm_state7, trunc_ln395_reg_1820, ap_enable_reg_pp0_iter1, grp_feed_network_fu_696_tmp_dist_5_ce0, grp_WrDist_fu_738_tmp_dist_5_ce0, ap_CS_fsm_state11, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            tmp_dist_5_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            tmp_dist_5_ce0 <= grp_WrDist_fu_738_tmp_dist_5_ce0;
        elsif ((((trunc_ln395_reg_1820 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((trunc_ln395_reg_1820 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            tmp_dist_5_ce0 <= grp_feed_network_fu_696_tmp_dist_5_ce0;
        else 
            tmp_dist_5_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_dist_5_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, wrVal_reg_1793, ap_CS_fsm_state7, ap_block_pp0_stage0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            tmp_dist_5_d0 <= wrVal_reg_1793;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            tmp_dist_5_d0 <= ap_const_lv64_FFFFFFFFFFFFFFFF;
        else 
            tmp_dist_5_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tmp_dist_5_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, icmp_ln354_fu_875_p2, icmp_ln366_reg_1716, rootBank_reg_1720, ap_CS_fsm_state7)
    begin
        if ((((rootBank_reg_1720 = ap_const_lv3_5) and (icmp_ln366_reg_1716 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((icmp_ln354_fu_875_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            tmp_dist_5_we0 <= ap_const_logic_1;
        else 
            tmp_dist_5_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_dist_6_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_state7, trunc_ln395_reg_1820, grp_feed_network_fu_696_tmp_dist_6_address0, grp_WrDist_fu_738_tmp_dist_6_address0, ap_CS_fsm_state11, ap_CS_fsm_state14, idxprom58_fu_881_p1, ap_block_pp0_stage0, zext_ln379_fu_1425_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            tmp_dist_6_address0 <= zext_ln379_fu_1425_p1(12 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            tmp_dist_6_address0 <= idxprom58_fu_881_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            tmp_dist_6_address0 <= grp_WrDist_fu_738_tmp_dist_6_address0;
        elsif ((((trunc_ln395_reg_1820 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((trunc_ln395_reg_1820 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            tmp_dist_6_address0 <= grp_feed_network_fu_696_tmp_dist_6_address0;
        else 
            tmp_dist_6_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    tmp_dist_6_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, ap_CS_fsm_state7, trunc_ln395_reg_1820, ap_enable_reg_pp0_iter1, grp_feed_network_fu_696_tmp_dist_6_ce0, grp_WrDist_fu_738_tmp_dist_6_ce0, ap_CS_fsm_state11, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            tmp_dist_6_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            tmp_dist_6_ce0 <= grp_WrDist_fu_738_tmp_dist_6_ce0;
        elsif ((((trunc_ln395_reg_1820 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((trunc_ln395_reg_1820 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            tmp_dist_6_ce0 <= grp_feed_network_fu_696_tmp_dist_6_ce0;
        else 
            tmp_dist_6_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_dist_6_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, wrVal_reg_1793, ap_CS_fsm_state7, ap_block_pp0_stage0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            tmp_dist_6_d0 <= wrVal_reg_1793;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            tmp_dist_6_d0 <= ap_const_lv64_FFFFFFFFFFFFFFFF;
        else 
            tmp_dist_6_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tmp_dist_6_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, icmp_ln354_fu_875_p2, icmp_ln366_reg_1716, rootBank_reg_1720, ap_CS_fsm_state7)
    begin
        if ((((rootBank_reg_1720 = ap_const_lv3_6) and (icmp_ln366_reg_1716 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((icmp_ln354_fu_875_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            tmp_dist_6_we0 <= ap_const_logic_1;
        else 
            tmp_dist_6_we0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_dist_7_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_state7, trunc_ln395_reg_1820, grp_feed_network_fu_696_tmp_dist_7_address0, grp_WrDist_fu_738_tmp_dist_7_address0, ap_CS_fsm_state11, ap_CS_fsm_state14, idxprom58_fu_881_p1, ap_block_pp0_stage0, zext_ln379_fu_1425_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            tmp_dist_7_address0 <= zext_ln379_fu_1425_p1(12 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            tmp_dist_7_address0 <= idxprom58_fu_881_p1(12 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            tmp_dist_7_address0 <= grp_WrDist_fu_738_tmp_dist_7_address0;
        elsif ((((trunc_ln395_reg_1820 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((trunc_ln395_reg_1820 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            tmp_dist_7_address0 <= grp_feed_network_fu_696_tmp_dist_7_address0;
        else 
            tmp_dist_7_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    tmp_dist_7_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, ap_CS_fsm_state7, trunc_ln395_reg_1820, ap_enable_reg_pp0_iter1, grp_feed_network_fu_696_tmp_dist_7_ce0, grp_WrDist_fu_738_tmp_dist_7_ce0, ap_CS_fsm_state11, ap_CS_fsm_state14)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) or ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            tmp_dist_7_ce0 <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            tmp_dist_7_ce0 <= grp_WrDist_fu_738_tmp_dist_7_ce0;
        elsif ((((trunc_ln395_reg_1820 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state11)) or ((trunc_ln395_reg_1820 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            tmp_dist_7_ce0 <= grp_feed_network_fu_696_tmp_dist_7_ce0;
        else 
            tmp_dist_7_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_dist_7_d0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, wrVal_reg_1793, ap_CS_fsm_state7, ap_block_pp0_stage0)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state7)) then 
            tmp_dist_7_d0 <= wrVal_reg_1793;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            tmp_dist_7_d0 <= ap_const_lv64_FFFFFFFFFFFFFFFF;
        else 
            tmp_dist_7_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tmp_dist_7_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_block_pp0_stage0_11001, icmp_ln354_fu_875_p2, icmp_ln366_reg_1716, rootBank_reg_1720, ap_CS_fsm_state7)
    begin
        if ((((rootBank_reg_1720 = ap_const_lv3_7) and (icmp_ln366_reg_1716 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7)) or ((icmp_ln354_fu_875_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then 
            tmp_dist_7_we0 <= ap_const_logic_1;
        else 
            tmp_dist_7_we0 <= ap_const_logic_0;
        end if; 
    end process;

    tmp_fu_1553_p3 <= cnt_oot_reg_675(6 downto 6);
    trunc_ln1_fu_834_p4 <= N_Vertex(31 downto 5);
    trunc_ln2_fu_1489_p4 <= N_Vertex(30 downto 15);
    trunc_ln312_fu_1171_p1 <= p_Result_17_fu_1139_p2(9 - 1 downto 0);
    trunc_ln325_fu_1529_p1 <= i_reg_664(8 - 1 downto 0);
    trunc_ln371_fu_1402_p1 <= p_Result_20_fu_1396_p2(64 - 1 downto 0);
    trunc_ln395_fu_1472_p1 <= i_6_reg_652(1 - 1 downto 0);
    trunc_ln3_fu_1436_p4 <= N_Vertex(26 downto 7);
    trunc_ln_fu_820_p4 <= N_Vertex(31 downto 11);
    wrVal_fu_1417_p3 <= 
        select_ln372_fu_1406_p3 when (or_ln372_fu_1413_p2(0) = '1') else 
        trunc_ln371_fu_1402_p1;

    wr_baseAddr_assign_proc : process(ap_start, ap_CS_fsm_state1, resWrite_assign_load_load_fu_854_p1, ap_CS_fsm_state13, icmp_ln323_fu_1524_p2, glbl_d_cast10_fu_810_p1, wr_baseAddr_preg, zext_ln534_fu_1543_p1)
    begin
        if (((icmp_ln323_fu_1524_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            wr_baseAddr <= zext_ln534_fu_1543_p1;
        elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1) and (resWrite_assign_load_load_fu_854_p1 = ap_const_lv1_1))) then 
            wr_baseAddr <= glbl_d_cast10_fu_810_p1;
        else 
            wr_baseAddr <= wr_baseAddr_preg;
        end if; 
    end process;


    wr_len_assign_proc : process(ap_CS_fsm_state12, ap_CS_fsm_state13, icmp_ln323_fu_1524_p2, shl_ln320_fu_1511_p2, wr_len_preg)
    begin
        if (((icmp_ln323_fu_1524_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13))) then 
            wr_len <= ap_const_lv16_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
            wr_len <= shl_ln320_fu_1511_p2;
        else 
            wr_len <= wr_len_preg;
        end if; 
    end process;


    wr_port_TDATA_blk_n_assign_proc : process(ap_CS_fsm_state15, tmp_fu_1553_p3, ap_CS_fsm_state17, wr_port_TREADY_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) or ((ap_const_logic_1 = ap_CS_fsm_state15) and (tmp_fu_1553_p3 = ap_const_lv1_1)))) then 
            wr_port_TDATA_blk_n <= wr_port_TREADY_int_regslice;
        else 
            wr_port_TDATA_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    wr_port_TDATA_int_regslice_assign_proc : process(ap_CS_fsm_state15, tmp_fu_1553_p3, zext_ln312_6_fu_1576_p1, grp_WrDist_fu_738_wr_port_TDATA, grp_WrDist_fu_738_wr_port_TVALID, ap_CS_fsm_state14, wr_port_TREADY_int_regslice)
    begin
        if ((not(((tmp_fu_1553_p3 = ap_const_lv1_1) and (wr_port_TREADY_int_regslice = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state15) and (tmp_fu_1553_p3 = ap_const_lv1_1))) then 
            wr_port_TDATA_int_regslice <= zext_ln312_6_fu_1576_p1;
        elsif (((grp_WrDist_fu_738_wr_port_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            wr_port_TDATA_int_regslice <= grp_WrDist_fu_738_wr_port_TDATA;
        else 
            wr_port_TDATA_int_regslice <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    wr_port_TKEEP_int_regslice_assign_proc : process(ap_CS_fsm_state15, tmp_fu_1553_p3, grp_WrDist_fu_738_wr_port_TVALID, grp_WrDist_fu_738_wr_port_TKEEP, ap_CS_fsm_state14, wr_port_TREADY_int_regslice)
    begin
        if ((not(((tmp_fu_1553_p3 = ap_const_lv1_1) and (wr_port_TREADY_int_regslice = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state15) and (tmp_fu_1553_p3 = ap_const_lv1_1))) then 
            wr_port_TKEEP_int_regslice <= ap_const_lv16_0;
        elsif (((grp_WrDist_fu_738_wr_port_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            wr_port_TKEEP_int_regslice <= grp_WrDist_fu_738_wr_port_TKEEP;
        else 
            wr_port_TKEEP_int_regslice <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    wr_port_TLAST_int_regslice_assign_proc : process(ap_CS_fsm_state15, tmp_fu_1553_p3, grp_WrDist_fu_738_wr_port_TVALID, grp_WrDist_fu_738_wr_port_TLAST, ap_CS_fsm_state14, wr_port_TREADY_int_regslice)
    begin
        if ((not(((tmp_fu_1553_p3 = ap_const_lv1_1) and (wr_port_TREADY_int_regslice = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state15) and (tmp_fu_1553_p3 = ap_const_lv1_1))) then 
            wr_port_TLAST_int_regslice <= ap_const_lv1_0;
        elsif (((grp_WrDist_fu_738_wr_port_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            wr_port_TLAST_int_regslice <= grp_WrDist_fu_738_wr_port_TLAST;
        else 
            wr_port_TLAST_int_regslice <= "X";
        end if; 
    end process;


    wr_port_TSTRB_int_regslice_assign_proc : process(ap_CS_fsm_state15, tmp_fu_1553_p3, grp_WrDist_fu_738_wr_port_TVALID, grp_WrDist_fu_738_wr_port_TSTRB, ap_CS_fsm_state14, wr_port_TREADY_int_regslice)
    begin
        if ((not(((tmp_fu_1553_p3 = ap_const_lv1_1) and (wr_port_TREADY_int_regslice = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state15) and (tmp_fu_1553_p3 = ap_const_lv1_1))) then 
            wr_port_TSTRB_int_regslice <= ap_const_lv16_0;
        elsif (((grp_WrDist_fu_738_wr_port_TVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state14))) then 
            wr_port_TSTRB_int_regslice <= grp_WrDist_fu_738_wr_port_TSTRB;
        else 
            wr_port_TSTRB_int_regslice <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;

    wr_port_TVALID <= regslice_both_wr_port_V_data_V_U_vld_out;

    wr_port_TVALID_int_regslice_assign_proc : process(ap_CS_fsm_state15, tmp_fu_1553_p3, ap_block_state15_io, grp_WrDist_fu_738_wr_port_TVALID, ap_CS_fsm_state14, wr_port_TREADY_int_regslice)
    begin
        if ((not(((ap_const_boolean_1 = ap_block_state15_io) or ((tmp_fu_1553_p3 = ap_const_lv1_1) and (wr_port_TREADY_int_regslice = ap_const_logic_0)))) and (ap_const_logic_1 = ap_CS_fsm_state15) and (tmp_fu_1553_p3 = ap_const_lv1_1))) then 
            wr_port_TVALID_int_regslice <= ap_const_logic_1;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state14)) then 
            wr_port_TVALID_int_regslice <= grp_WrDist_fu_738_wr_port_TVALID;
        else 
            wr_port_TVALID_int_regslice <= ap_const_logic_0;
        end if; 
    end process;


    wr_start_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state17, ap_CS_fsm_state12, ap_CS_fsm_state13, icmp_ln323_fu_1524_p2, wr_start_preg, wr_port_TREADY_int_regslice)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or ((ap_const_logic_1 = ap_CS_fsm_state17) and (wr_port_TREADY_int_regslice = ap_const_logic_1)))) then 
            wr_start <= ap_const_logic_1;
        elsif ((((icmp_ln323_fu_1524_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state13)) or ((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            wr_start <= ap_const_logic_0;
        else 
            wr_start <= wr_start_preg;
        end if; 
    end process;

    xor_ln312_fu_1378_p2 <= (ap_const_lv136_lc_2 xor and_ln312_2_fu_1372_p2);
    zext_ln1346_fu_1534_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(glbl_d),34));
    zext_ln306_fu_830_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln_fu_820_p4),22));
    zext_ln307_fu_844_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln1_fu_834_p4),28));
    zext_ln310_1_fu_1258_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln310_fu_1252_p2),136));
    zext_ln310_fu_1248_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_16_fu_1108_p2),136));
    zext_ln312_1_fu_1167_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln312_1_fu_1156_p3),72));
    zext_ln312_2_fu_1286_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_18_fu_1233_p2),136));
    zext_ln312_3_fu_1324_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln312_6_fu_1310_p3),136));
    zext_ln312_4_fu_1328_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln312_5_fu_1303_p3),136));
    zext_ln312_5_fu_1332_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln312_2_fu_1318_p2),136));
    zext_ln312_6_fu_1576_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_s_fu_1567_p4),128));
    zext_ln312_fu_1163_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln312_fu_1145_p3),72));
    zext_ln366_1_fu_896_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_154_reg_1603),8));
    zext_ln366_fu_893_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(empty_154_reg_1603),23));
    zext_ln377_fu_937_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln4_fu_929_p3),7));
    zext_ln379_fu_1425_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_reg_1788),64));
    zext_ln534_fu_1543_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_fu_1537_p2),64));
    zext_ln674_1_fu_1012_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_7_fu_1004_p3),26));
    zext_ln674_2_fu_1120_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln674_1_fu_1114_p3),64));
    zext_ln674_3_fu_1124_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln674_3_reg_1752),64));
    zext_ln674_fu_1104_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln674_fu_1099_p2),64));
    zext_ln684_fu_962_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln684_fu_956_p2),7));
end behav;
