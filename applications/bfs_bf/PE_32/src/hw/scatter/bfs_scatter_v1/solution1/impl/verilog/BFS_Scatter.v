// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="BFS_Scatter_BFS_Scatter,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu280-fsvh2892-2L-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=3.630750,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=8,HLS_SYN_DSP=0,HLS_SYN_FF=2441,HLS_SYN_LUT=9189,HLS_VERSION=2020_2}" *)

module BFS_Scatter (
        ap_clk,
        ap_rst_n,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        CSR_V,
        CSR_E,
        glbl_d,
        rd_baseAddr,
        wr_baseAddr,
        rd_port_TDATA,
        rd_port_TVALID,
        rd_port_TREADY,
        rd_port_TKEEP,
        rd_port_TSTRB,
        rd_port_TLAST,
        wr_port_TDATA,
        wr_port_TVALID,
        wr_port_TREADY,
        wr_port_TKEEP,
        wr_port_TSTRB,
        wr_port_TLAST,
        rd_req_V_din,
        rd_req_V_full_n,
        rd_req_V_write,
        wr_len,
        rd_start,
        wr_start,
        N_Vertex,
        root,
        peID,
        sw_data_0_V_din,
        sw_data_0_V_full_n,
        sw_data_0_V_write,
        sw_data_1_V_din,
        sw_data_1_V_full_n,
        sw_data_1_V_write,
        sw_data_2_V_din,
        sw_data_2_V_full_n,
        sw_data_2_V_write,
        sw_data_3_V_din,
        sw_data_3_V_full_n,
        sw_data_3_V_write,
        glblIterIdx,
        cycle_cnt,
        launch_recv,
        resWrite,
        tmp_dist_0_address0,
        tmp_dist_0_ce0,
        tmp_dist_0_we0,
        tmp_dist_0_d0,
        tmp_dist_0_q0,
        tmp_dist_1_address0,
        tmp_dist_1_ce0,
        tmp_dist_1_we0,
        tmp_dist_1_d0,
        tmp_dist_1_q0,
        tmp_dist_2_address0,
        tmp_dist_2_ce0,
        tmp_dist_2_we0,
        tmp_dist_2_d0,
        tmp_dist_2_q0,
        tmp_dist_3_address0,
        tmp_dist_3_ce0,
        tmp_dist_3_we0,
        tmp_dist_3_d0,
        tmp_dist_3_q0,
        tmp_dist_4_address0,
        tmp_dist_4_ce0,
        tmp_dist_4_we0,
        tmp_dist_4_d0,
        tmp_dist_4_q0,
        tmp_dist_5_address0,
        tmp_dist_5_ce0,
        tmp_dist_5_we0,
        tmp_dist_5_d0,
        tmp_dist_5_q0,
        tmp_dist_6_address0,
        tmp_dist_6_ce0,
        tmp_dist_6_we0,
        tmp_dist_6_d0,
        tmp_dist_6_q0,
        tmp_dist_7_address0,
        tmp_dist_7_ce0,
        tmp_dist_7_we0,
        tmp_dist_7_d0,
        tmp_dist_7_q0
);

parameter    ap_ST_fsm_state1 = 16'd1;
parameter    ap_ST_fsm_state2 = 16'd2;
parameter    ap_ST_fsm_pp0_stage0 = 16'd4;
parameter    ap_ST_fsm_state5 = 16'd8;
parameter    ap_ST_fsm_state6 = 16'd16;
parameter    ap_ST_fsm_state7 = 16'd32;
parameter    ap_ST_fsm_state8 = 16'd64;
parameter    ap_ST_fsm_state9 = 16'd128;
parameter    ap_ST_fsm_state10 = 16'd256;
parameter    ap_ST_fsm_state11 = 16'd512;
parameter    ap_ST_fsm_state12 = 16'd1024;
parameter    ap_ST_fsm_state13 = 16'd2048;
parameter    ap_ST_fsm_state14 = 16'd4096;
parameter    ap_ST_fsm_state15 = 16'd8192;
parameter    ap_ST_fsm_state16 = 16'd16384;
parameter    ap_ST_fsm_state17 = 16'd32768;

input   ap_clk;
input   ap_rst_n;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [32:0] CSR_V;
input  [32:0] CSR_E;
input  [32:0] glbl_d;
output  [63:0] rd_baseAddr;
output  [63:0] wr_baseAddr;
input  [127:0] rd_port_TDATA;
input   rd_port_TVALID;
output   rd_port_TREADY;
input  [15:0] rd_port_TKEEP;
input  [15:0] rd_port_TSTRB;
input  [0:0] rd_port_TLAST;
output  [127:0] wr_port_TDATA;
output   wr_port_TVALID;
input   wr_port_TREADY;
output  [15:0] wr_port_TKEEP;
output  [15:0] wr_port_TSTRB;
output  [0:0] wr_port_TLAST;
output  [31:0] rd_req_V_din;
input   rd_req_V_full_n;
output   rd_req_V_write;
output  [15:0] wr_len;
output   rd_start;
output   wr_start;
input  [31:0] N_Vertex;
input  [31:0] root;
input  [7:0] peID;
output  [31:0] sw_data_0_V_din;
input   sw_data_0_V_full_n;
output   sw_data_0_V_write;
output  [31:0] sw_data_1_V_din;
input   sw_data_1_V_full_n;
output   sw_data_1_V_write;
output  [31:0] sw_data_2_V_din;
input   sw_data_2_V_full_n;
output   sw_data_2_V_write;
output  [31:0] sw_data_3_V_din;
input   sw_data_3_V_full_n;
output   sw_data_3_V_write;
input  [15:0] glblIterIdx;
input  [31:0] cycle_cnt;
output   launch_recv;
input   resWrite;
output  [11:0] tmp_dist_0_address0;
output   tmp_dist_0_ce0;
output   tmp_dist_0_we0;
output  [63:0] tmp_dist_0_d0;
input  [63:0] tmp_dist_0_q0;
output  [11:0] tmp_dist_1_address0;
output   tmp_dist_1_ce0;
output   tmp_dist_1_we0;
output  [63:0] tmp_dist_1_d0;
input  [63:0] tmp_dist_1_q0;
output  [11:0] tmp_dist_2_address0;
output   tmp_dist_2_ce0;
output   tmp_dist_2_we0;
output  [63:0] tmp_dist_2_d0;
input  [63:0] tmp_dist_2_q0;
output  [11:0] tmp_dist_3_address0;
output   tmp_dist_3_ce0;
output   tmp_dist_3_we0;
output  [63:0] tmp_dist_3_d0;
input  [63:0] tmp_dist_3_q0;
output  [11:0] tmp_dist_4_address0;
output   tmp_dist_4_ce0;
output   tmp_dist_4_we0;
output  [63:0] tmp_dist_4_d0;
input  [63:0] tmp_dist_4_q0;
output  [11:0] tmp_dist_5_address0;
output   tmp_dist_5_ce0;
output   tmp_dist_5_we0;
output  [63:0] tmp_dist_5_d0;
input  [63:0] tmp_dist_5_q0;
output  [11:0] tmp_dist_6_address0;
output   tmp_dist_6_ce0;
output   tmp_dist_6_we0;
output  [63:0] tmp_dist_6_d0;
input  [63:0] tmp_dist_6_q0;
output  [11:0] tmp_dist_7_address0;
output   tmp_dist_7_ce0;
output   tmp_dist_7_we0;
output  [63:0] tmp_dist_7_d0;
input  [63:0] tmp_dist_7_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[63:0] rd_baseAddr;
reg[63:0] wr_baseAddr;
reg[31:0] rd_req_V_din;
reg rd_req_V_write;
reg[15:0] wr_len;
reg rd_start;
reg wr_start;
reg sw_data_0_V_write;
reg sw_data_1_V_write;
reg sw_data_2_V_write;
reg sw_data_3_V_write;
reg launch_recv;
reg[11:0] tmp_dist_0_address0;
reg tmp_dist_0_ce0;
reg tmp_dist_0_we0;
reg[63:0] tmp_dist_0_d0;
reg[11:0] tmp_dist_1_address0;
reg tmp_dist_1_ce0;
reg tmp_dist_1_we0;
reg[63:0] tmp_dist_1_d0;
reg[11:0] tmp_dist_2_address0;
reg tmp_dist_2_ce0;
reg tmp_dist_2_we0;
reg[63:0] tmp_dist_2_d0;
reg[11:0] tmp_dist_3_address0;
reg tmp_dist_3_ce0;
reg tmp_dist_3_we0;
reg[63:0] tmp_dist_3_d0;
reg[11:0] tmp_dist_4_address0;
reg tmp_dist_4_ce0;
reg tmp_dist_4_we0;
reg[63:0] tmp_dist_4_d0;
reg[11:0] tmp_dist_5_address0;
reg tmp_dist_5_ce0;
reg tmp_dist_5_we0;
reg[63:0] tmp_dist_5_d0;
reg[11:0] tmp_dist_6_address0;
reg tmp_dist_6_ce0;
reg tmp_dist_6_we0;
reg[63:0] tmp_dist_6_d0;
reg[11:0] tmp_dist_7_address0;
reg tmp_dist_7_ce0;
reg tmp_dist_7_we0;
reg[63:0] tmp_dist_7_d0;

 reg    ap_rst_n_inv;
(* fsm_encoding = "none" *) reg   [15:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    wr_port_TDATA_blk_n;
wire    ap_CS_fsm_state15;
wire   [0:0] tmp_fu_1553_p3;
wire    ap_CS_fsm_state17;
reg   [12:0] i_4_reg_641;
wire   [22:0] empty_fu_790_p1;
reg   [22:0] empty_reg_1598;
wire   [4:0] empty_154_fu_794_p1;
reg   [4:0] empty_154_reg_1603;
wire   [63:0] CSR_V_cast_fu_802_p1;
reg   [63:0] CSR_V_cast_reg_1629;
wire   [63:0] CSR_E_cast_fu_806_p1;
reg   [63:0] CSR_E_cast_reg_1634;
wire   [21:0] zext_ln306_fu_830_p1;
reg   [21:0] zext_ln306_reg_1639;
wire   [27:0] rlt_tail_idx_fu_848_p2;
reg   [27:0] rlt_tail_idx_reg_1644;
wire   [0:0] resWrite_assign_load_load_fu_854_p1;
reg   [0:0] resWrite_assign_load_reg_1649;
wire   [0:0] icmp_ln352_fu_857_p2;
reg   [0:0] icmp_ln352_reg_1658;
wire   [0:0] icmp_ln318_fu_863_p2;
reg   [0:0] icmp_ln318_reg_1662;
wire   [12:0] i_5_fu_869_p2;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln354_fu_875_p2;
wire   [0:0] icmp_ln366_fu_899_p2;
reg   [0:0] icmp_ln366_reg_1716;
wire    ap_CS_fsm_state5;
reg   [2:0] rootBank_reg_1720;
wire   [6:0] zext_ln377_fu_937_p1;
reg   [6:0] zext_ln377_reg_1724;
wire   [6:0] add_ln377_fu_942_p2;
reg   [6:0] add_ln377_reg_1730;
wire   [6:0] W_ref1_fu_972_p3;
reg   [6:0] W_ref1_reg_1735;
wire  signed [6:0] W_ref2_fu_992_p3;
reg  signed [6:0] W_ref2_reg_1740;
wire   [0:0] icmp_ln674_fu_1016_p2;
reg   [0:0] icmp_ln674_reg_1747;
wire   [6:0] sub_ln674_3_fu_1036_p2;
reg   [6:0] sub_ln674_3_reg_1752;
wire  signed [6:0] add_ln312_fu_1042_p2;
reg  signed [6:0] add_ln312_reg_1757;
wire   [0:0] icmp_ln312_fu_1058_p2;
reg   [0:0] icmp_ln312_reg_1762;
wire  signed [7:0] add_ln312_1_fu_1068_p2;
reg  signed [7:0] add_ln312_1_reg_1770;
wire   [0:0] icmp_ln372_fu_1074_p2;
reg   [0:0] icmp_ln372_reg_1777;
wire   [0:0] icmp_ln372_1_fu_1080_p2;
reg   [0:0] icmp_ln372_1_reg_1782;
reg   [11:0] lshr_ln_reg_1788;
wire   [63:0] wrVal_fu_1417_p3;
reg   [63:0] wrVal_reg_1793;
wire    ap_CS_fsm_state6;
wire   [19:0] add_ln388_fu_1445_p2;
reg   [19:0] add_ln388_reg_1805;
wire    ap_CS_fsm_state7;
wire   [21:0] add105_fu_1461_p2;
reg   [21:0] add105_reg_1810;
wire    ap_CS_fsm_state9;
wire   [21:0] i_7_fu_1466_p2;
reg   [21:0] i_7_reg_1815;
wire    ap_CS_fsm_state10;
wire    regslice_both_wr_port_V_data_V_U_apdone_blk;
wire   [0:0] trunc_ln395_fu_1472_p1;
reg   [0:0] trunc_ln395_reg_1820;
wire   [15:0] n_wr_iter_fu_1504_p3;
reg   [15:0] n_wr_iter_reg_1833;
wire    ap_CS_fsm_state12;
wire   [15:0] i_3_fu_1518_p2;
reg   [15:0] i_3_reg_1838;
wire    ap_CS_fsm_state13;
wire   [7:0] trunc_ln325_fu_1529_p1;
reg   [7:0] trunc_ln325_reg_1846;
wire   [0:0] icmp_ln323_fu_1524_p2;
wire   [6:0] add_ln334_fu_1561_p2;
reg   [6:0] add_ln334_reg_1857;
reg    ap_block_state15;
reg    ap_block_state15_io;
wire   [127:0] zext_ln312_6_fu_1576_p1;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter1;
reg    ofst_buff_ce0;
wire   [63:0] ofst_buff_q0;
reg   [15:0] ofst_buff_address1;
reg    ofst_buff_ce1;
reg    ofst_buff_we1;
wire   [63:0] ofst_buff_q1;
reg    mem_req_buff_V_0_ce0;
wire   [31:0] mem_req_buff_V_0_q0;
reg    mem_req_buff_V_0_ce1;
reg    mem_req_buff_V_0_we1;
reg    mem_req_buff_V_1_ce0;
wire   [31:0] mem_req_buff_V_1_q0;
reg    mem_req_buff_V_1_ce1;
reg    mem_req_buff_V_1_we1;
wire    grp_gen_access_tuple_fu_686_ap_start;
wire    grp_gen_access_tuple_fu_686_ap_done;
wire    grp_gen_access_tuple_fu_686_ap_idle;
wire    grp_gen_access_tuple_fu_686_ap_ready;
wire   [15:0] grp_gen_access_tuple_fu_686_ofst_buff_address0;
wire    grp_gen_access_tuple_fu_686_ofst_buff_ce0;
wire   [15:0] grp_gen_access_tuple_fu_686_ofst_buff_address1;
wire    grp_gen_access_tuple_fu_686_ofst_buff_ce1;
wire   [15:0] grp_gen_access_tuple_fu_686_n_mem_tuples;
wire    grp_gen_access_tuple_fu_686_n_mem_tuples_ap_vld;
wire   [10:0] grp_gen_access_tuple_fu_686_mem_req_buff_address1;
wire    grp_gen_access_tuple_fu_686_mem_req_buff_ce1;
wire    grp_gen_access_tuple_fu_686_mem_req_buff_we1;
wire   [31:0] grp_gen_access_tuple_fu_686_mem_req_buff_d1;
wire    grp_feed_network_fu_696_ap_start;
wire    grp_feed_network_fu_696_ap_done;
wire    grp_feed_network_fu_696_ap_idle;
wire    grp_feed_network_fu_696_ap_ready;
wire   [31:0] grp_feed_network_fu_696_rd_req_V_din;
wire    grp_feed_network_fu_696_rd_req_V_write;
wire    grp_feed_network_fu_696_rd_start;
wire    grp_feed_network_fu_696_rd_start_ap_vld;
wire   [11:0] grp_feed_network_fu_696_tmp_dist_0_address0;
wire    grp_feed_network_fu_696_tmp_dist_0_ce0;
wire   [11:0] grp_feed_network_fu_696_tmp_dist_1_address0;
wire    grp_feed_network_fu_696_tmp_dist_1_ce0;
wire   [11:0] grp_feed_network_fu_696_tmp_dist_2_address0;
wire    grp_feed_network_fu_696_tmp_dist_2_ce0;
wire   [11:0] grp_feed_network_fu_696_tmp_dist_3_address0;
wire    grp_feed_network_fu_696_tmp_dist_3_ce0;
wire   [11:0] grp_feed_network_fu_696_tmp_dist_4_address0;
wire    grp_feed_network_fu_696_tmp_dist_4_ce0;
wire   [11:0] grp_feed_network_fu_696_tmp_dist_5_address0;
wire    grp_feed_network_fu_696_tmp_dist_5_ce0;
wire   [11:0] grp_feed_network_fu_696_tmp_dist_6_address0;
wire    grp_feed_network_fu_696_tmp_dist_6_ce0;
wire   [11:0] grp_feed_network_fu_696_tmp_dist_7_address0;
wire    grp_feed_network_fu_696_tmp_dist_7_ce0;
wire   [31:0] grp_feed_network_fu_696_sw_data_0_V_din;
wire    grp_feed_network_fu_696_sw_data_0_V_write;
wire   [31:0] grp_feed_network_fu_696_sw_data_1_V_din;
wire    grp_feed_network_fu_696_sw_data_1_V_write;
wire   [31:0] grp_feed_network_fu_696_sw_data_2_V_din;
wire    grp_feed_network_fu_696_sw_data_2_V_write;
wire   [31:0] grp_feed_network_fu_696_sw_data_3_V_din;
wire    grp_feed_network_fu_696_sw_data_3_V_write;
wire    grp_feed_network_fu_696_rd_port_TREADY;
reg   [15:0] grp_feed_network_fu_696_n_mem_tuples;
wire   [10:0] grp_feed_network_fu_696_mem_req_buff_address0;
wire    grp_feed_network_fu_696_mem_req_buff_ce0;
reg   [31:0] grp_feed_network_fu_696_mem_req_buff_q0;
wire    grp_WrDist_fu_738_ap_start;
wire    grp_WrDist_fu_738_ap_done;
wire    grp_WrDist_fu_738_ap_idle;
wire    grp_WrDist_fu_738_ap_ready;
wire   [11:0] grp_WrDist_fu_738_tmp_dist_0_address0;
wire    grp_WrDist_fu_738_tmp_dist_0_ce0;
wire   [11:0] grp_WrDist_fu_738_tmp_dist_1_address0;
wire    grp_WrDist_fu_738_tmp_dist_1_ce0;
wire   [11:0] grp_WrDist_fu_738_tmp_dist_2_address0;
wire    grp_WrDist_fu_738_tmp_dist_2_ce0;
wire   [11:0] grp_WrDist_fu_738_tmp_dist_3_address0;
wire    grp_WrDist_fu_738_tmp_dist_3_ce0;
wire   [11:0] grp_WrDist_fu_738_tmp_dist_4_address0;
wire    grp_WrDist_fu_738_tmp_dist_4_ce0;
wire   [11:0] grp_WrDist_fu_738_tmp_dist_5_address0;
wire    grp_WrDist_fu_738_tmp_dist_5_ce0;
wire   [11:0] grp_WrDist_fu_738_tmp_dist_6_address0;
wire    grp_WrDist_fu_738_tmp_dist_6_ce0;
wire   [11:0] grp_WrDist_fu_738_tmp_dist_7_address0;
wire    grp_WrDist_fu_738_tmp_dist_7_ce0;
wire   [127:0] grp_WrDist_fu_738_wr_port_TDATA;
wire    grp_WrDist_fu_738_wr_port_TVALID;
wire    grp_WrDist_fu_738_wr_port_TREADY;
wire   [15:0] grp_WrDist_fu_738_wr_port_TKEEP;
wire   [15:0] grp_WrDist_fu_738_wr_port_TSTRB;
wire   [0:0] grp_WrDist_fu_738_wr_port_TLAST;
wire    grp_BuffOfst_fu_767_ap_start;
wire    grp_BuffOfst_fu_767_ap_done;
wire    grp_BuffOfst_fu_767_ap_idle;
wire    grp_BuffOfst_fu_767_ap_ready;
wire   [31:0] grp_BuffOfst_fu_767_rd_req_V_din;
wire    grp_BuffOfst_fu_767_rd_req_V_write;
wire    grp_BuffOfst_fu_767_rd_start;
wire    grp_BuffOfst_fu_767_rd_start_ap_vld;
wire   [15:0] grp_BuffOfst_fu_767_ofst_buff_address1;
wire    grp_BuffOfst_fu_767_ofst_buff_ce1;
wire    grp_BuffOfst_fu_767_ofst_buff_we1;
wire   [63:0] grp_BuffOfst_fu_767_ofst_buff_d1;
wire    grp_BuffOfst_fu_767_rd_port_TREADY;
reg   [21:0] i_6_reg_652;
reg    ap_block_state9_on_subcall_done;
wire    ap_CS_fsm_state11;
reg    ap_block_state11_on_subcall_done;
reg   [15:0] i_reg_664;
wire    ap_CS_fsm_state14;
reg   [6:0] cnt_oot_reg_675;
wire    ap_CS_fsm_state16;
wire   [0:0] icmp_ln332_fu_1548_p2;
reg    grp_gen_access_tuple_fu_686_ap_start_reg;
wire   [0:0] icmp_ln395_fu_1476_p2;
reg   [15:0] n_tuple_0_fu_336;
reg   [15:0] n_tuple_1_fu_340;
reg    grp_feed_network_fu_696_ap_start_reg;
reg    grp_WrDist_fu_738_ap_start_reg;
reg    grp_BuffOfst_fu_767_ap_start_reg;
wire    ap_CS_fsm_state8;
wire   [63:0] idxprom58_fu_881_p1;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln379_fu_1425_p1;
reg   [0:0] resWrite_assign_fu_324;
reg   [0:0] ap_sig_allocacmp_resWrite_assign_load;
reg    rd_start_preg;
reg    wr_start_preg;
reg    launch_recv_preg;
wire    ap_CS_fsm_state2;
wire   [63:0] glbl_d_cast10_fu_810_p1;
reg   [63:0] wr_baseAddr_preg;
wire   [63:0] zext_ln534_fu_1543_p1;
reg   [63:0] rd_baseAddr_preg;
wire   [15:0] shl_ln320_fu_1511_p2;
reg   [15:0] wr_len_preg;
reg   [6:0] grp_fu_785_p1;
wire   [20:0] trunc_ln_fu_820_p4;
wire   [26:0] trunc_ln1_fu_834_p4;
wire   [27:0] zext_ln307_fu_844_p1;
wire   [14:0] empty_155_fu_798_p1;
wire   [7:0] zext_ln366_1_fu_896_p1;
wire   [22:0] zext_ln366_fu_893_p1;
wire   [22:0] sub_ln368_fu_904_p2;
wire   [2:0] rangeOfst_fu_919_p4;
wire   [5:0] shl_ln4_fu_929_p3;
wire   [5:0] sub_ln684_fu_956_p2;
wire   [0:0] tmp_6_fu_948_p3;
wire   [6:0] add_ln684_fu_966_p2;
wire   [6:0] zext_ln684_fu_962_p1;
wire   [0:0] icmp_ln684_fu_980_p2;
wire   [6:0] sub_ln684_1_fu_986_p2;
wire   [0:0] tmp_7_fu_1004_p3;
wire   [25:0] zext_ln674_1_fu_1012_p1;
wire   [6:0] add_ln674_fu_1022_p2;
wire   [6:0] grp_fu_785_p2;
wire   [6:0] select_ln674_fu_1028_p3;
wire   [3:0] tmp_8_fu_1048_p4;
wire  signed [7:0] sext_ln312_fu_1064_p1;
wire  signed [7:0] sext_ln307_1_fu_1000_p1;
wire   [6:0] sub_ln674_fu_1099_p2;
wire   [63:0] zext_ln674_fu_1104_p1;
wire   [6:0] select_ln674_1_fu_1114_p3;
wire   [63:0] zext_ln674_2_fu_1120_p1;
wire   [63:0] zext_ln674_3_fu_1124_p1;
wire   [63:0] lshr_ln674_fu_1127_p2;
wire   [63:0] lshr_ln674_1_fu_1133_p2;
wire   [6:0] sub_ln312_fu_1151_p2;
wire   [6:0] select_ln312_fu_1145_p3;
wire   [6:0] select_ln312_1_fu_1156_p3;
wire   [63:0] p_Result_17_fu_1139_p2;
wire   [8:0] trunc_ln312_fu_1171_p1;
wire   [71:0] st_fu_1175_p3;
wire   [71:0] sf_fu_1183_p3;
wire   [71:0] select_ln312_2_fu_1191_p3;
reg   [71:0] tmp_9_fu_1198_p4;
wire   [71:0] zext_ln312_fu_1163_p1;
wire   [71:0] zext_ln312_1_fu_1167_p1;
wire   [71:0] shl_ln312_fu_1215_p2;
wire   [71:0] lshr_ln312_fu_1221_p2;
wire   [71:0] select_ln312_3_fu_1208_p3;
wire   [71:0] and_ln312_fu_1227_p2;
wire   [6:0] add_ln310_fu_1239_p2;
wire   [63:0] p_Result_16_fu_1108_p2;
wire  signed [7:0] sext_ln310_fu_1244_p1;
wire   [7:0] sub_ln310_fu_1252_p2;
wire   [135:0] zext_ln310_1_fu_1258_p1;
wire   [135:0] zext_ln310_fu_1248_p1;
wire   [135:0] lshr_ln310_fu_1262_p2;
wire  signed [31:0] sext_ln307_fu_1096_p1;
wire  signed [31:0] sext_ln312_1_fu_1274_p1;
wire   [71:0] p_Result_18_fu_1233_p2;
wire  signed [7:0] sext_ln312_2_fu_1283_p1;
wire   [0:0] icmp_ln312_1_fu_1277_p2;
wire   [7:0] sub_ln312_1_fu_1290_p2;
wire   [7:0] select_ln312_4_fu_1296_p3;
wire   [7:0] select_ln312_6_fu_1310_p3;
wire   [7:0] select_ln312_5_fu_1303_p3;
wire   [7:0] sub_ln312_2_fu_1318_p2;
wire   [135:0] zext_ln312_2_fu_1286_p1;
wire   [135:0] zext_ln312_3_fu_1324_p1;
wire   [135:0] shl_ln312_1_fu_1336_p2;
reg   [135:0] tmp_12_fu_1342_p4;
wire   [135:0] zext_ln312_4_fu_1328_p1;
wire   [135:0] zext_ln312_5_fu_1332_p1;
wire   [135:0] shl_ln312_2_fu_1360_p2;
wire   [135:0] lshr_ln312_1_fu_1366_p2;
wire   [135:0] and_ln312_2_fu_1372_p2;
wire   [135:0] p_Result_19_fu_1268_p2;
wire   [135:0] xor_ln312_fu_1378_p2;
wire   [135:0] select_ln312_7_fu_1352_p3;
wire   [135:0] and_ln312_3_fu_1384_p2;
wire   [135:0] and_ln312_4_fu_1390_p2;
wire   [135:0] p_Result_20_fu_1396_p2;
wire   [0:0] or_ln372_fu_1413_p2;
wire   [63:0] select_ln372_fu_1406_p3;
wire   [63:0] trunc_ln371_fu_1402_p1;
wire   [19:0] trunc_ln3_fu_1436_p4;
wire   [15:0] trunc_ln2_fu_1489_p4;
wire   [15:0] add_ln318_fu_1498_p2;
wire   [33:0] zext_ln1346_fu_1534_p1;
wire   [33:0] ret_fu_1537_p2;
wire   [111:0] p_Result_s_fu_1567_p4;
reg   [15:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire    regslice_both_rd_port_V_data_V_U_apdone_blk;
wire   [127:0] rd_port_TDATA_int_regslice;
wire    rd_port_TVALID_int_regslice;
reg    rd_port_TREADY_int_regslice;
wire    regslice_both_rd_port_V_data_V_U_ack_in;
wire    regslice_both_rd_port_V_keep_V_U_apdone_blk;
wire   [15:0] rd_port_TKEEP_int_regslice;
wire    regslice_both_rd_port_V_keep_V_U_vld_out;
wire    regslice_both_rd_port_V_keep_V_U_ack_in;
wire    regslice_both_rd_port_V_strb_V_U_apdone_blk;
wire   [15:0] rd_port_TSTRB_int_regslice;
wire    regslice_both_rd_port_V_strb_V_U_vld_out;
wire    regslice_both_rd_port_V_strb_V_U_ack_in;
wire    regslice_both_rd_port_V_last_V_U_apdone_blk;
wire   [0:0] rd_port_TLAST_int_regslice;
wire    regslice_both_rd_port_V_last_V_U_vld_out;
wire    regslice_both_rd_port_V_last_V_U_ack_in;
reg   [127:0] wr_port_TDATA_int_regslice;
reg    wr_port_TVALID_int_regslice;
wire    wr_port_TREADY_int_regslice;
wire    regslice_both_wr_port_V_data_V_U_vld_out;
wire    regslice_both_wr_port_V_keep_V_U_apdone_blk;
reg   [15:0] wr_port_TKEEP_int_regslice;
wire    regslice_both_wr_port_V_keep_V_U_ack_in_dummy;
wire    regslice_both_wr_port_V_keep_V_U_vld_out;
wire    regslice_both_wr_port_V_strb_V_U_apdone_blk;
reg   [15:0] wr_port_TSTRB_int_regslice;
wire    regslice_both_wr_port_V_strb_V_U_ack_in_dummy;
wire    regslice_both_wr_port_V_strb_V_U_vld_out;
wire    regslice_both_wr_port_V_last_V_U_apdone_blk;
reg   [0:0] wr_port_TLAST_int_regslice;
wire    regslice_both_wr_port_V_last_V_U_ack_in_dummy;
wire    regslice_both_wr_port_V_last_V_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 16'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 grp_gen_access_tuple_fu_686_ap_start_reg = 1'b0;
#0 grp_feed_network_fu_696_ap_start_reg = 1'b0;
#0 grp_WrDist_fu_738_ap_start_reg = 1'b0;
#0 grp_BuffOfst_fu_767_ap_start_reg = 1'b0;
#0 rd_start_preg = 1'b0;
#0 wr_start_preg = 1'b0;
#0 launch_recv_preg = 1'b0;
#0 wr_baseAddr_preg = 64'd0;
#0 rd_baseAddr_preg = 64'd0;
#0 wr_len_preg = 16'd0;
end

BFS_Scatter_ofst_buff #(
    .DataWidth( 64 ),
    .AddressRange( 49152 ),
    .AddressWidth( 16 ))
ofst_buff_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_gen_access_tuple_fu_686_ofst_buff_address0),
    .ce0(ofst_buff_ce0),
    .q0(ofst_buff_q0),
    .address1(ofst_buff_address1),
    .ce1(ofst_buff_ce1),
    .we1(ofst_buff_we1),
    .d1(grp_BuffOfst_fu_767_ofst_buff_d1),
    .q1(ofst_buff_q1)
);

BFS_Scatter_mem_req_buff_V_0 #(
    .DataWidth( 32 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
mem_req_buff_V_0_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_feed_network_fu_696_mem_req_buff_address0),
    .ce0(mem_req_buff_V_0_ce0),
    .q0(mem_req_buff_V_0_q0),
    .address1(grp_gen_access_tuple_fu_686_mem_req_buff_address1),
    .ce1(mem_req_buff_V_0_ce1),
    .we1(mem_req_buff_V_0_we1),
    .d1(grp_gen_access_tuple_fu_686_mem_req_buff_d1)
);

BFS_Scatter_mem_req_buff_V_0 #(
    .DataWidth( 32 ),
    .AddressRange( 2048 ),
    .AddressWidth( 11 ))
mem_req_buff_V_1_U(
    .clk(ap_clk),
    .reset(ap_rst_n_inv),
    .address0(grp_feed_network_fu_696_mem_req_buff_address0),
    .ce0(mem_req_buff_V_1_ce0),
    .q0(mem_req_buff_V_1_q0),
    .address1(grp_gen_access_tuple_fu_686_mem_req_buff_address1),
    .ce1(mem_req_buff_V_1_ce1),
    .we1(mem_req_buff_V_1_we1),
    .d1(grp_gen_access_tuple_fu_686_mem_req_buff_d1)
);

BFS_Scatter_gen_access_tuple grp_gen_access_tuple_fu_686(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_gen_access_tuple_fu_686_ap_start),
    .ap_done(grp_gen_access_tuple_fu_686_ap_done),
    .ap_idle(grp_gen_access_tuple_fu_686_ap_idle),
    .ap_ready(grp_gen_access_tuple_fu_686_ap_ready),
    .ofst_buff_address0(grp_gen_access_tuple_fu_686_ofst_buff_address0),
    .ofst_buff_ce0(grp_gen_access_tuple_fu_686_ofst_buff_ce0),
    .ofst_buff_q0(ofst_buff_q0),
    .ofst_buff_address1(grp_gen_access_tuple_fu_686_ofst_buff_address1),
    .ofst_buff_ce1(grp_gen_access_tuple_fu_686_ofst_buff_ce1),
    .ofst_buff_q1(ofst_buff_q1),
    .rlt_tail_idx(rlt_tail_idx_reg_1644),
    .batchIdx(i_6_reg_652),
    .n_mem_tuples(grp_gen_access_tuple_fu_686_n_mem_tuples),
    .n_mem_tuples_ap_vld(grp_gen_access_tuple_fu_686_n_mem_tuples_ap_vld),
    .mem_req_buff_address1(grp_gen_access_tuple_fu_686_mem_req_buff_address1),
    .mem_req_buff_ce1(grp_gen_access_tuple_fu_686_mem_req_buff_ce1),
    .mem_req_buff_we1(grp_gen_access_tuple_fu_686_mem_req_buff_we1),
    .mem_req_buff_d1(grp_gen_access_tuple_fu_686_mem_req_buff_d1)
);

BFS_Scatter_feed_network grp_feed_network_fu_696(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_feed_network_fu_696_ap_start),
    .ap_done(grp_feed_network_fu_696_ap_done),
    .ap_idle(grp_feed_network_fu_696_ap_idle),
    .ap_ready(grp_feed_network_fu_696_ap_ready),
    .rd_req_V_din(grp_feed_network_fu_696_rd_req_V_din),
    .rd_req_V_full_n(rd_req_V_full_n),
    .rd_req_V_write(grp_feed_network_fu_696_rd_req_V_write),
    .rd_start(grp_feed_network_fu_696_rd_start),
    .rd_start_ap_vld(grp_feed_network_fu_696_rd_start_ap_vld),
    .tmp_dist_0_address0(grp_feed_network_fu_696_tmp_dist_0_address0),
    .tmp_dist_0_ce0(grp_feed_network_fu_696_tmp_dist_0_ce0),
    .tmp_dist_0_q0(tmp_dist_0_q0),
    .tmp_dist_1_address0(grp_feed_network_fu_696_tmp_dist_1_address0),
    .tmp_dist_1_ce0(grp_feed_network_fu_696_tmp_dist_1_ce0),
    .tmp_dist_1_q0(tmp_dist_1_q0),
    .tmp_dist_2_address0(grp_feed_network_fu_696_tmp_dist_2_address0),
    .tmp_dist_2_ce0(grp_feed_network_fu_696_tmp_dist_2_ce0),
    .tmp_dist_2_q0(tmp_dist_2_q0),
    .tmp_dist_3_address0(grp_feed_network_fu_696_tmp_dist_3_address0),
    .tmp_dist_3_ce0(grp_feed_network_fu_696_tmp_dist_3_ce0),
    .tmp_dist_3_q0(tmp_dist_3_q0),
    .tmp_dist_4_address0(grp_feed_network_fu_696_tmp_dist_4_address0),
    .tmp_dist_4_ce0(grp_feed_network_fu_696_tmp_dist_4_ce0),
    .tmp_dist_4_q0(tmp_dist_4_q0),
    .tmp_dist_5_address0(grp_feed_network_fu_696_tmp_dist_5_address0),
    .tmp_dist_5_ce0(grp_feed_network_fu_696_tmp_dist_5_ce0),
    .tmp_dist_5_q0(tmp_dist_5_q0),
    .tmp_dist_6_address0(grp_feed_network_fu_696_tmp_dist_6_address0),
    .tmp_dist_6_ce0(grp_feed_network_fu_696_tmp_dist_6_ce0),
    .tmp_dist_6_q0(tmp_dist_6_q0),
    .tmp_dist_7_address0(grp_feed_network_fu_696_tmp_dist_7_address0),
    .tmp_dist_7_ce0(grp_feed_network_fu_696_tmp_dist_7_ce0),
    .tmp_dist_7_q0(tmp_dist_7_q0),
    .sw_data_0_V_din(grp_feed_network_fu_696_sw_data_0_V_din),
    .sw_data_0_V_full_n(sw_data_0_V_full_n),
    .sw_data_0_V_write(grp_feed_network_fu_696_sw_data_0_V_write),
    .sw_data_1_V_din(grp_feed_network_fu_696_sw_data_1_V_din),
    .sw_data_1_V_full_n(sw_data_1_V_full_n),
    .sw_data_1_V_write(grp_feed_network_fu_696_sw_data_1_V_write),
    .sw_data_2_V_din(grp_feed_network_fu_696_sw_data_2_V_din),
    .sw_data_2_V_full_n(sw_data_2_V_full_n),
    .sw_data_2_V_write(grp_feed_network_fu_696_sw_data_2_V_write),
    .sw_data_3_V_din(grp_feed_network_fu_696_sw_data_3_V_din),
    .sw_data_3_V_full_n(sw_data_3_V_full_n),
    .sw_data_3_V_write(grp_feed_network_fu_696_sw_data_3_V_write),
    .rd_port_TDATA(rd_port_TDATA_int_regslice),
    .rd_port_TVALID(rd_port_TVALID_int_regslice),
    .rd_port_TREADY(grp_feed_network_fu_696_rd_port_TREADY),
    .rd_port_TKEEP(rd_port_TKEEP_int_regslice),
    .rd_port_TSTRB(rd_port_TSTRB_int_regslice),
    .rd_port_TLAST(rd_port_TLAST_int_regslice),
    .n_mem_tuples(grp_feed_network_fu_696_n_mem_tuples),
    .mem_req_buff_address0(grp_feed_network_fu_696_mem_req_buff_address0),
    .mem_req_buff_ce0(grp_feed_network_fu_696_mem_req_buff_ce0),
    .mem_req_buff_q0(grp_feed_network_fu_696_mem_req_buff_q0)
);

BFS_Scatter_WrDist grp_WrDist_fu_738(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_WrDist_fu_738_ap_start),
    .ap_done(grp_WrDist_fu_738_ap_done),
    .ap_idle(grp_WrDist_fu_738_ap_idle),
    .ap_ready(grp_WrDist_fu_738_ap_ready),
    .tmp_dist_0_address0(grp_WrDist_fu_738_tmp_dist_0_address0),
    .tmp_dist_0_ce0(grp_WrDist_fu_738_tmp_dist_0_ce0),
    .tmp_dist_0_q0(tmp_dist_0_q0),
    .tmp_dist_1_address0(grp_WrDist_fu_738_tmp_dist_1_address0),
    .tmp_dist_1_ce0(grp_WrDist_fu_738_tmp_dist_1_ce0),
    .tmp_dist_1_q0(tmp_dist_1_q0),
    .tmp_dist_2_address0(grp_WrDist_fu_738_tmp_dist_2_address0),
    .tmp_dist_2_ce0(grp_WrDist_fu_738_tmp_dist_2_ce0),
    .tmp_dist_2_q0(tmp_dist_2_q0),
    .tmp_dist_3_address0(grp_WrDist_fu_738_tmp_dist_3_address0),
    .tmp_dist_3_ce0(grp_WrDist_fu_738_tmp_dist_3_ce0),
    .tmp_dist_3_q0(tmp_dist_3_q0),
    .tmp_dist_4_address0(grp_WrDist_fu_738_tmp_dist_4_address0),
    .tmp_dist_4_ce0(grp_WrDist_fu_738_tmp_dist_4_ce0),
    .tmp_dist_4_q0(tmp_dist_4_q0),
    .tmp_dist_5_address0(grp_WrDist_fu_738_tmp_dist_5_address0),
    .tmp_dist_5_ce0(grp_WrDist_fu_738_tmp_dist_5_ce0),
    .tmp_dist_5_q0(tmp_dist_5_q0),
    .tmp_dist_6_address0(grp_WrDist_fu_738_tmp_dist_6_address0),
    .tmp_dist_6_ce0(grp_WrDist_fu_738_tmp_dist_6_ce0),
    .tmp_dist_6_q0(tmp_dist_6_q0),
    .tmp_dist_7_address0(grp_WrDist_fu_738_tmp_dist_7_address0),
    .tmp_dist_7_ce0(grp_WrDist_fu_738_tmp_dist_7_ce0),
    .tmp_dist_7_q0(tmp_dist_7_q0),
    .wr_port_TDATA(grp_WrDist_fu_738_wr_port_TDATA),
    .wr_port_TVALID(grp_WrDist_fu_738_wr_port_TVALID),
    .wr_port_TREADY(grp_WrDist_fu_738_wr_port_TREADY),
    .wr_port_TKEEP(grp_WrDist_fu_738_wr_port_TKEEP),
    .wr_port_TSTRB(grp_WrDist_fu_738_wr_port_TSTRB),
    .wr_port_TLAST(grp_WrDist_fu_738_wr_port_TLAST),
    .idx(trunc_ln325_reg_1846)
);

BFS_Scatter_BuffOfst grp_BuffOfst_fu_767(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .ap_start(grp_BuffOfst_fu_767_ap_start),
    .ap_done(grp_BuffOfst_fu_767_ap_done),
    .ap_idle(grp_BuffOfst_fu_767_ap_idle),
    .ap_ready(grp_BuffOfst_fu_767_ap_ready),
    .rd_req_V_din(grp_BuffOfst_fu_767_rd_req_V_din),
    .rd_req_V_full_n(rd_req_V_full_n),
    .rd_req_V_write(grp_BuffOfst_fu_767_rd_req_V_write),
    .rd_start(grp_BuffOfst_fu_767_rd_start),
    .rd_start_ap_vld(grp_BuffOfst_fu_767_rd_start_ap_vld),
    .ofst_buff_address1(grp_BuffOfst_fu_767_ofst_buff_address1),
    .ofst_buff_ce1(grp_BuffOfst_fu_767_ofst_buff_ce1),
    .ofst_buff_we1(grp_BuffOfst_fu_767_ofst_buff_we1),
    .ofst_buff_d1(grp_BuffOfst_fu_767_ofst_buff_d1),
    .rd_port_TDATA(rd_port_TDATA_int_regslice),
    .rd_port_TVALID(rd_port_TVALID_int_regslice),
    .rd_port_TREADY(grp_BuffOfst_fu_767_rd_port_TREADY),
    .rd_port_TKEEP(rd_port_TKEEP_int_regslice),
    .rd_port_TSTRB(rd_port_TSTRB_int_regslice),
    .rd_port_TLAST(rd_port_TLAST_int_regslice),
    .size(add_ln388_reg_1805)
);

BFS_Scatter_regslice_both #(
    .DataWidth( 128 ))
regslice_both_rd_port_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(rd_port_TDATA),
    .vld_in(rd_port_TVALID),
    .ack_in(regslice_both_rd_port_V_data_V_U_ack_in),
    .data_out(rd_port_TDATA_int_regslice),
    .vld_out(rd_port_TVALID_int_regslice),
    .ack_out(rd_port_TREADY_int_regslice),
    .apdone_blk(regslice_both_rd_port_V_data_V_U_apdone_blk)
);

BFS_Scatter_regslice_both #(
    .DataWidth( 16 ))
regslice_both_rd_port_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(rd_port_TKEEP),
    .vld_in(rd_port_TVALID),
    .ack_in(regslice_both_rd_port_V_keep_V_U_ack_in),
    .data_out(rd_port_TKEEP_int_regslice),
    .vld_out(regslice_both_rd_port_V_keep_V_U_vld_out),
    .ack_out(rd_port_TREADY_int_regslice),
    .apdone_blk(regslice_both_rd_port_V_keep_V_U_apdone_blk)
);

BFS_Scatter_regslice_both #(
    .DataWidth( 16 ))
regslice_both_rd_port_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(rd_port_TSTRB),
    .vld_in(rd_port_TVALID),
    .ack_in(regslice_both_rd_port_V_strb_V_U_ack_in),
    .data_out(rd_port_TSTRB_int_regslice),
    .vld_out(regslice_both_rd_port_V_strb_V_U_vld_out),
    .ack_out(rd_port_TREADY_int_regslice),
    .apdone_blk(regslice_both_rd_port_V_strb_V_U_apdone_blk)
);

BFS_Scatter_regslice_both #(
    .DataWidth( 1 ))
regslice_both_rd_port_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(rd_port_TLAST),
    .vld_in(rd_port_TVALID),
    .ack_in(regslice_both_rd_port_V_last_V_U_ack_in),
    .data_out(rd_port_TLAST_int_regslice),
    .vld_out(regslice_both_rd_port_V_last_V_U_vld_out),
    .ack_out(rd_port_TREADY_int_regslice),
    .apdone_blk(regslice_both_rd_port_V_last_V_U_apdone_blk)
);

BFS_Scatter_regslice_both #(
    .DataWidth( 128 ))
regslice_both_wr_port_V_data_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(wr_port_TDATA_int_regslice),
    .vld_in(wr_port_TVALID_int_regslice),
    .ack_in(wr_port_TREADY_int_regslice),
    .data_out(wr_port_TDATA),
    .vld_out(regslice_both_wr_port_V_data_V_U_vld_out),
    .ack_out(wr_port_TREADY),
    .apdone_blk(regslice_both_wr_port_V_data_V_U_apdone_blk)
);

BFS_Scatter_regslice_both #(
    .DataWidth( 16 ))
regslice_both_wr_port_V_keep_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(wr_port_TKEEP_int_regslice),
    .vld_in(wr_port_TVALID_int_regslice),
    .ack_in(regslice_both_wr_port_V_keep_V_U_ack_in_dummy),
    .data_out(wr_port_TKEEP),
    .vld_out(regslice_both_wr_port_V_keep_V_U_vld_out),
    .ack_out(wr_port_TREADY),
    .apdone_blk(regslice_both_wr_port_V_keep_V_U_apdone_blk)
);

BFS_Scatter_regslice_both #(
    .DataWidth( 16 ))
regslice_both_wr_port_V_strb_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(wr_port_TSTRB_int_regslice),
    .vld_in(wr_port_TVALID_int_regslice),
    .ack_in(regslice_both_wr_port_V_strb_V_U_ack_in_dummy),
    .data_out(wr_port_TSTRB),
    .vld_out(regslice_both_wr_port_V_strb_V_U_vld_out),
    .ack_out(wr_port_TREADY),
    .apdone_blk(regslice_both_wr_port_V_strb_V_U_apdone_blk)
);

BFS_Scatter_regslice_both #(
    .DataWidth( 1 ))
regslice_both_wr_port_V_last_V_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst_n_inv),
    .data_in(wr_port_TLAST_int_regslice),
    .vld_in(wr_port_TVALID_int_regslice),
    .ack_in(regslice_both_wr_port_V_last_V_U_ack_in_dummy),
    .data_out(wr_port_TLAST),
    .vld_out(regslice_both_wr_port_V_last_V_U_vld_out),
    .ack_out(wr_port_TREADY),
    .apdone_blk(regslice_both_wr_port_V_last_V_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln352_fu_857_p2 == 1'd1) & (resWrite_assign_load_load_fu_854_p1 == 1'd0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln352_fu_857_p2 == 1'd1) & (resWrite_assign_load_load_fu_854_p1 == 1'd0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_BuffOfst_fu_767_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state8)) begin
            grp_BuffOfst_fu_767_ap_start_reg <= 1'b1;
        end else if ((grp_BuffOfst_fu_767_ap_ready == 1'b1)) begin
            grp_BuffOfst_fu_767_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_WrDist_fu_738_ap_start_reg <= 1'b0;
    end else begin
        if (((icmp_ln323_fu_1524_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
            grp_WrDist_fu_738_ap_start_reg <= 1'b1;
        end else if ((grp_WrDist_fu_738_ap_ready == 1'b1)) begin
            grp_WrDist_fu_738_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_feed_network_fu_696_ap_start_reg <= 1'b0;
    end else begin
        if ((((icmp_ln395_fu_1476_p2 == 1'd0) & (trunc_ln395_fu_1472_p1 == 1'd1) & (regslice_both_wr_port_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state10) & (resWrite_assign_load_reg_1649 == 1'd0)) | ((icmp_ln395_fu_1476_p2 == 1'd0) & (trunc_ln395_fu_1472_p1 == 1'd0) & (regslice_both_wr_port_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state10) & (resWrite_assign_load_reg_1649 == 1'd0)))) begin
            grp_feed_network_fu_696_ap_start_reg <= 1'b1;
        end else if ((grp_feed_network_fu_696_ap_ready == 1'b1)) begin
            grp_feed_network_fu_696_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        grp_gen_access_tuple_fu_686_ap_start_reg <= 1'b0;
    end else begin
        if ((((icmp_ln395_fu_1476_p2 == 1'd0) & (trunc_ln395_fu_1472_p1 == 1'd1) & (regslice_both_wr_port_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state10) & (resWrite_assign_load_reg_1649 == 1'd0)) | ((icmp_ln395_fu_1476_p2 == 1'd0) & (trunc_ln395_fu_1472_p1 == 1'd0) & (regslice_both_wr_port_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state10) & (resWrite_assign_load_reg_1649 == 1'd0)))) begin
            grp_gen_access_tuple_fu_686_ap_start_reg <= 1'b1;
        end else if ((grp_gen_access_tuple_fu_686_ap_ready == 1'b1)) begin
            grp_gen_access_tuple_fu_686_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        launch_recv_preg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_state9_on_subcall_done) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln352_reg_1658 == 1'd1)))) begin
            launch_recv_preg <= 1'd1;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            launch_recv_preg <= 1'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
                rd_baseAddr_preg[0] <= 1'b0;
        rd_baseAddr_preg[1] <= 1'b0;
        rd_baseAddr_preg[2] <= 1'b0;
        rd_baseAddr_preg[3] <= 1'b0;
        rd_baseAddr_preg[4] <= 1'b0;
        rd_baseAddr_preg[5] <= 1'b0;
        rd_baseAddr_preg[6] <= 1'b0;
        rd_baseAddr_preg[7] <= 1'b0;
        rd_baseAddr_preg[8] <= 1'b0;
        rd_baseAddr_preg[9] <= 1'b0;
        rd_baseAddr_preg[10] <= 1'b0;
        rd_baseAddr_preg[11] <= 1'b0;
        rd_baseAddr_preg[12] <= 1'b0;
        rd_baseAddr_preg[13] <= 1'b0;
        rd_baseAddr_preg[14] <= 1'b0;
        rd_baseAddr_preg[15] <= 1'b0;
        rd_baseAddr_preg[16] <= 1'b0;
        rd_baseAddr_preg[17] <= 1'b0;
        rd_baseAddr_preg[18] <= 1'b0;
        rd_baseAddr_preg[19] <= 1'b0;
        rd_baseAddr_preg[20] <= 1'b0;
        rd_baseAddr_preg[21] <= 1'b0;
        rd_baseAddr_preg[22] <= 1'b0;
        rd_baseAddr_preg[23] <= 1'b0;
        rd_baseAddr_preg[24] <= 1'b0;
        rd_baseAddr_preg[25] <= 1'b0;
        rd_baseAddr_preg[26] <= 1'b0;
        rd_baseAddr_preg[27] <= 1'b0;
        rd_baseAddr_preg[28] <= 1'b0;
        rd_baseAddr_preg[29] <= 1'b0;
        rd_baseAddr_preg[30] <= 1'b0;
        rd_baseAddr_preg[31] <= 1'b0;
        rd_baseAddr_preg[32] <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state9_on_subcall_done) & (1'b1 == ap_CS_fsm_state9))) begin
                        rd_baseAddr_preg[32 : 0] <= CSR_E_cast_reg_1634[32 : 0];
        end else if ((1'b1 == ap_CS_fsm_state7)) begin
                        rd_baseAddr_preg[32 : 0] <= CSR_V_cast_reg_1629[32 : 0];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
                wr_baseAddr_preg[0] <= 1'b0;
        wr_baseAddr_preg[1] <= 1'b0;
        wr_baseAddr_preg[2] <= 1'b0;
        wr_baseAddr_preg[3] <= 1'b0;
        wr_baseAddr_preg[4] <= 1'b0;
        wr_baseAddr_preg[5] <= 1'b0;
        wr_baseAddr_preg[6] <= 1'b0;
        wr_baseAddr_preg[7] <= 1'b0;
        wr_baseAddr_preg[8] <= 1'b0;
        wr_baseAddr_preg[9] <= 1'b0;
        wr_baseAddr_preg[10] <= 1'b0;
        wr_baseAddr_preg[11] <= 1'b0;
        wr_baseAddr_preg[12] <= 1'b0;
        wr_baseAddr_preg[13] <= 1'b0;
        wr_baseAddr_preg[14] <= 1'b0;
        wr_baseAddr_preg[15] <= 1'b0;
        wr_baseAddr_preg[16] <= 1'b0;
        wr_baseAddr_preg[17] <= 1'b0;
        wr_baseAddr_preg[18] <= 1'b0;
        wr_baseAddr_preg[19] <= 1'b0;
        wr_baseAddr_preg[20] <= 1'b0;
        wr_baseAddr_preg[21] <= 1'b0;
        wr_baseAddr_preg[22] <= 1'b0;
        wr_baseAddr_preg[23] <= 1'b0;
        wr_baseAddr_preg[24] <= 1'b0;
        wr_baseAddr_preg[25] <= 1'b0;
        wr_baseAddr_preg[26] <= 1'b0;
        wr_baseAddr_preg[27] <= 1'b0;
        wr_baseAddr_preg[28] <= 1'b0;
        wr_baseAddr_preg[29] <= 1'b0;
        wr_baseAddr_preg[30] <= 1'b0;
        wr_baseAddr_preg[31] <= 1'b0;
        wr_baseAddr_preg[32] <= 1'b0;
        wr_baseAddr_preg[33] <= 1'b0;
    end else begin
        if (((icmp_ln323_fu_1524_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                        wr_baseAddr_preg[33 : 0] <= zext_ln534_fu_1543_p1[33 : 0];
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (resWrite_assign_load_load_fu_854_p1 == 1'd1))) begin
                        wr_baseAddr_preg[33 : 0] <= glbl_d_cast10_fu_810_p1[33 : 0];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
                wr_len_preg[0] <= 1'b0;
        wr_len_preg[6] <= 1'b0;
        wr_len_preg[7] <= 1'b0;
        wr_len_preg[8] <= 1'b0;
        wr_len_preg[9] <= 1'b0;
        wr_len_preg[10] <= 1'b0;
        wr_len_preg[11] <= 1'b0;
        wr_len_preg[12] <= 1'b0;
        wr_len_preg[13] <= 1'b0;
        wr_len_preg[14] <= 1'b0;
        wr_len_preg[15] <= 1'b0;
    end else begin
        if (((icmp_ln323_fu_1524_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                        wr_len_preg[0] <= 1'b1;
            wr_len_preg[6] <= 1'b0;
            wr_len_preg[7] <= 1'b0;
            wr_len_preg[8] <= 1'b0;
            wr_len_preg[9] <= 1'b0;
            wr_len_preg[10] <= 1'b0;
            wr_len_preg[11] <= 1'b0;
            wr_len_preg[12] <= 1'b0;
            wr_len_preg[13] <= 1'b0;
            wr_len_preg[14] <= 1'b0;
            wr_len_preg[15] <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state12)) begin
                        wr_len_preg[0] <= shl_ln320_fu_1511_p2[0];
            wr_len_preg[15 : 6] <= shl_ln320_fu_1511_p2[15 : 6];
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst_n_inv == 1'b1) begin
        wr_start_preg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_state17) & (wr_port_TREADY_int_regslice == 1'b1)))) begin
            wr_start_preg <= 1'd1;
        end else if ((((icmp_ln323_fu_1524_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
            wr_start_preg <= 1'd0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln332_fu_1548_p2 == 1'd1) & (icmp_ln323_fu_1524_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        cnt_oot_reg_675 <= 7'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        cnt_oot_reg_675 <= add_ln334_reg_1857;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln352_fu_857_p2 == 1'd1) & (resWrite_assign_load_load_fu_854_p1 == 1'd0))) begin
        i_4_reg_641 <= 13'd0;
    end else if (((icmp_ln354_fu_875_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        i_4_reg_641 <= i_5_fu_869_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state11_on_subcall_done) & (1'b1 == ap_CS_fsm_state11))) begin
        i_6_reg_652 <= i_7_reg_1815;
    end else if (((1'b0 == ap_block_state9_on_subcall_done) & (1'b1 == ap_CS_fsm_state9))) begin
        i_6_reg_652 <= 22'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_WrDist_fu_738_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        i_reg_664 <= i_3_reg_1838;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        i_reg_664 <= 16'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state9_on_subcall_done) & (1'b1 == ap_CS_fsm_state9))) begin
        n_tuple_0_fu_336 <= 16'd0;
    end else if (((grp_gen_access_tuple_fu_686_n_mem_tuples_ap_vld == 1'b1) & (trunc_ln395_reg_1820 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        n_tuple_0_fu_336 <= grp_gen_access_tuple_fu_686_n_mem_tuples;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_state9_on_subcall_done) & (1'b1 == ap_CS_fsm_state9))) begin
        n_tuple_1_fu_340 <= 16'd0;
    end else if (((grp_gen_access_tuple_fu_686_n_mem_tuples_ap_vld == 1'b1) & (trunc_ln395_reg_1820 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        n_tuple_1_fu_340 <= grp_gen_access_tuple_fu_686_n_mem_tuples;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        CSR_E_cast_reg_1634[32 : 0] <= CSR_E_cast_fu_806_p1[32 : 0];
        CSR_V_cast_reg_1629[32 : 0] <= CSR_V_cast_fu_802_p1[32 : 0];
        empty_154_reg_1603 <= empty_154_fu_794_p1;
        empty_reg_1598 <= empty_fu_790_p1;
        resWrite_assign_load_reg_1649 <= ap_sig_allocacmp_resWrite_assign_load;
        rlt_tail_idx_reg_1644 <= rlt_tail_idx_fu_848_p2;
        zext_ln306_reg_1639[20 : 0] <= zext_ln306_fu_830_p1[20 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln366_fu_899_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state5))) begin
        W_ref1_reg_1735[1] <= W_ref1_fu_972_p3[1];
W_ref1_reg_1735[6 : 3] <= W_ref1_fu_972_p3[6 : 3];
        W_ref2_reg_1740[1] <= W_ref2_fu_992_p3[1];
W_ref2_reg_1740[6 : 3] <= W_ref2_fu_992_p3[6 : 3];
        add_ln312_1_reg_1770[7 : 1] <= add_ln312_1_fu_1068_p2[7 : 1];
        add_ln312_reg_1757[6 : 1] <= add_ln312_fu_1042_p2[6 : 1];
        add_ln377_reg_1730[6 : 3] <= add_ln377_fu_942_p2[6 : 3];
        icmp_ln312_reg_1762 <= icmp_ln312_fu_1058_p2;
        icmp_ln372_1_reg_1782 <= icmp_ln372_1_fu_1080_p2;
        icmp_ln372_reg_1777 <= icmp_ln372_fu_1074_p2;
        icmp_ln674_reg_1747 <= icmp_ln674_fu_1016_p2;
        lshr_ln_reg_1788 <= {{sub_ln368_fu_904_p2[22:11]}};
        rootBank_reg_1720 <= {{sub_ln368_fu_904_p2[7:5]}};
        sub_ln674_3_reg_1752 <= sub_ln674_3_fu_1036_p2;
        zext_ln377_reg_1724[5 : 3] <= zext_ln377_fu_937_p1[5 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        add105_reg_1810 <= add105_fu_1461_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((~((1'b1 == ap_block_state15_io) | ((tmp_fu_1553_p3 == 1'd1) & (wr_port_TREADY_int_regslice == 1'b0))) & (1'b1 == ap_CS_fsm_state15) & (tmp_fu_1553_p3 == 1'd0))) begin
        add_ln334_reg_1857 <= add_ln334_fu_1561_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        add_ln388_reg_1805 <= add_ln388_fu_1445_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        i_3_reg_1838 <= i_3_fu_1518_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((regslice_both_wr_port_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state10) & (resWrite_assign_load_reg_1649 == 1'd0))) begin
        i_7_reg_1815 <= i_7_fu_1466_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (resWrite_assign_load_load_fu_854_p1 == 1'd1))) begin
        icmp_ln318_reg_1662 <= icmp_ln318_fu_863_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state1) & (resWrite_assign_load_load_fu_854_p1 == 1'd0))) begin
        icmp_ln352_reg_1658 <= icmp_ln352_fu_857_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        icmp_ln366_reg_1716 <= icmp_ln366_fu_899_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        n_wr_iter_reg_1833 <= n_wr_iter_fu_1504_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        resWrite_assign_fu_324 <= resWrite;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln323_fu_1524_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state13))) begin
        trunc_ln325_reg_1846 <= trunc_ln325_fu_1529_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state10) & (resWrite_assign_load_reg_1649 == 1'd0))) begin
        trunc_ln395_reg_1820 <= trunc_ln395_fu_1472_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        wrVal_reg_1793 <= wrVal_fu_1417_p3;
    end
end

always @ (*) begin
    if ((icmp_ln354_fu_875_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if (((regslice_both_wr_port_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state10) & ((icmp_ln395_fu_1476_p2 == 1'd1) | (resWrite_assign_load_reg_1649 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((regslice_both_wr_port_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state10) & ((icmp_ln395_fu_1476_p2 == 1'd1) | (resWrite_assign_load_reg_1649 == 1'd1)))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        ap_sig_allocacmp_resWrite_assign_load = resWrite;
    end else begin
        ap_sig_allocacmp_resWrite_assign_load = resWrite_assign_fu_324;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        if ((trunc_ln395_reg_1820 == 1'd1)) begin
            grp_feed_network_fu_696_mem_req_buff_q0 = mem_req_buff_V_0_q0;
        end else if ((trunc_ln395_reg_1820 == 1'd0)) begin
            grp_feed_network_fu_696_mem_req_buff_q0 = mem_req_buff_V_1_q0;
        end else begin
            grp_feed_network_fu_696_mem_req_buff_q0 = 'bx;
        end
    end else begin
        grp_feed_network_fu_696_mem_req_buff_q0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        if ((trunc_ln395_reg_1820 == 1'd1)) begin
            grp_feed_network_fu_696_n_mem_tuples = n_tuple_0_fu_336;
        end else if ((trunc_ln395_reg_1820 == 1'd0)) begin
            grp_feed_network_fu_696_n_mem_tuples = n_tuple_1_fu_340;
        end else begin
            grp_feed_network_fu_696_n_mem_tuples = 'bx;
        end
    end else begin
        grp_feed_network_fu_696_n_mem_tuples = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        grp_fu_785_p1 = zext_ln377_reg_1724;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        grp_fu_785_p1 = zext_ln377_fu_937_p1;
    end else begin
        grp_fu_785_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_state9_on_subcall_done) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln352_reg_1658 == 1'd1)))) begin
        launch_recv = 1'd1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        launch_recv = 1'd0;
    end else begin
        launch_recv = launch_recv_preg;
    end
end

always @ (*) begin
    if (((trunc_ln395_reg_1820 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        mem_req_buff_V_0_ce0 = grp_feed_network_fu_696_mem_req_buff_ce0;
    end else begin
        mem_req_buff_V_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln395_reg_1820 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        mem_req_buff_V_0_ce1 = grp_gen_access_tuple_fu_686_mem_req_buff_ce1;
    end else begin
        mem_req_buff_V_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln395_reg_1820 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        mem_req_buff_V_0_we1 = grp_gen_access_tuple_fu_686_mem_req_buff_we1;
    end else begin
        mem_req_buff_V_0_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln395_reg_1820 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        mem_req_buff_V_1_ce0 = grp_feed_network_fu_696_mem_req_buff_ce0;
    end else begin
        mem_req_buff_V_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln395_reg_1820 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        mem_req_buff_V_1_ce1 = grp_gen_access_tuple_fu_686_mem_req_buff_ce1;
    end else begin
        mem_req_buff_V_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((trunc_ln395_reg_1820 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
        mem_req_buff_V_1_we1 = grp_gen_access_tuple_fu_686_mem_req_buff_we1;
    end else begin
        mem_req_buff_V_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln352_reg_1658 == 1'd1))) begin
        ofst_buff_address1 = grp_BuffOfst_fu_767_ofst_buff_address1;
    end else if ((((trunc_ln395_reg_1820 == 1'd1) & (1'b1 == ap_CS_fsm_state11)) | ((trunc_ln395_reg_1820 == 1'd0) & (1'b1 == ap_CS_fsm_state11)))) begin
        ofst_buff_address1 = grp_gen_access_tuple_fu_686_ofst_buff_address1;
    end else begin
        ofst_buff_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((trunc_ln395_reg_1820 == 1'd1) & (1'b1 == ap_CS_fsm_state11)) | ((trunc_ln395_reg_1820 == 1'd0) & (1'b1 == ap_CS_fsm_state11)))) begin
        ofst_buff_ce0 = grp_gen_access_tuple_fu_686_ofst_buff_ce0;
    end else begin
        ofst_buff_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln352_reg_1658 == 1'd1))) begin
        ofst_buff_ce1 = grp_BuffOfst_fu_767_ofst_buff_ce1;
    end else if ((((trunc_ln395_reg_1820 == 1'd1) & (1'b1 == ap_CS_fsm_state11)) | ((trunc_ln395_reg_1820 == 1'd0) & (1'b1 == ap_CS_fsm_state11)))) begin
        ofst_buff_ce1 = grp_gen_access_tuple_fu_686_ofst_buff_ce1;
    end else begin
        ofst_buff_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln352_reg_1658 == 1'd1))) begin
        ofst_buff_we1 = grp_BuffOfst_fu_767_ofst_buff_we1;
    end else begin
        ofst_buff_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state9_on_subcall_done) & (1'b1 == ap_CS_fsm_state9))) begin
        rd_baseAddr = CSR_E_cast_reg_1634;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        rd_baseAddr = CSR_V_cast_reg_1629;
    end else begin
        rd_baseAddr = rd_baseAddr_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln352_reg_1658 == 1'd1))) begin
        rd_port_TREADY_int_regslice = grp_BuffOfst_fu_767_rd_port_TREADY;
    end else if ((((trunc_ln395_reg_1820 == 1'd1) & (1'b1 == ap_CS_fsm_state11)) | ((trunc_ln395_reg_1820 == 1'd0) & (1'b1 == ap_CS_fsm_state11)))) begin
        rd_port_TREADY_int_regslice = grp_feed_network_fu_696_rd_port_TREADY;
    end else begin
        rd_port_TREADY_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln352_reg_1658 == 1'd1))) begin
        rd_req_V_din = grp_BuffOfst_fu_767_rd_req_V_din;
    end else if ((((trunc_ln395_reg_1820 == 1'd1) & (1'b1 == ap_CS_fsm_state11)) | ((trunc_ln395_reg_1820 == 1'd0) & (1'b1 == ap_CS_fsm_state11)))) begin
        rd_req_V_din = grp_feed_network_fu_696_rd_req_V_din;
    end else begin
        rd_req_V_din = grp_BuffOfst_fu_767_rd_req_V_din;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & (icmp_ln352_reg_1658 == 1'd1))) begin
        rd_req_V_write = grp_BuffOfst_fu_767_rd_req_V_write;
    end else if ((((trunc_ln395_reg_1820 == 1'd1) & (1'b1 == ap_CS_fsm_state11)) | ((trunc_ln395_reg_1820 == 1'd0) & (1'b1 == ap_CS_fsm_state11)))) begin
        rd_req_V_write = grp_feed_network_fu_696_rd_req_V_write;
    end else begin
        rd_req_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        rd_start = 1'd0;
    end else if (((grp_BuffOfst_fu_767_rd_start_ap_vld == 1'b1) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln352_reg_1658 == 1'd1))) begin
        rd_start = grp_BuffOfst_fu_767_rd_start;
    end else if ((((grp_feed_network_fu_696_rd_start_ap_vld == 1'b1) & (trunc_ln395_reg_1820 == 1'd1) & (1'b1 == ap_CS_fsm_state11)) | ((grp_feed_network_fu_696_rd_start_ap_vld == 1'b1) & (trunc_ln395_reg_1820 == 1'd0) & (1'b1 == ap_CS_fsm_state11)))) begin
        rd_start = grp_feed_network_fu_696_rd_start;
    end else begin
        rd_start = rd_start_preg;
    end
end

always @ (*) begin
    if ((((trunc_ln395_reg_1820 == 1'd1) & (1'b1 == ap_CS_fsm_state11)) | ((trunc_ln395_reg_1820 == 1'd0) & (1'b1 == ap_CS_fsm_state11)))) begin
        sw_data_0_V_write = grp_feed_network_fu_696_sw_data_0_V_write;
    end else begin
        sw_data_0_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((trunc_ln395_reg_1820 == 1'd1) & (1'b1 == ap_CS_fsm_state11)) | ((trunc_ln395_reg_1820 == 1'd0) & (1'b1 == ap_CS_fsm_state11)))) begin
        sw_data_1_V_write = grp_feed_network_fu_696_sw_data_1_V_write;
    end else begin
        sw_data_1_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((trunc_ln395_reg_1820 == 1'd1) & (1'b1 == ap_CS_fsm_state11)) | ((trunc_ln395_reg_1820 == 1'd0) & (1'b1 == ap_CS_fsm_state11)))) begin
        sw_data_2_V_write = grp_feed_network_fu_696_sw_data_2_V_write;
    end else begin
        sw_data_2_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((((trunc_ln395_reg_1820 == 1'd1) & (1'b1 == ap_CS_fsm_state11)) | ((trunc_ln395_reg_1820 == 1'd0) & (1'b1 == ap_CS_fsm_state11)))) begin
        sw_data_3_V_write = grp_feed_network_fu_696_sw_data_3_V_write;
    end else begin
        sw_data_3_V_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_dist_0_address0 = zext_ln379_fu_1425_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_dist_0_address0 = idxprom58_fu_881_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_dist_0_address0 = grp_WrDist_fu_738_tmp_dist_0_address0;
    end else if ((((trunc_ln395_reg_1820 == 1'd1) & (1'b1 == ap_CS_fsm_state11)) | ((trunc_ln395_reg_1820 == 1'd0) & (1'b1 == ap_CS_fsm_state11)))) begin
        tmp_dist_0_address0 = grp_feed_network_fu_696_tmp_dist_0_address0;
    end else begin
        tmp_dist_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        tmp_dist_0_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_dist_0_ce0 = grp_WrDist_fu_738_tmp_dist_0_ce0;
    end else if ((((trunc_ln395_reg_1820 == 1'd1) & (1'b1 == ap_CS_fsm_state11)) | ((trunc_ln395_reg_1820 == 1'd0) & (1'b1 == ap_CS_fsm_state11)))) begin
        tmp_dist_0_ce0 = grp_feed_network_fu_696_tmp_dist_0_ce0;
    end else begin
        tmp_dist_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_dist_0_d0 = wrVal_reg_1793;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_dist_0_d0 = 64'd18446744073709551615;
    end else begin
        tmp_dist_0_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((rootBank_reg_1720 == 3'd0) & (icmp_ln366_reg_1716 == 1'd1) & (1'b1 == ap_CS_fsm_state7)) | ((icmp_ln354_fu_875_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        tmp_dist_0_we0 = 1'b1;
    end else begin
        tmp_dist_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_dist_1_address0 = zext_ln379_fu_1425_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_dist_1_address0 = idxprom58_fu_881_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_dist_1_address0 = grp_WrDist_fu_738_tmp_dist_1_address0;
    end else if ((((trunc_ln395_reg_1820 == 1'd1) & (1'b1 == ap_CS_fsm_state11)) | ((trunc_ln395_reg_1820 == 1'd0) & (1'b1 == ap_CS_fsm_state11)))) begin
        tmp_dist_1_address0 = grp_feed_network_fu_696_tmp_dist_1_address0;
    end else begin
        tmp_dist_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        tmp_dist_1_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_dist_1_ce0 = grp_WrDist_fu_738_tmp_dist_1_ce0;
    end else if ((((trunc_ln395_reg_1820 == 1'd1) & (1'b1 == ap_CS_fsm_state11)) | ((trunc_ln395_reg_1820 == 1'd0) & (1'b1 == ap_CS_fsm_state11)))) begin
        tmp_dist_1_ce0 = grp_feed_network_fu_696_tmp_dist_1_ce0;
    end else begin
        tmp_dist_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_dist_1_d0 = wrVal_reg_1793;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_dist_1_d0 = 64'd18446744073709551615;
    end else begin
        tmp_dist_1_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((rootBank_reg_1720 == 3'd1) & (icmp_ln366_reg_1716 == 1'd1) & (1'b1 == ap_CS_fsm_state7)) | ((icmp_ln354_fu_875_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        tmp_dist_1_we0 = 1'b1;
    end else begin
        tmp_dist_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_dist_2_address0 = zext_ln379_fu_1425_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_dist_2_address0 = idxprom58_fu_881_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_dist_2_address0 = grp_WrDist_fu_738_tmp_dist_2_address0;
    end else if ((((trunc_ln395_reg_1820 == 1'd1) & (1'b1 == ap_CS_fsm_state11)) | ((trunc_ln395_reg_1820 == 1'd0) & (1'b1 == ap_CS_fsm_state11)))) begin
        tmp_dist_2_address0 = grp_feed_network_fu_696_tmp_dist_2_address0;
    end else begin
        tmp_dist_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        tmp_dist_2_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_dist_2_ce0 = grp_WrDist_fu_738_tmp_dist_2_ce0;
    end else if ((((trunc_ln395_reg_1820 == 1'd1) & (1'b1 == ap_CS_fsm_state11)) | ((trunc_ln395_reg_1820 == 1'd0) & (1'b1 == ap_CS_fsm_state11)))) begin
        tmp_dist_2_ce0 = grp_feed_network_fu_696_tmp_dist_2_ce0;
    end else begin
        tmp_dist_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_dist_2_d0 = wrVal_reg_1793;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_dist_2_d0 = 64'd18446744073709551615;
    end else begin
        tmp_dist_2_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((rootBank_reg_1720 == 3'd2) & (icmp_ln366_reg_1716 == 1'd1) & (1'b1 == ap_CS_fsm_state7)) | ((icmp_ln354_fu_875_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        tmp_dist_2_we0 = 1'b1;
    end else begin
        tmp_dist_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_dist_3_address0 = zext_ln379_fu_1425_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_dist_3_address0 = idxprom58_fu_881_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_dist_3_address0 = grp_WrDist_fu_738_tmp_dist_3_address0;
    end else if ((((trunc_ln395_reg_1820 == 1'd1) & (1'b1 == ap_CS_fsm_state11)) | ((trunc_ln395_reg_1820 == 1'd0) & (1'b1 == ap_CS_fsm_state11)))) begin
        tmp_dist_3_address0 = grp_feed_network_fu_696_tmp_dist_3_address0;
    end else begin
        tmp_dist_3_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        tmp_dist_3_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_dist_3_ce0 = grp_WrDist_fu_738_tmp_dist_3_ce0;
    end else if ((((trunc_ln395_reg_1820 == 1'd1) & (1'b1 == ap_CS_fsm_state11)) | ((trunc_ln395_reg_1820 == 1'd0) & (1'b1 == ap_CS_fsm_state11)))) begin
        tmp_dist_3_ce0 = grp_feed_network_fu_696_tmp_dist_3_ce0;
    end else begin
        tmp_dist_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_dist_3_d0 = wrVal_reg_1793;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_dist_3_d0 = 64'd18446744073709551615;
    end else begin
        tmp_dist_3_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((rootBank_reg_1720 == 3'd3) & (icmp_ln366_reg_1716 == 1'd1) & (1'b1 == ap_CS_fsm_state7)) | ((icmp_ln354_fu_875_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        tmp_dist_3_we0 = 1'b1;
    end else begin
        tmp_dist_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_dist_4_address0 = zext_ln379_fu_1425_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_dist_4_address0 = idxprom58_fu_881_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_dist_4_address0 = grp_WrDist_fu_738_tmp_dist_4_address0;
    end else if ((((trunc_ln395_reg_1820 == 1'd1) & (1'b1 == ap_CS_fsm_state11)) | ((trunc_ln395_reg_1820 == 1'd0) & (1'b1 == ap_CS_fsm_state11)))) begin
        tmp_dist_4_address0 = grp_feed_network_fu_696_tmp_dist_4_address0;
    end else begin
        tmp_dist_4_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        tmp_dist_4_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_dist_4_ce0 = grp_WrDist_fu_738_tmp_dist_4_ce0;
    end else if ((((trunc_ln395_reg_1820 == 1'd1) & (1'b1 == ap_CS_fsm_state11)) | ((trunc_ln395_reg_1820 == 1'd0) & (1'b1 == ap_CS_fsm_state11)))) begin
        tmp_dist_4_ce0 = grp_feed_network_fu_696_tmp_dist_4_ce0;
    end else begin
        tmp_dist_4_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_dist_4_d0 = wrVal_reg_1793;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_dist_4_d0 = 64'd18446744073709551615;
    end else begin
        tmp_dist_4_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((rootBank_reg_1720 == 3'd4) & (icmp_ln366_reg_1716 == 1'd1) & (1'b1 == ap_CS_fsm_state7)) | ((icmp_ln354_fu_875_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        tmp_dist_4_we0 = 1'b1;
    end else begin
        tmp_dist_4_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_dist_5_address0 = zext_ln379_fu_1425_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_dist_5_address0 = idxprom58_fu_881_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_dist_5_address0 = grp_WrDist_fu_738_tmp_dist_5_address0;
    end else if ((((trunc_ln395_reg_1820 == 1'd1) & (1'b1 == ap_CS_fsm_state11)) | ((trunc_ln395_reg_1820 == 1'd0) & (1'b1 == ap_CS_fsm_state11)))) begin
        tmp_dist_5_address0 = grp_feed_network_fu_696_tmp_dist_5_address0;
    end else begin
        tmp_dist_5_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        tmp_dist_5_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_dist_5_ce0 = grp_WrDist_fu_738_tmp_dist_5_ce0;
    end else if ((((trunc_ln395_reg_1820 == 1'd1) & (1'b1 == ap_CS_fsm_state11)) | ((trunc_ln395_reg_1820 == 1'd0) & (1'b1 == ap_CS_fsm_state11)))) begin
        tmp_dist_5_ce0 = grp_feed_network_fu_696_tmp_dist_5_ce0;
    end else begin
        tmp_dist_5_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_dist_5_d0 = wrVal_reg_1793;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_dist_5_d0 = 64'd18446744073709551615;
    end else begin
        tmp_dist_5_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((rootBank_reg_1720 == 3'd5) & (icmp_ln366_reg_1716 == 1'd1) & (1'b1 == ap_CS_fsm_state7)) | ((icmp_ln354_fu_875_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        tmp_dist_5_we0 = 1'b1;
    end else begin
        tmp_dist_5_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_dist_6_address0 = zext_ln379_fu_1425_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_dist_6_address0 = idxprom58_fu_881_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_dist_6_address0 = grp_WrDist_fu_738_tmp_dist_6_address0;
    end else if ((((trunc_ln395_reg_1820 == 1'd1) & (1'b1 == ap_CS_fsm_state11)) | ((trunc_ln395_reg_1820 == 1'd0) & (1'b1 == ap_CS_fsm_state11)))) begin
        tmp_dist_6_address0 = grp_feed_network_fu_696_tmp_dist_6_address0;
    end else begin
        tmp_dist_6_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        tmp_dist_6_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_dist_6_ce0 = grp_WrDist_fu_738_tmp_dist_6_ce0;
    end else if ((((trunc_ln395_reg_1820 == 1'd1) & (1'b1 == ap_CS_fsm_state11)) | ((trunc_ln395_reg_1820 == 1'd0) & (1'b1 == ap_CS_fsm_state11)))) begin
        tmp_dist_6_ce0 = grp_feed_network_fu_696_tmp_dist_6_ce0;
    end else begin
        tmp_dist_6_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_dist_6_d0 = wrVal_reg_1793;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_dist_6_d0 = 64'd18446744073709551615;
    end else begin
        tmp_dist_6_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((rootBank_reg_1720 == 3'd6) & (icmp_ln366_reg_1716 == 1'd1) & (1'b1 == ap_CS_fsm_state7)) | ((icmp_ln354_fu_875_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        tmp_dist_6_we0 = 1'b1;
    end else begin
        tmp_dist_6_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_dist_7_address0 = zext_ln379_fu_1425_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_dist_7_address0 = idxprom58_fu_881_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_dist_7_address0 = grp_WrDist_fu_738_tmp_dist_7_address0;
    end else if ((((trunc_ln395_reg_1820 == 1'd1) & (1'b1 == ap_CS_fsm_state11)) | ((trunc_ln395_reg_1820 == 1'd0) & (1'b1 == ap_CS_fsm_state11)))) begin
        tmp_dist_7_address0 = grp_feed_network_fu_696_tmp_dist_7_address0;
    end else begin
        tmp_dist_7_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | ((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        tmp_dist_7_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        tmp_dist_7_ce0 = grp_WrDist_fu_738_tmp_dist_7_ce0;
    end else if ((((trunc_ln395_reg_1820 == 1'd1) & (1'b1 == ap_CS_fsm_state11)) | ((trunc_ln395_reg_1820 == 1'd0) & (1'b1 == ap_CS_fsm_state11)))) begin
        tmp_dist_7_ce0 = grp_feed_network_fu_696_tmp_dist_7_ce0;
    end else begin
        tmp_dist_7_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_dist_7_d0 = wrVal_reg_1793;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
        tmp_dist_7_d0 = 64'd18446744073709551615;
    end else begin
        tmp_dist_7_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((rootBank_reg_1720 == 3'd7) & (icmp_ln366_reg_1716 == 1'd1) & (1'b1 == ap_CS_fsm_state7)) | ((icmp_ln354_fu_875_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1)))) begin
        tmp_dist_7_we0 = 1'b1;
    end else begin
        tmp_dist_7_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln323_fu_1524_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        wr_baseAddr = zext_ln534_fu_1543_p1;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (resWrite_assign_load_load_fu_854_p1 == 1'd1))) begin
        wr_baseAddr = glbl_d_cast10_fu_810_p1;
    end else begin
        wr_baseAddr = wr_baseAddr_preg;
    end
end

always @ (*) begin
    if (((icmp_ln323_fu_1524_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
        wr_len = 16'd1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        wr_len = shl_ln320_fu_1511_p2;
    end else begin
        wr_len = wr_len_preg;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state17) | ((1'b1 == ap_CS_fsm_state15) & (tmp_fu_1553_p3 == 1'd1)))) begin
        wr_port_TDATA_blk_n = wr_port_TREADY_int_regslice;
    end else begin
        wr_port_TDATA_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((tmp_fu_1553_p3 == 1'd1) & (wr_port_TREADY_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state15) & (tmp_fu_1553_p3 == 1'd1))) begin
        wr_port_TDATA_int_regslice = zext_ln312_6_fu_1576_p1;
    end else if (((grp_WrDist_fu_738_wr_port_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        wr_port_TDATA_int_regslice = grp_WrDist_fu_738_wr_port_TDATA;
    end else begin
        wr_port_TDATA_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((~((tmp_fu_1553_p3 == 1'd1) & (wr_port_TREADY_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state15) & (tmp_fu_1553_p3 == 1'd1))) begin
        wr_port_TKEEP_int_regslice = 16'd0;
    end else if (((grp_WrDist_fu_738_wr_port_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        wr_port_TKEEP_int_regslice = grp_WrDist_fu_738_wr_port_TKEEP;
    end else begin
        wr_port_TKEEP_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((~((tmp_fu_1553_p3 == 1'd1) & (wr_port_TREADY_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state15) & (tmp_fu_1553_p3 == 1'd1))) begin
        wr_port_TLAST_int_regslice = 1'd0;
    end else if (((grp_WrDist_fu_738_wr_port_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        wr_port_TLAST_int_regslice = grp_WrDist_fu_738_wr_port_TLAST;
    end else begin
        wr_port_TLAST_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((~((tmp_fu_1553_p3 == 1'd1) & (wr_port_TREADY_int_regslice == 1'b0)) & (1'b1 == ap_CS_fsm_state15) & (tmp_fu_1553_p3 == 1'd1))) begin
        wr_port_TSTRB_int_regslice = 16'd0;
    end else if (((grp_WrDist_fu_738_wr_port_TVALID == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        wr_port_TSTRB_int_regslice = grp_WrDist_fu_738_wr_port_TSTRB;
    end else begin
        wr_port_TSTRB_int_regslice = 'bx;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state15_io) | ((tmp_fu_1553_p3 == 1'd1) & (wr_port_TREADY_int_regslice == 1'b0))) & (1'b1 == ap_CS_fsm_state15) & (tmp_fu_1553_p3 == 1'd1))) begin
        wr_port_TVALID_int_regslice = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        wr_port_TVALID_int_regslice = grp_WrDist_fu_738_wr_port_TVALID;
    end else begin
        wr_port_TVALID_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state12) | ((1'b1 == ap_CS_fsm_state17) & (wr_port_TREADY_int_regslice == 1'b1)))) begin
        wr_start = 1'd1;
    end else if ((((icmp_ln323_fu_1524_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        wr_start = 1'd0;
    end else begin
        wr_start = wr_start_preg;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln352_fu_857_p2 == 1'd1) & (resWrite_assign_load_load_fu_854_p1 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (icmp_ln352_fu_857_p2 == 1'd0) & (resWrite_assign_load_load_fu_854_p1 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1) & (resWrite_assign_load_load_fu_854_p1 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((icmp_ln354_fu_875_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln354_fu_875_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((icmp_ln366_fu_899_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((1'b0 == ap_block_state9_on_subcall_done) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end
        end
        ap_ST_fsm_state10 : begin
            if (((regslice_both_wr_port_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state10) & ((icmp_ln395_fu_1476_p2 == 1'd1) | (resWrite_assign_load_reg_1649 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else if (((icmp_ln395_fu_1476_p2 == 1'd0) & (regslice_both_wr_port_V_data_V_U_apdone_blk == 1'b0) & (1'b1 == ap_CS_fsm_state10) & (resWrite_assign_load_reg_1649 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            if (((1'b0 == ap_block_state11_on_subcall_done) & (1'b1 == ap_CS_fsm_state11))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((icmp_ln332_fu_1548_p2 == 1'd1) & (icmp_ln323_fu_1524_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else if (((icmp_ln332_fu_1548_p2 == 1'd0) & (icmp_ln323_fu_1524_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            if (((grp_WrDist_fu_738_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            if ((~((1'b1 == ap_block_state15_io) | ((tmp_fu_1553_p3 == 1'd1) & (wr_port_TREADY_int_regslice == 1'b0))) & (1'b1 == ap_CS_fsm_state15) & (tmp_fu_1553_p3 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else if ((~((1'b1 == ap_block_state15_io) | ((tmp_fu_1553_p3 == 1'd1) & (wr_port_TREADY_int_regslice == 1'b0))) & (1'b1 == ap_CS_fsm_state15) & (tmp_fu_1553_p3 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state17 : begin
            if (((1'b1 == ap_CS_fsm_state17) & (wr_port_TREADY_int_regslice == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign CSR_E_cast_fu_806_p1 = CSR_E;

assign CSR_V_cast_fu_802_p1 = CSR_V;

assign W_ref1_fu_972_p3 = ((tmp_6_fu_948_p3[0:0] == 1'b1) ? add_ln684_fu_966_p2 : zext_ln684_fu_962_p1);

assign W_ref2_fu_992_p3 = ((icmp_ln684_fu_980_p2[0:0] == 1'b1) ? zext_ln377_fu_937_p1 : sub_ln684_1_fu_986_p2);

assign add105_fu_1461_p2 = (zext_ln306_reg_1639 + 22'd2);

assign add_ln310_fu_1239_p2 = ($signed(W_ref2_reg_1740) + $signed(7'd127));

assign add_ln312_1_fu_1068_p2 = ($signed(sext_ln312_fu_1064_p1) + $signed(sext_ln307_1_fu_1000_p1));

assign add_ln312_fu_1042_p2 = (W_ref1_fu_972_p3 + 7'd7);

assign add_ln318_fu_1498_p2 = (trunc_ln2_fu_1489_p4 + 16'd1);

assign add_ln334_fu_1561_p2 = (cnt_oot_reg_675 + 7'd2);

assign add_ln377_fu_942_p2 = (zext_ln377_fu_937_p1 + 7'd8);

assign add_ln388_fu_1445_p2 = (trunc_ln3_fu_1436_p4 + 20'd2);

assign add_ln674_fu_1022_p2 = ($signed(zext_ln377_fu_937_p1) + $signed(7'd73));

assign add_ln684_fu_966_p2 = ($signed(zext_ln377_fu_937_p1) + $signed(7'd74));

assign and_ln312_2_fu_1372_p2 = (shl_ln312_2_fu_1360_p2 & lshr_ln312_1_fu_1366_p2);

assign and_ln312_3_fu_1384_p2 = (xor_ln312_fu_1378_p2 & p_Result_19_fu_1268_p2);

assign and_ln312_4_fu_1390_p2 = (select_ln312_7_fu_1352_p3 & and_ln312_2_fu_1372_p2);

assign and_ln312_fu_1227_p2 = (shl_ln312_fu_1215_p2 & lshr_ln312_fu_1221_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state11_on_subcall_done = (((grp_gen_access_tuple_fu_686_ap_done == 1'b0) & (trunc_ln395_reg_1820 == 1'd1)) | ((grp_gen_access_tuple_fu_686_ap_done == 1'b0) & (trunc_ln395_reg_1820 == 1'd0)) | ((grp_feed_network_fu_696_ap_done == 1'b0) & (trunc_ln395_reg_1820 == 1'd1)) | ((grp_feed_network_fu_696_ap_done == 1'b0) & (trunc_ln395_reg_1820 == 1'd0)));
end

always @ (*) begin
    ap_block_state15 = ((tmp_fu_1553_p3 == 1'd1) & (wr_port_TREADY_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state15_io = ((tmp_fu_1553_p3 == 1'd1) & (wr_port_TREADY_int_regslice == 1'b0));
end

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state9_on_subcall_done = ((grp_BuffOfst_fu_767_ap_done == 1'b0) & (icmp_ln352_reg_1658 == 1'd1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

always @ (*) begin
    ap_rst_n_inv = ~ap_rst_n;
end

assign empty_154_fu_794_p1 = root[4:0];

assign empty_155_fu_798_p1 = N_Vertex[14:0];

assign empty_fu_790_p1 = root[22:0];

assign glbl_d_cast10_fu_810_p1 = glbl_d;

assign grp_BuffOfst_fu_767_ap_start = grp_BuffOfst_fu_767_ap_start_reg;

assign grp_WrDist_fu_738_ap_start = grp_WrDist_fu_738_ap_start_reg;

assign grp_WrDist_fu_738_wr_port_TREADY = (wr_port_TREADY_int_regslice & ap_CS_fsm_state14);

assign grp_feed_network_fu_696_ap_start = grp_feed_network_fu_696_ap_start_reg;

assign grp_fu_785_p2 = (7'd55 - grp_fu_785_p1);

assign grp_gen_access_tuple_fu_686_ap_start = grp_gen_access_tuple_fu_686_ap_start_reg;

assign i_3_fu_1518_p2 = (i_reg_664 + 16'd1);

assign i_5_fu_869_p2 = (i_4_reg_641 + 13'd1);

assign i_7_fu_1466_p2 = (i_6_reg_652 + 22'd1);

assign icmp_ln312_1_fu_1277_p2 = ((sext_ln307_fu_1096_p1 > sext_ln312_1_fu_1274_p1) ? 1'b1 : 1'b0);

assign icmp_ln312_fu_1058_p2 = ((tmp_8_fu_1048_p4 < 4'd1) ? 1'b1 : 1'b0);

assign icmp_ln318_fu_863_p2 = ((empty_155_fu_798_p1 == 15'd0) ? 1'b1 : 1'b0);

assign icmp_ln323_fu_1524_p2 = ((i_reg_664 == n_wr_iter_reg_1833) ? 1'b1 : 1'b0);

assign icmp_ln332_fu_1548_p2 = ((peID == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln352_fu_857_p2 = ((glblIterIdx == 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln354_fu_875_p2 = ((i_4_reg_641 == 13'd4096) ? 1'b1 : 1'b0);

assign icmp_ln366_fu_899_p2 = ((zext_ln366_1_fu_896_p1 == peID) ? 1'b1 : 1'b0);

assign icmp_ln372_1_fu_1080_p2 = ((rangeOfst_fu_919_p4 == 3'd0) ? 1'b1 : 1'b0);

assign icmp_ln372_fu_1074_p2 = ((rangeOfst_fu_919_p4 == 3'd7) ? 1'b1 : 1'b0);

assign icmp_ln395_fu_1476_p2 = ((i_6_reg_652 == add105_reg_1810) ? 1'b1 : 1'b0);

assign icmp_ln674_fu_1016_p2 = ((zext_ln674_1_fu_1012_p1 != 26'd0) ? 1'b1 : 1'b0);

assign icmp_ln684_fu_980_p2 = ((rangeOfst_fu_919_p4 != 3'd0) ? 1'b1 : 1'b0);

assign idxprom58_fu_881_p1 = i_4_reg_641;

assign lshr_ln310_fu_1262_p2 = 136'd87112285931760246646623899502532662132735 >> zext_ln310_1_fu_1258_p1;

assign lshr_ln312_1_fu_1366_p2 = 136'd87112285931760246646623899502532662132735 >> zext_ln312_5_fu_1332_p1;

assign lshr_ln312_fu_1221_p2 = 72'd4722366482869645213695 >> zext_ln312_1_fu_1167_p1;

assign lshr_ln674_1_fu_1133_p2 = 64'd18446744073709551615 >> zext_ln674_3_fu_1124_p1;

assign lshr_ln674_fu_1127_p2 = 64'd18446744073709551615 >> zext_ln674_2_fu_1120_p1;

assign n_wr_iter_fu_1504_p3 = ((icmp_ln318_reg_1662[0:0] == 1'b1) ? trunc_ln2_fu_1489_p4 : add_ln318_fu_1498_p2);

assign or_ln372_fu_1413_p2 = (icmp_ln372_reg_1777 | icmp_ln372_1_reg_1782);

assign p_Result_16_fu_1108_p2 = 64'd18446744073709551615 >> zext_ln674_fu_1104_p1;

assign p_Result_17_fu_1139_p2 = (lshr_ln674_fu_1127_p2 & lshr_ln674_1_fu_1133_p2);

assign p_Result_18_fu_1233_p2 = (select_ln312_3_fu_1208_p3 & and_ln312_fu_1227_p2);

assign p_Result_19_fu_1268_p2 = (zext_ln310_fu_1248_p1 & lshr_ln310_fu_1262_p2);

assign p_Result_20_fu_1396_p2 = (and_ln312_4_fu_1390_p2 | and_ln312_3_fu_1384_p2);

assign p_Result_s_fu_1567_p4 = {{{glblIterIdx}, {64'd0}}, {cycle_cnt}};

assign rangeOfst_fu_919_p4 = {{sub_ln368_fu_904_p2[10:8]}};

assign rd_port_TREADY = regslice_both_rd_port_V_data_V_U_ack_in;

assign resWrite_assign_load_load_fu_854_p1 = ap_sig_allocacmp_resWrite_assign_load;

assign ret_fu_1537_p2 = (zext_ln1346_fu_1534_p1 + 34'd258048);

assign rlt_tail_idx_fu_848_p2 = (zext_ln307_fu_844_p1 + 28'd1);

assign select_ln312_1_fu_1156_p3 = ((icmp_ln312_reg_1762[0:0] == 1'b1) ? 7'd63 : sub_ln312_fu_1151_p2);

assign select_ln312_2_fu_1191_p3 = ((icmp_ln312_reg_1762[0:0] == 1'b1) ? st_fu_1175_p3 : sf_fu_1183_p3);

assign select_ln312_3_fu_1208_p3 = ((icmp_ln312_reg_1762[0:0] == 1'b1) ? tmp_9_fu_1198_p4 : sf_fu_1183_p3);

assign select_ln312_4_fu_1296_p3 = ((icmp_ln312_1_fu_1277_p2[0:0] == 1'b1) ? sext_ln312_2_fu_1283_p1 : add_ln312_1_reg_1770);

assign select_ln312_5_fu_1303_p3 = ((icmp_ln312_1_fu_1277_p2[0:0] == 1'b1) ? add_ln312_1_reg_1770 : sext_ln312_2_fu_1283_p1);

assign select_ln312_6_fu_1310_p3 = ((icmp_ln312_1_fu_1277_p2[0:0] == 1'b1) ? sub_ln312_1_fu_1290_p2 : sext_ln312_2_fu_1283_p1);

assign select_ln312_7_fu_1352_p3 = ((icmp_ln312_1_fu_1277_p2[0:0] == 1'b1) ? tmp_12_fu_1342_p4 : shl_ln312_1_fu_1336_p2);

assign select_ln312_fu_1145_p3 = ((icmp_ln312_reg_1762[0:0] == 1'b1) ? add_ln312_reg_1757 : 7'd8);

assign select_ln372_fu_1406_p3 = ((icmp_ln372_1_reg_1782[0:0] == 1'b1) ? 64'd18446744073709551360 : 64'd72057594037927935);

assign select_ln674_1_fu_1114_p3 = ((icmp_ln674_reg_1747[0:0] == 1'b1) ? grp_fu_785_p2 : add_ln377_reg_1730);

assign select_ln674_fu_1028_p3 = ((icmp_ln674_fu_1016_p2[0:0] == 1'b1) ? add_ln674_fu_1022_p2 : grp_fu_785_p2);

assign sext_ln307_1_fu_1000_p1 = W_ref2_fu_992_p3;

assign sext_ln307_fu_1096_p1 = W_ref2_reg_1740;

assign sext_ln310_fu_1244_p1 = $signed(add_ln310_fu_1239_p2);

assign sext_ln312_1_fu_1274_p1 = add_ln312_1_reg_1770;

assign sext_ln312_2_fu_1283_p1 = W_ref2_reg_1740;

assign sext_ln312_fu_1064_p1 = add_ln312_fu_1042_p2;

assign sf_fu_1183_p3 = {{p_Result_17_fu_1139_p2}, {8'd0}};

assign shl_ln312_1_fu_1336_p2 = zext_ln312_2_fu_1286_p1 << zext_ln312_3_fu_1324_p1;

assign shl_ln312_2_fu_1360_p2 = 136'd87112285931760246646623899502532662132735 << zext_ln312_4_fu_1328_p1;

assign shl_ln312_fu_1215_p2 = 72'd4722366482869645213695 << zext_ln312_fu_1163_p1;

assign shl_ln320_fu_1511_p2 = n_wr_iter_fu_1504_p3 << 16'd6;

assign shl_ln4_fu_929_p3 = {{rangeOfst_fu_919_p4}, {3'd0}};

assign st_fu_1175_p3 = {{trunc_ln312_fu_1171_p1}, {63'd0}};

assign sub_ln310_fu_1252_p2 = ($signed(8'd135) - $signed(sext_ln310_fu_1244_p1));

assign sub_ln312_1_fu_1290_p2 = ($signed(8'd135) - $signed(sext_ln312_2_fu_1283_p1));

assign sub_ln312_2_fu_1318_p2 = ($signed(8'd135) - $signed(select_ln312_4_fu_1296_p3));

assign sub_ln312_fu_1151_p2 = ($signed(7'd64) - $signed(W_ref1_reg_1735));

assign sub_ln368_fu_904_p2 = (empty_reg_1598 - zext_ln366_fu_893_p1);

assign sub_ln674_3_fu_1036_p2 = (7'd63 - select_ln674_fu_1028_p3);

assign sub_ln674_fu_1099_p2 = ($signed(7'd64) - $signed(zext_ln377_reg_1724));

assign sub_ln684_1_fu_986_p2 = (7'd2 - zext_ln377_fu_937_p1);

assign sub_ln684_fu_956_p2 = ($signed(6'd56) - $signed(shl_ln4_fu_929_p3));

assign sw_data_0_V_din = grp_feed_network_fu_696_sw_data_0_V_din;

assign sw_data_1_V_din = grp_feed_network_fu_696_sw_data_1_V_din;

assign sw_data_2_V_din = grp_feed_network_fu_696_sw_data_2_V_din;

assign sw_data_3_V_din = grp_feed_network_fu_696_sw_data_3_V_din;

integer ap_tvar_int_0;

always @ (shl_ln312_1_fu_1336_p2) begin
    for (ap_tvar_int_0 = 136 - 1; ap_tvar_int_0 >= 0; ap_tvar_int_0 = ap_tvar_int_0 - 1) begin
        if (ap_tvar_int_0 > 135 - 0) begin
            tmp_12_fu_1342_p4[ap_tvar_int_0] = 1'b0;
        end else begin
            tmp_12_fu_1342_p4[ap_tvar_int_0] = shl_ln312_1_fu_1336_p2[135 - ap_tvar_int_0];
        end
    end
end

assign tmp_6_fu_948_p3 = add_ln377_fu_942_p2[32'd6];

assign tmp_7_fu_1004_p3 = add_ln377_fu_942_p2[32'd6];

assign tmp_8_fu_1048_p4 = {{add_ln312_fu_1042_p2[6:3]}};

integer ap_tvar_int_1;

always @ (select_ln312_2_fu_1191_p3) begin
    for (ap_tvar_int_1 = 72 - 1; ap_tvar_int_1 >= 0; ap_tvar_int_1 = ap_tvar_int_1 - 1) begin
        if (ap_tvar_int_1 > 71 - 0) begin
            tmp_9_fu_1198_p4[ap_tvar_int_1] = 1'b0;
        end else begin
            tmp_9_fu_1198_p4[ap_tvar_int_1] = select_ln312_2_fu_1191_p3[71 - ap_tvar_int_1];
        end
    end
end

assign tmp_fu_1553_p3 = cnt_oot_reg_675[32'd6];

assign trunc_ln1_fu_834_p4 = {{N_Vertex[31:5]}};

assign trunc_ln2_fu_1489_p4 = {{N_Vertex[30:15]}};

assign trunc_ln312_fu_1171_p1 = p_Result_17_fu_1139_p2[8:0];

assign trunc_ln325_fu_1529_p1 = i_reg_664[7:0];

assign trunc_ln371_fu_1402_p1 = p_Result_20_fu_1396_p2[63:0];

assign trunc_ln395_fu_1472_p1 = i_6_reg_652[0:0];

assign trunc_ln3_fu_1436_p4 = {{N_Vertex[26:7]}};

assign trunc_ln_fu_820_p4 = {{N_Vertex[31:11]}};

assign wrVal_fu_1417_p3 = ((or_ln372_fu_1413_p2[0:0] == 1'b1) ? select_ln372_fu_1406_p3 : trunc_ln371_fu_1402_p1);

assign wr_port_TVALID = regslice_both_wr_port_V_data_V_U_vld_out;

assign xor_ln312_fu_1378_p2 = (136'd18446744073709551615 ^ and_ln312_2_fu_1372_p2);

assign zext_ln1346_fu_1534_p1 = glbl_d;

assign zext_ln306_fu_830_p1 = trunc_ln_fu_820_p4;

assign zext_ln307_fu_844_p1 = trunc_ln1_fu_834_p4;

assign zext_ln310_1_fu_1258_p1 = sub_ln310_fu_1252_p2;

assign zext_ln310_fu_1248_p1 = p_Result_16_fu_1108_p2;

assign zext_ln312_1_fu_1167_p1 = select_ln312_1_fu_1156_p3;

assign zext_ln312_2_fu_1286_p1 = p_Result_18_fu_1233_p2;

assign zext_ln312_3_fu_1324_p1 = select_ln312_6_fu_1310_p3;

assign zext_ln312_4_fu_1328_p1 = select_ln312_5_fu_1303_p3;

assign zext_ln312_5_fu_1332_p1 = sub_ln312_2_fu_1318_p2;

assign zext_ln312_6_fu_1576_p1 = p_Result_s_fu_1567_p4;

assign zext_ln312_fu_1163_p1 = select_ln312_fu_1145_p3;

assign zext_ln366_1_fu_896_p1 = empty_154_reg_1603;

assign zext_ln366_fu_893_p1 = empty_154_reg_1603;

assign zext_ln377_fu_937_p1 = shl_ln4_fu_929_p3;

assign zext_ln379_fu_1425_p1 = lshr_ln_reg_1788;

assign zext_ln534_fu_1543_p1 = ret_fu_1537_p2;

assign zext_ln674_1_fu_1012_p1 = tmp_7_fu_1004_p3;

assign zext_ln674_2_fu_1120_p1 = select_ln674_1_fu_1114_p3;

assign zext_ln674_3_fu_1124_p1 = sub_ln674_3_reg_1752;

assign zext_ln674_fu_1104_p1 = sub_ln674_fu_1099_p2;

assign zext_ln684_fu_962_p1 = sub_ln684_fu_956_p2;

always @ (posedge ap_clk) begin
    CSR_V_cast_reg_1629[63:33] <= 31'b0000000000000000000000000000000;
    CSR_E_cast_reg_1634[63:33] <= 31'b0000000000000000000000000000000;
    zext_ln306_reg_1639[21] <= 1'b0;
    zext_ln377_reg_1724[2:0] <= 3'b000;
    zext_ln377_reg_1724[6] <= 1'b0;
    add_ln377_reg_1730[2:0] <= 3'b000;
    W_ref1_reg_1735[0] <= 1'b0;
    W_ref1_reg_1735[2] <= 1'b0;
    W_ref2_reg_1740[0] <= 1'b0;
    W_ref2_reg_1740[2] <= 1'b0;
    add_ln312_reg_1757[0] <= 1'b1;
    add_ln312_1_reg_1770[0] <= 1'b1;
    rd_start_preg <= 1'b0;
    wr_baseAddr_preg[63:34] <= 30'b000000000000000000000000000000;
    rd_baseAddr_preg[63:33] <= 31'b0000000000000000000000000000000;
    wr_len_preg[5:1] <= 5'b00000;
end

endmodule //BFS_Scatter
