#include "hls_design_meta.h"
const Port_Property HLS_Design_Meta::port_props[]={
	Port_Property("ap_clk", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_rst_n", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_start", 1, hls_in, -1, "", "", 1),
	Port_Property("ap_done", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_idle", 1, hls_out, -1, "", "", 1),
	Port_Property("ap_ready", 1, hls_out, -1, "", "", 1),
	Port_Property("CSR_V", 33, hls_in, 0, "ap_none", "in_data", 1),
	Port_Property("CSR_E", 33, hls_in, 1, "ap_none", "in_data", 1),
	Port_Property("glbl_d", 33, hls_in, 2, "ap_none", "in_data", 1),
	Port_Property("rd_baseAddr", 64, hls_out, 3, "ap_none", "out_data", 1),
	Port_Property("wr_baseAddr", 64, hls_out, 4, "ap_none", "out_data", 1),
	Port_Property("rd_port_TDATA", 128, hls_in, 5, "axis", "in_data", 1),
	Port_Property("rd_port_TVALID", 1, hls_in, 8, "axis", "in_vld", 1),
	Port_Property("rd_port_TREADY", 1, hls_out, 8, "axis", "in_acc", 1),
	Port_Property("rd_port_TKEEP", 16, hls_in, 6, "axis", "in_data", 1),
	Port_Property("rd_port_TSTRB", 16, hls_in, 7, "axis", "in_data", 1),
	Port_Property("rd_port_TLAST", 1, hls_in, 8, "axis", "in_data", 1),
	Port_Property("wr_port_TDATA", 128, hls_out, 9, "axis", "out_data", 1),
	Port_Property("wr_port_TVALID", 1, hls_out, 12, "axis", "out_vld", 1),
	Port_Property("wr_port_TREADY", 1, hls_in, 12, "axis", "out_acc", 1),
	Port_Property("wr_port_TKEEP", 16, hls_out, 10, "axis", "out_data", 1),
	Port_Property("wr_port_TSTRB", 16, hls_out, 11, "axis", "out_data", 1),
	Port_Property("wr_port_TLAST", 1, hls_out, 12, "axis", "out_data", 1),
	Port_Property("rd_req_V_din", 32, hls_out, 13, "ap_fifo", "fifo_data", 5),
	Port_Property("rd_req_V_full_n", 1, hls_in, 13, "ap_fifo", "fifo_status", 5),
	Port_Property("rd_req_V_write", 1, hls_out, 13, "ap_fifo", "fifo_update", 5),
	Port_Property("wr_len", 16, hls_out, 14, "ap_none", "out_data", 1),
	Port_Property("rd_start", 1, hls_out, 15, "ap_none", "out_data", 1),
	Port_Property("wr_start", 1, hls_out, 16, "ap_none", "out_data", 1),
	Port_Property("N_Vertex", 32, hls_in, 17, "ap_none", "in_data", 1),
	Port_Property("root", 32, hls_in, 18, "ap_none", "in_data", 1),
	Port_Property("peID", 8, hls_in, 19, "ap_none", "in_data", 1),
	Port_Property("sw_data_0_V_din", 32, hls_out, 20, "ap_fifo", "fifo_data", 4),
	Port_Property("sw_data_0_V_full_n", 1, hls_in, 20, "ap_fifo", "fifo_status", 4),
	Port_Property("sw_data_0_V_write", 1, hls_out, 20, "ap_fifo", "fifo_update", 4),
	Port_Property("sw_data_1_V_din", 32, hls_out, 21, "ap_fifo", "fifo_data", 4),
	Port_Property("sw_data_1_V_full_n", 1, hls_in, 21, "ap_fifo", "fifo_status", 4),
	Port_Property("sw_data_1_V_write", 1, hls_out, 21, "ap_fifo", "fifo_update", 4),
	Port_Property("sw_data_2_V_din", 32, hls_out, 22, "ap_fifo", "fifo_data", 4),
	Port_Property("sw_data_2_V_full_n", 1, hls_in, 22, "ap_fifo", "fifo_status", 4),
	Port_Property("sw_data_2_V_write", 1, hls_out, 22, "ap_fifo", "fifo_update", 4),
	Port_Property("sw_data_3_V_din", 32, hls_out, 23, "ap_fifo", "fifo_data", 4),
	Port_Property("sw_data_3_V_full_n", 1, hls_in, 23, "ap_fifo", "fifo_status", 4),
	Port_Property("sw_data_3_V_write", 1, hls_out, 23, "ap_fifo", "fifo_update", 4),
	Port_Property("glblIterIdx", 16, hls_in, 24, "ap_none", "in_data", 1),
	Port_Property("cycle_cnt", 32, hls_in, 25, "ap_none", "in_data", 1),
	Port_Property("launch_recv", 1, hls_out, 26, "ap_none", "out_data", 1),
	Port_Property("resWrite", 1, hls_in, 27, "ap_none", "in_data", 1),
	Port_Property("tmp_dist_0_address0", 12, hls_out, 28, "ap_memory", "mem_address", 1),
	Port_Property("tmp_dist_0_ce0", 1, hls_out, 28, "ap_memory", "mem_ce", 1),
	Port_Property("tmp_dist_0_we0", 1, hls_out, 28, "ap_memory", "mem_we", 1),
	Port_Property("tmp_dist_0_d0", 64, hls_out, 28, "ap_memory", "mem_din", 1),
	Port_Property("tmp_dist_0_q0", 64, hls_in, 28, "ap_memory", "mem_dout", 1),
	Port_Property("tmp_dist_1_address0", 12, hls_out, 29, "ap_memory", "mem_address", 1),
	Port_Property("tmp_dist_1_ce0", 1, hls_out, 29, "ap_memory", "mem_ce", 1),
	Port_Property("tmp_dist_1_we0", 1, hls_out, 29, "ap_memory", "mem_we", 1),
	Port_Property("tmp_dist_1_d0", 64, hls_out, 29, "ap_memory", "mem_din", 1),
	Port_Property("tmp_dist_1_q0", 64, hls_in, 29, "ap_memory", "mem_dout", 1),
	Port_Property("tmp_dist_2_address0", 12, hls_out, 30, "ap_memory", "mem_address", 1),
	Port_Property("tmp_dist_2_ce0", 1, hls_out, 30, "ap_memory", "mem_ce", 1),
	Port_Property("tmp_dist_2_we0", 1, hls_out, 30, "ap_memory", "mem_we", 1),
	Port_Property("tmp_dist_2_d0", 64, hls_out, 30, "ap_memory", "mem_din", 1),
	Port_Property("tmp_dist_2_q0", 64, hls_in, 30, "ap_memory", "mem_dout", 1),
	Port_Property("tmp_dist_3_address0", 12, hls_out, 31, "ap_memory", "mem_address", 1),
	Port_Property("tmp_dist_3_ce0", 1, hls_out, 31, "ap_memory", "mem_ce", 1),
	Port_Property("tmp_dist_3_we0", 1, hls_out, 31, "ap_memory", "mem_we", 1),
	Port_Property("tmp_dist_3_d0", 64, hls_out, 31, "ap_memory", "mem_din", 1),
	Port_Property("tmp_dist_3_q0", 64, hls_in, 31, "ap_memory", "mem_dout", 1),
	Port_Property("tmp_dist_4_address0", 12, hls_out, 32, "ap_memory", "mem_address", 1),
	Port_Property("tmp_dist_4_ce0", 1, hls_out, 32, "ap_memory", "mem_ce", 1),
	Port_Property("tmp_dist_4_we0", 1, hls_out, 32, "ap_memory", "mem_we", 1),
	Port_Property("tmp_dist_4_d0", 64, hls_out, 32, "ap_memory", "mem_din", 1),
	Port_Property("tmp_dist_4_q0", 64, hls_in, 32, "ap_memory", "mem_dout", 1),
	Port_Property("tmp_dist_5_address0", 12, hls_out, 33, "ap_memory", "mem_address", 1),
	Port_Property("tmp_dist_5_ce0", 1, hls_out, 33, "ap_memory", "mem_ce", 1),
	Port_Property("tmp_dist_5_we0", 1, hls_out, 33, "ap_memory", "mem_we", 1),
	Port_Property("tmp_dist_5_d0", 64, hls_out, 33, "ap_memory", "mem_din", 1),
	Port_Property("tmp_dist_5_q0", 64, hls_in, 33, "ap_memory", "mem_dout", 1),
	Port_Property("tmp_dist_6_address0", 12, hls_out, 34, "ap_memory", "mem_address", 1),
	Port_Property("tmp_dist_6_ce0", 1, hls_out, 34, "ap_memory", "mem_ce", 1),
	Port_Property("tmp_dist_6_we0", 1, hls_out, 34, "ap_memory", "mem_we", 1),
	Port_Property("tmp_dist_6_d0", 64, hls_out, 34, "ap_memory", "mem_din", 1),
	Port_Property("tmp_dist_6_q0", 64, hls_in, 34, "ap_memory", "mem_dout", 1),
	Port_Property("tmp_dist_7_address0", 12, hls_out, 35, "ap_memory", "mem_address", 1),
	Port_Property("tmp_dist_7_ce0", 1, hls_out, 35, "ap_memory", "mem_ce", 1),
	Port_Property("tmp_dist_7_we0", 1, hls_out, 35, "ap_memory", "mem_we", 1),
	Port_Property("tmp_dist_7_d0", 64, hls_out, 35, "ap_memory", "mem_din", 1),
	Port_Property("tmp_dist_7_q0", 64, hls_in, 35, "ap_memory", "mem_dout", 1),
};
const char* HLS_Design_Meta::dut_name = "BFS_Scatter";
