// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="BFS_Gather_BFS_Gather,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu280-fsvh2892-2L-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=4.371562,HLS_SYN_LAT=2,HLS_SYN_TPT=2,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=28,HLS_SYN_LUT=496,HLS_VERSION=2020_2}" *)

module BFS_Gather (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        peID,
        sw_data,
        exist,
        tmp_dist_address0,
        tmp_dist_ce0,
        tmp_dist_we0,
        tmp_dist_d0,
        tmp_dist_q0
);

parameter    ap_ST_fsm_pp0_stage0 = 2'd1;
parameter    ap_ST_fsm_pp0_stage1 = 2'd2;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] peID;
input  [31:0] sw_data;
output   exist;
output  [11:0] tmp_dist_address0;
output   tmp_dist_ce0;
output  [7:0] tmp_dist_we0;
output  [63:0] tmp_dist_d0;
input  [63:0] tmp_dist_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[11:0] tmp_dist_address0;
reg tmp_dist_ce0;
reg[7:0] tmp_dist_we0;
reg[63:0] tmp_dist_d0;

(* fsm_encoding = "none" *) reg   [1:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_pp0_stage1_11001;
reg    exist_1_data_reg;
reg    exist_1_data_in;
reg    exist_1_vld_reg;
reg    exist_1_vld_in;
reg    exist_1_ack_in;
reg   [7:0] srcDist_V_reg_622;
wire    ap_block_state1_pp0_stage0_iter0;
reg    ap_block_state3_pp0_stage0_iter1;
reg    ap_block_pp0_stage0_11001;
wire   [2:0] trunc_ln25_fu_285_p1;
reg   [2:0] trunc_ln25_reg_635;
reg   [11:0] tmp_dist_addr_reg_639;
wire   [0:0] icmp_ln878_7_fu_341_p2;
wire   [0:0] icmp_ln878_6_fu_383_p2;
wire   [0:0] icmp_ln878_5_fu_425_p2;
wire   [0:0] icmp_ln878_4_fu_467_p2;
wire   [0:0] icmp_ln878_3_fu_509_p2;
wire   [0:0] icmp_ln878_2_fu_551_p2;
wire   [0:0] icmp_ln878_1_fu_583_p2;
wire   [0:0] icmp_ln878_fu_611_p2;
reg    ap_enable_reg_pp0_iter0_reg;
reg    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage1_subdone;
wire   [63:0] zext_ln27_fu_299_p1;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage1_01001;
wire    ap_block_pp0_stage1;
wire   [63:0] zext_ln76_fu_355_p1;
wire   [63:0] zext_ln69_fu_397_p1;
wire   [63:0] zext_ln62_fu_439_p1;
wire   [63:0] zext_ln55_fu_481_p1;
wire   [63:0] zext_ln48_fu_523_p1;
wire   [63:0] zext_ln41_fu_565_p1;
wire   [63:0] shl_ln_fu_589_p3;
wire   [63:0] zext_ln34_fu_617_p1;
wire   [23:0] dstVid_V_fu_215_p1;
wire   [24:0] zext_ln215_1_fu_219_p1;
wire   [24:0] zext_ln215_fu_223_p1;
wire   [24:0] ret_fu_227_p2;
wire   [22:0] trunc_ln1347_fu_233_p1;
wire   [22:0] sub_ln1364_fu_245_p2;
wire   [14:0] trunc_ln1364_1_fu_251_p4;
wire   [0:0] tmp_6_fu_237_p3;
wire   [14:0] sub_ln1364_1_fu_261_p2;
wire   [14:0] trunc_ln1364_2_fu_267_p4;
wire   [14:0] rltDstIdx_fu_277_p3;
wire   [11:0] rltAddr_fu_289_p4;
wire   [8:0] zext_ln1346_7_fu_318_p1;
wire   [7:0] tmp_5_fu_327_p4;
wire   [8:0] ret_8_fu_321_p2;
wire   [8:0] zext_ln878_7_fu_337_p1;
wire   [7:0] grp_fu_200_p2;
wire   [55:0] shl_ln6_fu_347_p3;
wire   [8:0] zext_ln1346_6_fu_360_p1;
wire   [7:0] tmp_4_fu_369_p4;
wire   [8:0] ret_7_fu_363_p2;
wire   [8:0] zext_ln878_6_fu_379_p1;
wire   [47:0] shl_ln5_fu_389_p3;
wire   [8:0] zext_ln1346_5_fu_402_p1;
wire   [7:0] tmp_3_fu_411_p4;
wire   [8:0] ret_6_fu_405_p2;
wire   [8:0] zext_ln878_5_fu_421_p1;
wire   [39:0] shl_ln4_fu_431_p3;
wire   [8:0] zext_ln1346_4_fu_444_p1;
wire   [7:0] tmp_2_fu_453_p4;
wire   [8:0] ret_5_fu_447_p2;
wire   [8:0] zext_ln878_4_fu_463_p1;
wire   [31:0] shl_ln3_fu_473_p3;
wire   [8:0] zext_ln1346_3_fu_486_p1;
wire   [7:0] tmp_1_fu_495_p4;
wire   [8:0] ret_4_fu_489_p2;
wire   [8:0] zext_ln878_3_fu_505_p1;
wire   [23:0] shl_ln2_fu_515_p3;
wire   [8:0] zext_ln1346_2_fu_528_p1;
wire   [7:0] tmp_fu_537_p4;
wire   [8:0] ret_3_fu_531_p2;
wire   [8:0] zext_ln878_2_fu_547_p1;
wire   [15:0] shl_ln1_fu_557_p3;
wire   [8:0] zext_ln1346_1_fu_570_p1;
wire   [7:0] dstVal_val_7_V_fu_308_p4;
wire   [8:0] ret_2_fu_573_p2;
wire   [8:0] zext_ln878_1_fu_579_p1;
wire   [8:0] zext_ln1346_fu_598_p1;
wire   [7:0] dstVal_val_0_V_fu_304_p1;
wire   [8:0] ret_1_fu_601_p2;
wire   [8:0] zext_ln878_fu_607_p1;
reg   [1:0] ap_NS_fsm;
reg    ap_idle_pp0_0to0;
reg    ap_reset_idle_pp0;
reg    ap_idle_pp0_1to1;
wire    ap_enable_pp0;
reg    ap_condition_258;
reg    ap_condition_42;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 2'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 exist_1_data_reg = 1'b0;
#0 exist_1_vld_reg = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b1 == 1'b1) & (exist_1_vld_in == 1'b1) & (exist_1_vld_reg == 1'b1)) | (~((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (exist_1_vld_in == 1'b1) & (exist_1_vld_reg == 1'b0)))) begin
        exist_1_data_reg <= exist_1_data_in;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        srcDist_V_reg_622 <= {{sw_data[31:24]}};
        tmp_dist_addr_reg_639 <= zext_ln27_fu_299_p1;
        trunc_ln25_reg_635 <= trunc_ln25_fu_285_p1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b0)) begin
        ap_idle_pp0_0to0 = 1'b1;
    end else begin
        ap_idle_pp0_0to0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b0)) begin
        ap_idle_pp0_1to1 = 1'b1;
    end else begin
        ap_idle_pp0_1to1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (ap_idle_pp0_0to0 == 1'b1))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((exist_1_vld_reg == 1'b0) | ((1'b1 == 1'b1) & (exist_1_vld_reg == 1'b1)))) begin
        exist_1_ack_in = 1'b1;
    end else begin
        exist_1_ack_in = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln878_7_fu_341_p2 == 1'd1) & (trunc_ln25_reg_635 == 3'd6) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((trunc_ln25_reg_635 == 3'd0) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln878_fu_611_p2 == 1'd1)) | ((trunc_ln25_reg_635 == 3'd7) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln878_1_fu_583_p2 == 1'd1)) | ((trunc_ln25_reg_635 == 3'd1) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln878_2_fu_551_p2 == 1'd1)) | ((trunc_ln25_reg_635 == 3'd2) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln878_3_fu_509_p2 == 1'd1)) | ((trunc_ln25_reg_635 == 3'd3) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln878_4_fu_467_p2 == 1'd1)) | ((trunc_ln25_reg_635 == 3'd4) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln878_5_fu_425_p2 == 1'd1)) | ((trunc_ln25_reg_635 == 3'd5) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln878_6_fu_383_p2 == 1'd1)))) begin
        exist_1_data_in = 1'd1;
    end else if ((((icmp_ln878_7_fu_341_p2 == 1'd0) & (trunc_ln25_reg_635 == 3'd6) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((trunc_ln25_reg_635 == 3'd0) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln878_fu_611_p2 == 1'd0)) | ((trunc_ln25_reg_635 == 3'd7) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln878_1_fu_583_p2 == 1'd0)) | ((trunc_ln25_reg_635 == 3'd1) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln878_2_fu_551_p2 == 1'd0)) | ((trunc_ln25_reg_635 == 3'd2) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln878_3_fu_509_p2 == 1'd0)) | ((trunc_ln25_reg_635 == 3'd3) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln878_4_fu_467_p2 == 1'd0)) | ((trunc_ln25_reg_635 == 3'd4) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln878_5_fu_425_p2 == 1'd0)) | ((trunc_ln25_reg_635 == 3'd5) & (1'b0 == ap_block_pp0_stage1_01001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln878_6_fu_383_p2 == 1'd0)))) begin
        exist_1_data_in = 1'd0;
    end else begin
        exist_1_data_in = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln878_7_fu_341_p2 == 1'd1) & (trunc_ln25_reg_635 == 3'd6) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln878_7_fu_341_p2 == 1'd0) & (trunc_ln25_reg_635 == 3'd6) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((trunc_ln25_reg_635 == 3'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln878_fu_611_p2 == 1'd1)) | ((trunc_ln25_reg_635 == 3'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln878_fu_611_p2 == 1'd0)) | ((trunc_ln25_reg_635 == 3'd7) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln878_1_fu_583_p2 == 1'd1)) | ((trunc_ln25_reg_635 == 3'd7) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln878_1_fu_583_p2 == 1'd0)) | ((trunc_ln25_reg_635 == 3'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln878_2_fu_551_p2 == 1'd1)) | ((trunc_ln25_reg_635 == 3'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln878_2_fu_551_p2 == 1'd0)) | ((trunc_ln25_reg_635 == 3'd2) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln878_3_fu_509_p2 == 1'd1)) | ((trunc_ln25_reg_635 == 3'd2) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln878_3_fu_509_p2 == 1'd0)) | ((trunc_ln25_reg_635 == 3'd3) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln878_4_fu_467_p2 == 1'd1)) | ((trunc_ln25_reg_635 == 3'd3) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln878_4_fu_467_p2 == 1'd0)) | ((trunc_ln25_reg_635 == 3'd4) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln878_5_fu_425_p2 == 1'd1)) | ((trunc_ln25_reg_635 == 3'd4) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln878_5_fu_425_p2 == 1'd0)) | ((trunc_ln25_reg_635 == 3'd5) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln878_6_fu_383_p2 == 1'd1)) | ((trunc_ln25_reg_635 == 3'd5) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln878_6_fu_383_p2 == 1'd0)))) begin
        exist_1_vld_in = 1'b1;
    end else begin
        exist_1_vld_in = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln878_7_fu_341_p2 == 1'd1) & (trunc_ln25_reg_635 == 3'd6) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((trunc_ln25_reg_635 == 3'd0) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln878_fu_611_p2 == 1'd1)) | ((trunc_ln25_reg_635 == 3'd7) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln878_1_fu_583_p2 == 1'd1)) | ((trunc_ln25_reg_635 == 3'd1) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln878_2_fu_551_p2 == 1'd1)) | ((trunc_ln25_reg_635 == 3'd2) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln878_3_fu_509_p2 == 1'd1)) | ((trunc_ln25_reg_635 == 3'd3) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln878_4_fu_467_p2 == 1'd1)) | ((trunc_ln25_reg_635 == 3'd4) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln878_5_fu_425_p2 == 1'd1)) | ((trunc_ln25_reg_635 == 3'd5) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln878_6_fu_383_p2 == 1'd1)))) begin
        tmp_dist_address0 = tmp_dist_addr_reg_639;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_dist_address0 = zext_ln27_fu_299_p1;
    end else begin
        tmp_dist_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln878_7_fu_341_p2 == 1'd1) & (trunc_ln25_reg_635 == 3'd6) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((trunc_ln25_reg_635 == 3'd0) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln878_fu_611_p2 == 1'd1)) | ((trunc_ln25_reg_635 == 3'd7) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln878_1_fu_583_p2 == 1'd1)) | ((trunc_ln25_reg_635 == 3'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln878_2_fu_551_p2 == 1'd1)) | ((trunc_ln25_reg_635 == 3'd2) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln878_3_fu_509_p2 == 1'd1)) | ((trunc_ln25_reg_635 == 3'd3) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln878_4_fu_467_p2 == 1'd1)) | ((trunc_ln25_reg_635 == 3'd4) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln878_5_fu_425_p2 == 1'd1)) | ((trunc_ln25_reg_635 == 3'd5) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln878_6_fu_383_p2 == 1'd1)))) begin
        tmp_dist_ce0 = 1'b1;
    end else begin
        tmp_dist_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_258)) begin
        if (((trunc_ln25_reg_635 == 3'd0) & (icmp_ln878_fu_611_p2 == 1'd1))) begin
            tmp_dist_d0 = zext_ln34_fu_617_p1;
        end else if (((trunc_ln25_reg_635 == 3'd7) & (icmp_ln878_1_fu_583_p2 == 1'd1))) begin
            tmp_dist_d0 = shl_ln_fu_589_p3;
        end else if (((trunc_ln25_reg_635 == 3'd1) & (icmp_ln878_2_fu_551_p2 == 1'd1))) begin
            tmp_dist_d0 = zext_ln41_fu_565_p1;
        end else if (((trunc_ln25_reg_635 == 3'd2) & (icmp_ln878_3_fu_509_p2 == 1'd1))) begin
            tmp_dist_d0 = zext_ln48_fu_523_p1;
        end else if (((trunc_ln25_reg_635 == 3'd3) & (icmp_ln878_4_fu_467_p2 == 1'd1))) begin
            tmp_dist_d0 = zext_ln55_fu_481_p1;
        end else if (((trunc_ln25_reg_635 == 3'd4) & (icmp_ln878_5_fu_425_p2 == 1'd1))) begin
            tmp_dist_d0 = zext_ln62_fu_439_p1;
        end else if (((trunc_ln25_reg_635 == 3'd5) & (icmp_ln878_6_fu_383_p2 == 1'd1))) begin
            tmp_dist_d0 = zext_ln69_fu_397_p1;
        end else if (((icmp_ln878_7_fu_341_p2 == 1'd1) & (trunc_ln25_reg_635 == 3'd6))) begin
            tmp_dist_d0 = zext_ln76_fu_355_p1;
        end else begin
            tmp_dist_d0 = 'bx;
        end
    end else begin
        tmp_dist_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_condition_42)) begin
        if (((trunc_ln25_reg_635 == 3'd0) & (icmp_ln878_fu_611_p2 == 1'd1))) begin
            tmp_dist_we0 = 8'd1;
        end else if (((trunc_ln25_reg_635 == 3'd7) & (icmp_ln878_1_fu_583_p2 == 1'd1))) begin
            tmp_dist_we0 = 8'd128;
        end else if (((trunc_ln25_reg_635 == 3'd1) & (icmp_ln878_2_fu_551_p2 == 1'd1))) begin
            tmp_dist_we0 = 8'd2;
        end else if (((trunc_ln25_reg_635 == 3'd2) & (icmp_ln878_3_fu_509_p2 == 1'd1))) begin
            tmp_dist_we0 = 8'd4;
        end else if (((trunc_ln25_reg_635 == 3'd3) & (icmp_ln878_4_fu_467_p2 == 1'd1))) begin
            tmp_dist_we0 = 8'd8;
        end else if (((trunc_ln25_reg_635 == 3'd4) & (icmp_ln878_5_fu_425_p2 == 1'd1))) begin
            tmp_dist_we0 = 8'd16;
        end else if (((trunc_ln25_reg_635 == 3'd5) & (icmp_ln878_6_fu_383_p2 == 1'd1))) begin
            tmp_dist_we0 = 8'd32;
        end else if (((icmp_ln878_7_fu_341_p2 == 1'd1) & (trunc_ln25_reg_635 == 3'd6))) begin
            tmp_dist_we0 = 8'd64;
        end else begin
            tmp_dist_we0 = 8'd0;
        end
    end else begin
        tmp_dist_we0 = 8'd0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start == 1'b0) & (ap_idle_pp0_1to1 == 1'b1)) & (ap_reset_idle_pp0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_reset_idle_pp0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp0_stage0_11001 = ((exist_1_ack_in == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp0_stage0_subdone = ((exist_1_ack_in == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b1));
end

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state3_pp0_stage0_iter1 = (exist_1_ack_in == 1'b0);
end

always @ (*) begin
    ap_condition_258 = ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

always @ (*) begin
    ap_condition_42 = ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1));
end

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign dstVal_val_0_V_fu_304_p1 = tmp_dist_q0[7:0];

assign dstVal_val_7_V_fu_308_p4 = {{tmp_dist_q0[63:56]}};

assign dstVid_V_fu_215_p1 = sw_data[23:0];

assign exist = exist_1_data_reg;

assign grp_fu_200_p2 = (srcDist_V_reg_622 + 8'd1);

assign icmp_ln878_1_fu_583_p2 = ((ret_2_fu_573_p2 < zext_ln878_1_fu_579_p1) ? 1'b1 : 1'b0);

assign icmp_ln878_2_fu_551_p2 = ((ret_3_fu_531_p2 < zext_ln878_2_fu_547_p1) ? 1'b1 : 1'b0);

assign icmp_ln878_3_fu_509_p2 = ((ret_4_fu_489_p2 < zext_ln878_3_fu_505_p1) ? 1'b1 : 1'b0);

assign icmp_ln878_4_fu_467_p2 = ((ret_5_fu_447_p2 < zext_ln878_4_fu_463_p1) ? 1'b1 : 1'b0);

assign icmp_ln878_5_fu_425_p2 = ((ret_6_fu_405_p2 < zext_ln878_5_fu_421_p1) ? 1'b1 : 1'b0);

assign icmp_ln878_6_fu_383_p2 = ((ret_7_fu_363_p2 < zext_ln878_6_fu_379_p1) ? 1'b1 : 1'b0);

assign icmp_ln878_7_fu_341_p2 = ((ret_8_fu_321_p2 < zext_ln878_7_fu_337_p1) ? 1'b1 : 1'b0);

assign icmp_ln878_fu_611_p2 = ((ret_1_fu_601_p2 < zext_ln878_fu_607_p1) ? 1'b1 : 1'b0);

assign ret_1_fu_601_p2 = (zext_ln1346_fu_598_p1 + 9'd1);

assign ret_2_fu_573_p2 = (zext_ln1346_1_fu_570_p1 + 9'd1);

assign ret_3_fu_531_p2 = (zext_ln1346_2_fu_528_p1 + 9'd1);

assign ret_4_fu_489_p2 = (zext_ln1346_3_fu_486_p1 + 9'd1);

assign ret_5_fu_447_p2 = (zext_ln1346_4_fu_444_p1 + 9'd1);

assign ret_6_fu_405_p2 = (zext_ln1346_5_fu_402_p1 + 9'd1);

assign ret_7_fu_363_p2 = (zext_ln1346_6_fu_360_p1 + 9'd1);

assign ret_8_fu_321_p2 = (zext_ln1346_7_fu_318_p1 + 9'd1);

assign ret_fu_227_p2 = (zext_ln215_1_fu_219_p1 - zext_ln215_fu_223_p1);

assign rltAddr_fu_289_p4 = {{rltDstIdx_fu_277_p3[14:3]}};

assign rltDstIdx_fu_277_p3 = ((tmp_6_fu_237_p3[0:0] == 1'b1) ? sub_ln1364_1_fu_261_p2 : trunc_ln1364_2_fu_267_p4);

assign shl_ln1_fu_557_p3 = {{grp_fu_200_p2}, {8'd0}};

assign shl_ln2_fu_515_p3 = {{grp_fu_200_p2}, {16'd0}};

assign shl_ln3_fu_473_p3 = {{grp_fu_200_p2}, {24'd0}};

assign shl_ln4_fu_431_p3 = {{grp_fu_200_p2}, {32'd0}};

assign shl_ln5_fu_389_p3 = {{grp_fu_200_p2}, {40'd0}};

assign shl_ln6_fu_347_p3 = {{grp_fu_200_p2}, {48'd0}};

assign shl_ln_fu_589_p3 = {{grp_fu_200_p2}, {56'd0}};

assign sub_ln1364_1_fu_261_p2 = (15'd0 - trunc_ln1364_1_fu_251_p4);

assign sub_ln1364_fu_245_p2 = (23'd0 - trunc_ln1347_fu_233_p1);

assign tmp_1_fu_495_p4 = {{tmp_dist_q0[23:16]}};

assign tmp_2_fu_453_p4 = {{tmp_dist_q0[31:24]}};

assign tmp_3_fu_411_p4 = {{tmp_dist_q0[39:32]}};

assign tmp_4_fu_369_p4 = {{tmp_dist_q0[47:40]}};

assign tmp_5_fu_327_p4 = {{tmp_dist_q0[55:48]}};

assign tmp_6_fu_237_p3 = ret_fu_227_p2[32'd24];

assign tmp_fu_537_p4 = {{tmp_dist_q0[15:8]}};

assign trunc_ln1347_fu_233_p1 = ret_fu_227_p2[22:0];

assign trunc_ln1364_1_fu_251_p4 = {{sub_ln1364_fu_245_p2[22:8]}};

assign trunc_ln1364_2_fu_267_p4 = {{ret_fu_227_p2[22:8]}};

assign trunc_ln25_fu_285_p1 = rltDstIdx_fu_277_p3[2:0];

assign zext_ln1346_1_fu_570_p1 = srcDist_V_reg_622;

assign zext_ln1346_2_fu_528_p1 = srcDist_V_reg_622;

assign zext_ln1346_3_fu_486_p1 = srcDist_V_reg_622;

assign zext_ln1346_4_fu_444_p1 = srcDist_V_reg_622;

assign zext_ln1346_5_fu_402_p1 = srcDist_V_reg_622;

assign zext_ln1346_6_fu_360_p1 = srcDist_V_reg_622;

assign zext_ln1346_7_fu_318_p1 = srcDist_V_reg_622;

assign zext_ln1346_fu_598_p1 = srcDist_V_reg_622;

assign zext_ln215_1_fu_219_p1 = dstVid_V_fu_215_p1;

assign zext_ln215_fu_223_p1 = peID;

assign zext_ln27_fu_299_p1 = rltAddr_fu_289_p4;

assign zext_ln34_fu_617_p1 = grp_fu_200_p2;

assign zext_ln41_fu_565_p1 = shl_ln1_fu_557_p3;

assign zext_ln48_fu_523_p1 = shl_ln2_fu_515_p3;

assign zext_ln55_fu_481_p1 = shl_ln3_fu_473_p3;

assign zext_ln62_fu_439_p1 = shl_ln4_fu_431_p3;

assign zext_ln69_fu_397_p1 = shl_ln5_fu_389_p3;

assign zext_ln76_fu_355_p1 = shl_ln6_fu_347_p3;

assign zext_ln878_1_fu_579_p1 = dstVal_val_7_V_fu_308_p4;

assign zext_ln878_2_fu_547_p1 = tmp_fu_537_p4;

assign zext_ln878_3_fu_505_p1 = tmp_1_fu_495_p4;

assign zext_ln878_4_fu_463_p1 = tmp_2_fu_453_p4;

assign zext_ln878_5_fu_421_p1 = tmp_3_fu_411_p4;

assign zext_ln878_6_fu_379_p1 = tmp_4_fu_369_p4;

assign zext_ln878_7_fu_337_p1 = tmp_5_fu_327_p4;

assign zext_ln878_fu_607_p1 = dstVal_val_0_V_fu_304_p1;

endmodule //BFS_Gather
