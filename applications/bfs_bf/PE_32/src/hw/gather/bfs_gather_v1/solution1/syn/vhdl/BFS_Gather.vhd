-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
-- Version: 2020.2
-- Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity BFS_Gather is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    peID : IN STD_LOGIC_VECTOR (7 downto 0);
    sw_data : IN STD_LOGIC_VECTOR (31 downto 0);
    exist : OUT STD_LOGIC;
    tmp_dist_address0 : OUT STD_LOGIC_VECTOR (11 downto 0);
    tmp_dist_ce0 : OUT STD_LOGIC;
    tmp_dist_we0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    tmp_dist_d0 : OUT STD_LOGIC_VECTOR (63 downto 0);
    tmp_dist_q0 : IN STD_LOGIC_VECTOR (63 downto 0) );
end;


architecture behav of BFS_Gather is 
    attribute CORE_GENERATION_INFO : STRING;
    attribute CORE_GENERATION_INFO of behav : architecture is
    "BFS_Gather_BFS_Gather,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu280-fsvh2892-2L-e,HLS_INPUT_CLOCK=5.000000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=4.371562,HLS_SYN_LAT=2,HLS_SYN_TPT=2,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=28,HLS_SYN_LUT=496,HLS_VERSION=2020_2}";
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (1 downto 0) := "10";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_5 : STD_LOGIC_VECTOR (2 downto 0) := "101";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_7 : STD_LOGIC_VECTOR (2 downto 0) := "111";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_40 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_const_lv8_20 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_const_lv8_10 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_const_lv8_8 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_const_lv8_4 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_const_lv8_2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_const_lv8_80 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_38 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv32_30 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110000";
    constant ap_const_lv32_37 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000110111";
    constant ap_const_lv48_0 : STD_LOGIC_VECTOR (47 downto 0) := "000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_28 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101000";
    constant ap_const_lv32_2F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101111";
    constant ap_const_lv40_0 : STD_LOGIC_VECTOR (39 downto 0) := "0000000000000000000000000000000000000000";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_lv24_0 : STD_LOGIC_VECTOR (23 downto 0) := "000000000000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv56_0 : STD_LOGIC_VECTOR (55 downto 0) := "00000000000000000000000000000000000000000000000000000000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (1 downto 0) := "01";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal exist_1_data_reg : STD_LOGIC := '0';
    signal exist_1_data_in : STD_LOGIC;
    signal exist_1_vld_reg : STD_LOGIC := '0';
    signal exist_1_vld_in : STD_LOGIC;
    signal exist_1_ack_in : STD_LOGIC;
    signal srcDist_V_reg_622 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal trunc_ln25_fu_285_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln25_reg_635 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_dist_addr_reg_639 : STD_LOGIC_VECTOR (11 downto 0);
    signal icmp_ln878_7_fu_341_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_6_fu_383_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_5_fu_425_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_4_fu_467_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_3_fu_509_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_2_fu_551_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_1_fu_583_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln878_fu_611_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal zext_ln27_fu_299_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal zext_ln76_fu_355_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln69_fu_397_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln62_fu_439_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln55_fu_481_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln48_fu_523_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln41_fu_565_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal shl_ln_fu_589_p3 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln34_fu_617_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal dstVid_V_fu_215_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln215_1_fu_219_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal zext_ln215_fu_223_p1 : STD_LOGIC_VECTOR (24 downto 0);
    signal ret_fu_227_p2 : STD_LOGIC_VECTOR (24 downto 0);
    signal trunc_ln1347_fu_233_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal sub_ln1364_fu_245_p2 : STD_LOGIC_VECTOR (22 downto 0);
    signal trunc_ln1364_1_fu_251_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal tmp_6_fu_237_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln1364_1_fu_261_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln1364_2_fu_267_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal rltDstIdx_fu_277_p3 : STD_LOGIC_VECTOR (14 downto 0);
    signal rltAddr_fu_289_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1346_7_fu_318_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_5_fu_327_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_8_fu_321_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln878_7_fu_337_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_200_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal shl_ln6_fu_347_p3 : STD_LOGIC_VECTOR (55 downto 0);
    signal zext_ln1346_6_fu_360_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_4_fu_369_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_7_fu_363_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln878_6_fu_379_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln5_fu_389_p3 : STD_LOGIC_VECTOR (47 downto 0);
    signal zext_ln1346_5_fu_402_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_3_fu_411_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_6_fu_405_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln878_5_fu_421_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln4_fu_431_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal zext_ln1346_4_fu_444_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_2_fu_453_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_5_fu_447_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln878_4_fu_463_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln3_fu_473_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln1346_3_fu_486_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_1_fu_495_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_4_fu_489_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln878_3_fu_505_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln2_fu_515_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln1346_2_fu_528_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal tmp_fu_537_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_3_fu_531_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln878_2_fu_547_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal shl_ln1_fu_557_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln1346_1_fu_570_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal dstVal_val_7_V_fu_308_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_2_fu_573_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln878_1_fu_579_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1346_fu_598_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal dstVal_val_0_V_fu_304_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ret_1_fu_601_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln878_fu_607_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_idle_pp0_1to1 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_258 : BOOLEAN;
    signal ap_condition_42 : BOOLEAN;
    signal ap_ce_reg : STD_LOGIC;


begin




    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    exist_1_vld_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (ap_const_logic_1 = ap_const_logic_1) and (exist_1_vld_in = ap_const_logic_1) and (exist_1_vld_reg = ap_const_logic_1)) or (not(((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) and (exist_1_vld_in = ap_const_logic_1) and (exist_1_vld_reg = ap_const_logic_0)))) then
                exist_1_data_reg <= exist_1_data_in;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                srcDist_V_reg_622 <= sw_data(31 downto 24);
                tmp_dist_addr_reg_639 <= zext_ln27_fu_299_p1(12 - 1 downto 0);
                trunc_ln25_reg_635 <= trunc_ln25_fu_285_p1;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_block_pp0_stage1_subdone, ap_reset_idle_pp0, ap_idle_pp0_1to1)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start = ap_const_logic_0) and (ap_idle_pp0_1to1 = ap_const_logic_1))) and (ap_reset_idle_pp0 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_reset_idle_pp0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when others =>  
                ap_NS_fsm <= "XX";
        end case;
    end process;
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_enable_reg_pp0_iter1, exist_1_ack_in)
    begin
                ap_block_pp0_stage0_11001 <= ((exist_1_ack_in = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_enable_reg_pp0_iter1, exist_1_ack_in)
    begin
                ap_block_pp0_stage0_subdone <= ((exist_1_ack_in = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state3_pp0_stage0_iter1_assign_proc : process(exist_1_ack_in)
    begin
                ap_block_state3_pp0_stage0_iter1 <= (exist_1_ack_in = ap_const_logic_0);
    end process;


    ap_condition_258_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1)
    begin
                ap_condition_258 <= ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_42_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
                ap_condition_42 <= ((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_done_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to1_assign_proc : process(ap_enable_reg_pp0_iter1)
    begin
        if ((ap_enable_reg_pp0_iter1 = ap_const_logic_0)) then 
            ap_idle_pp0_1to1 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    dstVal_val_0_V_fu_304_p1 <= tmp_dist_q0(8 - 1 downto 0);
    dstVal_val_7_V_fu_308_p4 <= tmp_dist_q0(63 downto 56);
    dstVid_V_fu_215_p1 <= sw_data(24 - 1 downto 0);
    exist <= exist_1_data_reg;

    exist_1_ack_in_assign_proc : process(exist_1_vld_reg)
    begin
        if (((exist_1_vld_reg = ap_const_logic_0) or ((ap_const_logic_1 = ap_const_logic_1) and (exist_1_vld_reg = ap_const_logic_1)))) then 
            exist_1_ack_in <= ap_const_logic_1;
        else 
            exist_1_ack_in <= ap_const_logic_0;
        end if; 
    end process;


    exist_1_data_in_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, trunc_ln25_reg_635, icmp_ln878_7_fu_341_p2, icmp_ln878_6_fu_383_p2, icmp_ln878_5_fu_425_p2, icmp_ln878_4_fu_467_p2, icmp_ln878_3_fu_509_p2, icmp_ln878_2_fu_551_p2, icmp_ln878_1_fu_583_p2, icmp_ln878_fu_611_p2, ap_block_pp0_stage1_01001)
    begin
        if ((((icmp_ln878_7_fu_341_p2 = ap_const_lv1_1) and (trunc_ln25_reg_635 = ap_const_lv3_6) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((trunc_ln25_reg_635 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln878_fu_611_p2 = ap_const_lv1_1)) or ((trunc_ln25_reg_635 = ap_const_lv3_7) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln878_1_fu_583_p2 = ap_const_lv1_1)) or ((trunc_ln25_reg_635 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln878_2_fu_551_p2 = ap_const_lv1_1)) or ((trunc_ln25_reg_635 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln878_3_fu_509_p2 = ap_const_lv1_1)) or ((trunc_ln25_reg_635 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln878_4_fu_467_p2 = ap_const_lv1_1)) or ((trunc_ln25_reg_635 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln878_5_fu_425_p2 = ap_const_lv1_1)) or ((trunc_ln25_reg_635 = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln878_6_fu_383_p2 = ap_const_lv1_1)))) then 
            exist_1_data_in <= ap_const_logic_1;
        elsif ((((icmp_ln878_7_fu_341_p2 = ap_const_lv1_0) and (trunc_ln25_reg_635 = ap_const_lv3_6) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((trunc_ln25_reg_635 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln878_fu_611_p2 = ap_const_lv1_0)) or ((trunc_ln25_reg_635 = ap_const_lv3_7) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln878_1_fu_583_p2 = ap_const_lv1_0)) or ((trunc_ln25_reg_635 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln878_2_fu_551_p2 = ap_const_lv1_0)) or ((trunc_ln25_reg_635 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln878_3_fu_509_p2 = ap_const_lv1_0)) or ((trunc_ln25_reg_635 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln878_4_fu_467_p2 = ap_const_lv1_0)) or ((trunc_ln25_reg_635 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln878_5_fu_425_p2 = ap_const_lv1_0)) or ((trunc_ln25_reg_635 = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage1_01001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln878_6_fu_383_p2 = ap_const_lv1_0)))) then 
            exist_1_data_in <= ap_const_logic_0;
        else 
            exist_1_data_in <= 'X';
        end if; 
    end process;


    exist_1_vld_in_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, trunc_ln25_reg_635, icmp_ln878_7_fu_341_p2, icmp_ln878_6_fu_383_p2, icmp_ln878_5_fu_425_p2, icmp_ln878_4_fu_467_p2, icmp_ln878_3_fu_509_p2, icmp_ln878_2_fu_551_p2, icmp_ln878_1_fu_583_p2, icmp_ln878_fu_611_p2)
    begin
        if ((((icmp_ln878_7_fu_341_p2 = ap_const_lv1_1) and (trunc_ln25_reg_635 = ap_const_lv3_6) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((icmp_ln878_7_fu_341_p2 = ap_const_lv1_0) and (trunc_ln25_reg_635 = ap_const_lv3_6) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((trunc_ln25_reg_635 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln878_fu_611_p2 = ap_const_lv1_1)) or ((trunc_ln25_reg_635 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln878_fu_611_p2 = ap_const_lv1_0)) or ((trunc_ln25_reg_635 = ap_const_lv3_7) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln878_1_fu_583_p2 = ap_const_lv1_1)) or ((trunc_ln25_reg_635 = ap_const_lv3_7) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln878_1_fu_583_p2 = ap_const_lv1_0)) or ((trunc_ln25_reg_635 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln878_2_fu_551_p2 = ap_const_lv1_1)) or ((trunc_ln25_reg_635 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln878_2_fu_551_p2 = ap_const_lv1_0)) or ((trunc_ln25_reg_635 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln878_3_fu_509_p2 = ap_const_lv1_1)) or ((trunc_ln25_reg_635 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln878_3_fu_509_p2 = ap_const_lv1_0)) or ((trunc_ln25_reg_635 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln878_4_fu_467_p2 = ap_const_lv1_1)) or ((trunc_ln25_reg_635 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln878_4_fu_467_p2 = ap_const_lv1_0)) or ((trunc_ln25_reg_635 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln878_5_fu_425_p2 = ap_const_lv1_1)) or ((trunc_ln25_reg_635 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln878_5_fu_425_p2 = ap_const_lv1_0)) or ((trunc_ln25_reg_635 = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln878_6_fu_383_p2 = ap_const_lv1_1)) or ((trunc_ln25_reg_635 = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln878_6_fu_383_p2 = ap_const_lv1_0)))) then 
            exist_1_vld_in <= ap_const_logic_1;
        else 
            exist_1_vld_in <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_200_p2 <= std_logic_vector(unsigned(srcDist_V_reg_622) + unsigned(ap_const_lv8_1));
    icmp_ln878_1_fu_583_p2 <= "1" when (unsigned(ret_2_fu_573_p2) < unsigned(zext_ln878_1_fu_579_p1)) else "0";
    icmp_ln878_2_fu_551_p2 <= "1" when (unsigned(ret_3_fu_531_p2) < unsigned(zext_ln878_2_fu_547_p1)) else "0";
    icmp_ln878_3_fu_509_p2 <= "1" when (unsigned(ret_4_fu_489_p2) < unsigned(zext_ln878_3_fu_505_p1)) else "0";
    icmp_ln878_4_fu_467_p2 <= "1" when (unsigned(ret_5_fu_447_p2) < unsigned(zext_ln878_4_fu_463_p1)) else "0";
    icmp_ln878_5_fu_425_p2 <= "1" when (unsigned(ret_6_fu_405_p2) < unsigned(zext_ln878_5_fu_421_p1)) else "0";
    icmp_ln878_6_fu_383_p2 <= "1" when (unsigned(ret_7_fu_363_p2) < unsigned(zext_ln878_6_fu_379_p1)) else "0";
    icmp_ln878_7_fu_341_p2 <= "1" when (unsigned(ret_8_fu_321_p2) < unsigned(zext_ln878_7_fu_337_p1)) else "0";
    icmp_ln878_fu_611_p2 <= "1" when (unsigned(ret_1_fu_601_p2) < unsigned(zext_ln878_fu_607_p1)) else "0";
    ret_1_fu_601_p2 <= std_logic_vector(unsigned(zext_ln1346_fu_598_p1) + unsigned(ap_const_lv9_1));
    ret_2_fu_573_p2 <= std_logic_vector(unsigned(zext_ln1346_1_fu_570_p1) + unsigned(ap_const_lv9_1));
    ret_3_fu_531_p2 <= std_logic_vector(unsigned(zext_ln1346_2_fu_528_p1) + unsigned(ap_const_lv9_1));
    ret_4_fu_489_p2 <= std_logic_vector(unsigned(zext_ln1346_3_fu_486_p1) + unsigned(ap_const_lv9_1));
    ret_5_fu_447_p2 <= std_logic_vector(unsigned(zext_ln1346_4_fu_444_p1) + unsigned(ap_const_lv9_1));
    ret_6_fu_405_p2 <= std_logic_vector(unsigned(zext_ln1346_5_fu_402_p1) + unsigned(ap_const_lv9_1));
    ret_7_fu_363_p2 <= std_logic_vector(unsigned(zext_ln1346_6_fu_360_p1) + unsigned(ap_const_lv9_1));
    ret_8_fu_321_p2 <= std_logic_vector(unsigned(zext_ln1346_7_fu_318_p1) + unsigned(ap_const_lv9_1));
    ret_fu_227_p2 <= std_logic_vector(unsigned(zext_ln215_1_fu_219_p1) - unsigned(zext_ln215_fu_223_p1));
    rltAddr_fu_289_p4 <= rltDstIdx_fu_277_p3(14 downto 3);
    rltDstIdx_fu_277_p3 <= 
        sub_ln1364_1_fu_261_p2 when (tmp_6_fu_237_p3(0) = '1') else 
        trunc_ln1364_2_fu_267_p4;
    shl_ln1_fu_557_p3 <= (grp_fu_200_p2 & ap_const_lv8_0);
    shl_ln2_fu_515_p3 <= (grp_fu_200_p2 & ap_const_lv16_0);
    shl_ln3_fu_473_p3 <= (grp_fu_200_p2 & ap_const_lv24_0);
    shl_ln4_fu_431_p3 <= (grp_fu_200_p2 & ap_const_lv32_0);
    shl_ln5_fu_389_p3 <= (grp_fu_200_p2 & ap_const_lv40_0);
    shl_ln6_fu_347_p3 <= (grp_fu_200_p2 & ap_const_lv48_0);
    shl_ln_fu_589_p3 <= (grp_fu_200_p2 & ap_const_lv56_0);
    sub_ln1364_1_fu_261_p2 <= std_logic_vector(unsigned(ap_const_lv15_0) - unsigned(trunc_ln1364_1_fu_251_p4));
    sub_ln1364_fu_245_p2 <= std_logic_vector(unsigned(ap_const_lv23_0) - unsigned(trunc_ln1347_fu_233_p1));
    tmp_1_fu_495_p4 <= tmp_dist_q0(23 downto 16);
    tmp_2_fu_453_p4 <= tmp_dist_q0(31 downto 24);
    tmp_3_fu_411_p4 <= tmp_dist_q0(39 downto 32);
    tmp_4_fu_369_p4 <= tmp_dist_q0(47 downto 40);
    tmp_5_fu_327_p4 <= tmp_dist_q0(55 downto 48);
    tmp_6_fu_237_p3 <= ret_fu_227_p2(24 downto 24);

    tmp_dist_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, trunc_ln25_reg_635, tmp_dist_addr_reg_639, icmp_ln878_7_fu_341_p2, icmp_ln878_6_fu_383_p2, icmp_ln878_5_fu_425_p2, icmp_ln878_4_fu_467_p2, icmp_ln878_3_fu_509_p2, icmp_ln878_2_fu_551_p2, icmp_ln878_1_fu_583_p2, icmp_ln878_fu_611_p2, zext_ln27_fu_299_p1, ap_block_pp0_stage0, ap_block_pp0_stage1)
    begin
        if ((((icmp_ln878_7_fu_341_p2 = ap_const_lv1_1) and (trunc_ln25_reg_635 = ap_const_lv3_6) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((trunc_ln25_reg_635 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln878_fu_611_p2 = ap_const_lv1_1)) or ((trunc_ln25_reg_635 = ap_const_lv3_7) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln878_1_fu_583_p2 = ap_const_lv1_1)) or ((trunc_ln25_reg_635 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln878_2_fu_551_p2 = ap_const_lv1_1)) or ((trunc_ln25_reg_635 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln878_3_fu_509_p2 = ap_const_lv1_1)) or ((trunc_ln25_reg_635 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln878_4_fu_467_p2 = ap_const_lv1_1)) or ((trunc_ln25_reg_635 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln878_5_fu_425_p2 = ap_const_lv1_1)) or ((trunc_ln25_reg_635 = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln878_6_fu_383_p2 = ap_const_lv1_1)))) then 
            tmp_dist_address0 <= tmp_dist_addr_reg_639;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            tmp_dist_address0 <= zext_ln27_fu_299_p1(12 - 1 downto 0);
        else 
            tmp_dist_address0 <= "XXXXXXXXXXXX";
        end if; 
    end process;


    tmp_dist_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, ap_block_pp0_stage0_11001, trunc_ln25_reg_635, icmp_ln878_7_fu_341_p2, icmp_ln878_6_fu_383_p2, icmp_ln878_5_fu_425_p2, icmp_ln878_4_fu_467_p2, icmp_ln878_3_fu_509_p2, icmp_ln878_2_fu_551_p2, icmp_ln878_1_fu_583_p2, icmp_ln878_fu_611_p2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln878_7_fu_341_p2 = ap_const_lv1_1) and (trunc_ln25_reg_635 = ap_const_lv3_6) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((trunc_ln25_reg_635 = ap_const_lv3_0) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln878_fu_611_p2 = ap_const_lv1_1)) or ((trunc_ln25_reg_635 = ap_const_lv3_7) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln878_1_fu_583_p2 = ap_const_lv1_1)) or ((trunc_ln25_reg_635 = ap_const_lv3_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln878_2_fu_551_p2 = ap_const_lv1_1)) or ((trunc_ln25_reg_635 = ap_const_lv3_2) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln878_3_fu_509_p2 = ap_const_lv1_1)) or ((trunc_ln25_reg_635 = ap_const_lv3_3) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln878_4_fu_467_p2 = ap_const_lv1_1)) or ((trunc_ln25_reg_635 = ap_const_lv3_4) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln878_5_fu_425_p2 = ap_const_lv1_1)) or ((trunc_ln25_reg_635 = ap_const_lv3_5) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln878_6_fu_383_p2 = ap_const_lv1_1)))) then 
            tmp_dist_ce0 <= ap_const_logic_1;
        else 
            tmp_dist_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    tmp_dist_d0_assign_proc : process(trunc_ln25_reg_635, icmp_ln878_7_fu_341_p2, icmp_ln878_6_fu_383_p2, icmp_ln878_5_fu_425_p2, icmp_ln878_4_fu_467_p2, icmp_ln878_3_fu_509_p2, icmp_ln878_2_fu_551_p2, icmp_ln878_1_fu_583_p2, icmp_ln878_fu_611_p2, zext_ln76_fu_355_p1, zext_ln69_fu_397_p1, zext_ln62_fu_439_p1, zext_ln55_fu_481_p1, zext_ln48_fu_523_p1, zext_ln41_fu_565_p1, shl_ln_fu_589_p3, zext_ln34_fu_617_p1, ap_condition_258)
    begin
        if ((ap_const_boolean_1 = ap_condition_258)) then
            if (((trunc_ln25_reg_635 = ap_const_lv3_0) and (icmp_ln878_fu_611_p2 = ap_const_lv1_1))) then 
                tmp_dist_d0 <= zext_ln34_fu_617_p1;
            elsif (((trunc_ln25_reg_635 = ap_const_lv3_7) and (icmp_ln878_1_fu_583_p2 = ap_const_lv1_1))) then 
                tmp_dist_d0 <= shl_ln_fu_589_p3;
            elsif (((trunc_ln25_reg_635 = ap_const_lv3_1) and (icmp_ln878_2_fu_551_p2 = ap_const_lv1_1))) then 
                tmp_dist_d0 <= zext_ln41_fu_565_p1;
            elsif (((trunc_ln25_reg_635 = ap_const_lv3_2) and (icmp_ln878_3_fu_509_p2 = ap_const_lv1_1))) then 
                tmp_dist_d0 <= zext_ln48_fu_523_p1;
            elsif (((trunc_ln25_reg_635 = ap_const_lv3_3) and (icmp_ln878_4_fu_467_p2 = ap_const_lv1_1))) then 
                tmp_dist_d0 <= zext_ln55_fu_481_p1;
            elsif (((trunc_ln25_reg_635 = ap_const_lv3_4) and (icmp_ln878_5_fu_425_p2 = ap_const_lv1_1))) then 
                tmp_dist_d0 <= zext_ln62_fu_439_p1;
            elsif (((trunc_ln25_reg_635 = ap_const_lv3_5) and (icmp_ln878_6_fu_383_p2 = ap_const_lv1_1))) then 
                tmp_dist_d0 <= zext_ln69_fu_397_p1;
            elsif (((icmp_ln878_7_fu_341_p2 = ap_const_lv1_1) and (trunc_ln25_reg_635 = ap_const_lv3_6))) then 
                tmp_dist_d0 <= zext_ln76_fu_355_p1;
            else 
                tmp_dist_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            tmp_dist_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    tmp_dist_we0_assign_proc : process(trunc_ln25_reg_635, icmp_ln878_7_fu_341_p2, icmp_ln878_6_fu_383_p2, icmp_ln878_5_fu_425_p2, icmp_ln878_4_fu_467_p2, icmp_ln878_3_fu_509_p2, icmp_ln878_2_fu_551_p2, icmp_ln878_1_fu_583_p2, icmp_ln878_fu_611_p2, ap_condition_42)
    begin
        if ((ap_const_boolean_1 = ap_condition_42)) then
            if (((trunc_ln25_reg_635 = ap_const_lv3_0) and (icmp_ln878_fu_611_p2 = ap_const_lv1_1))) then 
                tmp_dist_we0 <= ap_const_lv8_1;
            elsif (((trunc_ln25_reg_635 = ap_const_lv3_7) and (icmp_ln878_1_fu_583_p2 = ap_const_lv1_1))) then 
                tmp_dist_we0 <= ap_const_lv8_80;
            elsif (((trunc_ln25_reg_635 = ap_const_lv3_1) and (icmp_ln878_2_fu_551_p2 = ap_const_lv1_1))) then 
                tmp_dist_we0 <= ap_const_lv8_2;
            elsif (((trunc_ln25_reg_635 = ap_const_lv3_2) and (icmp_ln878_3_fu_509_p2 = ap_const_lv1_1))) then 
                tmp_dist_we0 <= ap_const_lv8_4;
            elsif (((trunc_ln25_reg_635 = ap_const_lv3_3) and (icmp_ln878_4_fu_467_p2 = ap_const_lv1_1))) then 
                tmp_dist_we0 <= ap_const_lv8_8;
            elsif (((trunc_ln25_reg_635 = ap_const_lv3_4) and (icmp_ln878_5_fu_425_p2 = ap_const_lv1_1))) then 
                tmp_dist_we0 <= ap_const_lv8_10;
            elsif (((trunc_ln25_reg_635 = ap_const_lv3_5) and (icmp_ln878_6_fu_383_p2 = ap_const_lv1_1))) then 
                tmp_dist_we0 <= ap_const_lv8_20;
            elsif (((icmp_ln878_7_fu_341_p2 = ap_const_lv1_1) and (trunc_ln25_reg_635 = ap_const_lv3_6))) then 
                tmp_dist_we0 <= ap_const_lv8_40;
            else 
                tmp_dist_we0 <= ap_const_lv8_0;
            end if;
        else 
            tmp_dist_we0 <= ap_const_lv8_0;
        end if; 
    end process;

    tmp_fu_537_p4 <= tmp_dist_q0(15 downto 8);
    trunc_ln1347_fu_233_p1 <= ret_fu_227_p2(23 - 1 downto 0);
    trunc_ln1364_1_fu_251_p4 <= sub_ln1364_fu_245_p2(22 downto 8);
    trunc_ln1364_2_fu_267_p4 <= ret_fu_227_p2(22 downto 8);
    trunc_ln25_fu_285_p1 <= rltDstIdx_fu_277_p3(3 - 1 downto 0);
    zext_ln1346_1_fu_570_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(srcDist_V_reg_622),9));
    zext_ln1346_2_fu_528_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(srcDist_V_reg_622),9));
    zext_ln1346_3_fu_486_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(srcDist_V_reg_622),9));
    zext_ln1346_4_fu_444_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(srcDist_V_reg_622),9));
    zext_ln1346_5_fu_402_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(srcDist_V_reg_622),9));
    zext_ln1346_6_fu_360_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(srcDist_V_reg_622),9));
    zext_ln1346_7_fu_318_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(srcDist_V_reg_622),9));
    zext_ln1346_fu_598_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(srcDist_V_reg_622),9));
    zext_ln215_1_fu_219_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dstVid_V_fu_215_p1),25));
    zext_ln215_fu_223_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(peID),25));
    zext_ln27_fu_299_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(rltAddr_fu_289_p4),64));
    zext_ln34_fu_617_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(grp_fu_200_p2),64));
    zext_ln41_fu_565_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln1_fu_557_p3),64));
    zext_ln48_fu_523_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln2_fu_515_p3),64));
    zext_ln55_fu_481_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln3_fu_473_p3),64));
    zext_ln62_fu_439_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln4_fu_431_p3),64));
    zext_ln69_fu_397_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln5_fu_389_p3),64));
    zext_ln76_fu_355_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln6_fu_347_p3),64));
    zext_ln878_1_fu_579_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dstVal_val_7_V_fu_308_p4),9));
    zext_ln878_2_fu_547_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_537_p4),9));
    zext_ln878_3_fu_505_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_1_fu_495_p4),9));
    zext_ln878_4_fu_463_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_2_fu_453_p4),9));
    zext_ln878_5_fu_421_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_3_fu_411_p4),9));
    zext_ln878_6_fu_379_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_4_fu_369_p4),9));
    zext_ln878_7_fu_337_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_5_fu_327_p4),9));
    zext_ln878_fu_607_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(dstVal_val_0_V_fu_304_p1),9));
end behav;
